{
	"id": "54a8975caacf6835726b868148e6cb6b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"saleIDO\\ZNS.sol": {
				"content": "// File: @openzeppelin/contracts/utils/Context.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\nabstract contract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\r\n            // decrementing then incrementing.\r\n            _balances[to] += amount;\r\n        }\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        unchecked {\r\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\r\n            _balances[account] += amount;\r\n        }\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\r\n            _totalSupply -= amount;\r\n        }\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\n// File: ZNS.sol\r\n\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nabstract contract Nonces {\r\n    /**\r\n     * @dev The nonce used for an `account` is not the expected current nonce.\r\n     */\r\n    error InvalidAccountNonce(address account, uint256 currentNonce);\r\n\r\n    mapping(address account => uint256) private _nonces;\r\n\r\n    /**\r\n     * @dev Returns an the next unused nonce for an address.\r\n     */\r\n    function nonces(address owner) public view virtual returns (uint256) {\r\n        return _nonces[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev Consumes a nonce.\r\n     *\r\n     * Returns the current value and increments nonce.\r\n     */\r\n    function _useNonce(address owner) internal virtual returns (uint256) {\r\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\r\n        // decremented or reset. This guarantees that the nonce never overflows.\r\n        unchecked {\r\n            // It is important to do x++ and not ++x here.\r\n            return _nonces[owner]++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\r\n     */\r\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual returns (uint256) {\r\n        uint256 current = _useNonce(owner);\r\n        if (nonce != current) {\r\n            revert InvalidAccountNonce(owner, current);\r\n        }\r\n        return current;\r\n    }\r\n}\r\n\r\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\r\n    // solhint-disable-next-line var-name-mixedcase\r\n    bytes32 private constant _PERMIT_TYPEHASH =\r\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\r\n\r\n    /**\r\n     * @dev Permit deadline has expired.\r\n     */\r\n    error ERC2612ExpiredSignature(uint256 deadline);\r\n\r\n    /**\r\n     * @dev Mismatched signature.\r\n     */\r\n    error ERC2612InvalidSigner(address signer, address owner);\r\n\r\n    /**\r\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\r\n     *\r\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\r\n     */\r\n    constructor(string memory name) EIP712(name, \"1\") {}\r\n\r\n    /**\r\n     * @dev See {IERC20Permit-permit}.\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) public virtual {\r\n        if (block.timestamp > deadline) {\r\n            revert ERC2612ExpiredSignature(deadline);\r\n        }\r\n\r\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\r\n\r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n\r\n        address signer = ECDSA.recover(hash, v, r, s);\r\n        if (signer != owner) {\r\n            revert ERC2612InvalidSigner(signer, owner);\r\n        }\r\n\r\n        _approve(owner, spender, value);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20Permit-nonces}.\r\n     */\r\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\r\n        return super.nonces(owner);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\r\n        return _domainSeparatorV4();\r\n    }\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\ncontract ZNS is ERC20Permit{\r\n    constructor(uint _totalSuperNum,string memory name,string memory symbol) ERC20Permit(name) ERC20(name,symbol){\r\n        _mint(msg.sender,_totalSuperNum);\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1235:4285  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1235:4285  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209647e625b3a0ca0fdbd8e13e11ff52b4c0d00a4be716aac8c24bcd971b0b219e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209647e625b3a0ca0fdbd8e13e11ff52b4c0d00a4be716aac8c24bcd971b0b219e64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SELFBALANCE 0xE6 0x25 0xB3 LOG0 0xCA 0xF 0xDB 0xD8 0xE1 RETURNDATACOPY GT SELFDESTRUCT MSTORE 0xB4 0xC0 0xD0 EXP 0x4B 0xE7 AND 0xAA 0xC8 0xC2 0x4B 0xCD SWAP8 SHL SIGNEXTEND 0x21 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "1235:3050:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209647e625b3a0ca0fdbd8e13e11ff52b4c0d00a4be716aac8c24bcd971b0b219e64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SELFBALANCE 0xE6 0x25 0xB3 LOG0 0xCA 0xF 0xDB 0xD8 0xE1 RETURNDATACOPY GT SELFDESTRUCT MSTORE 0xB4 0xC0 0xD0 EXP 0x4B 0xE7 AND 0xAA 0xC8 0xC2 0x4B 0xCD SWAP8 SHL SIGNEXTEND 0x21 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "1235:3050:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209647e625b3a0ca0fdbd8e13e11ff52b4c0d00a4be716aac8c24bcd971b0b219e64736f6c63430008140033",
									".code": [
										{
											"begin": 1235,
											"end": 4285,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"saleIDO\\ZNS.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1420:4105  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1420:4105  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e4ee1f80e66ed10e5f28199efbc5b432e261bde933263631f90a00632ec24e0e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e4ee1f80e66ed10e5f28199efbc5b432e261bde933263631f90a00632ec24e0e64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xEE 0x1F DUP1 0xE6 PUSH15 0xD10E5F28199EFBC5B432E261BDE933 0x26 CALLDATASIZE BALANCE 0xF9 EXP STOP PUSH4 0x2EC24E0E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "1420:2685:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e4ee1f80e66ed10e5f28199efbc5b432e261bde933263631f90a00632ec24e0e64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xEE 0x1F DUP1 0xE6 PUSH15 0xD10E5F28199EFBC5B432E261BDE933 0x26 CALLDATASIZE BALANCE 0xF9 EXP STOP PUSH4 0x2EC24E0E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "1420:2685:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e4ee1f80e66ed10e5f28199efbc5b432e261bde933263631f90a00632ec24e0e64736f6c63430008140033",
									".code": [
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"saleIDO\\ZNS.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ee1757957186c8cac1339ced73bcc486fd1fce708e127fff71a3e311619452da64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ee1757957186c8cac1339ced73bcc486fd1fce708e127fff71a3e311619452da64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE OR JUMPI SWAP6 PUSH18 0x86C8CAC1339CED73BCC486FD1FCE708E127F SELFDESTRUCT PUSH18 0xA3E311619452DA64736F6C63430008140033 ",
							"sourceMap": "220:2559:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ee1757957186c8cac1339ced73bcc486fd1fce708e127fff71a3e311619452da64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE OR JUMPI SWAP6 PUSH18 0x86C8CAC1339CED73BCC486FD1FCE708E127F SELFDESTRUCT PUSH18 0xA3E311619452DA64736F6C63430008140033 ",
							"sourceMap": "220:2559:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee1757957186c8cac1339ced73bcc486fd1fce708e127fff71a3e311619452da64736f6c63430008140033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"saleIDO\\ZNS.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":369:9130  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":369:9130  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c0c79d02cc476f8ae9326dbb7c6130b9c521438b572371d9797d29341b44d55464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c0c79d02cc476f8ae9326dbb7c6130b9c521438b572371d9797d29341b44d55464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xC7 SWAP14 MUL 0xCC SELFBALANCE PUSH16 0x8AE9326DBB7C6130B9C521438B572371 0xD9 PUSH26 0x7D29341B44D55464736F6C634300081400330000000000000000 ",
							"sourceMap": "369:8761:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c0c79d02cc476f8ae9326dbb7c6130b9c521438b572371d9797d29341b44d55464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xC7 SWAP14 MUL 0xCC SELFBALANCE PUSH16 0x8AE9326DBB7C6130B9C521438B572371 0xD9 PUSH26 0x7D29341B44D55464736F6C634300081400330000000000000000 ",
							"sourceMap": "369:8761:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0c79d02cc476f8ae9326dbb7c6130b9c521438b572371d9797d29341b44d55464736f6c63430008140033",
									".code": [
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"saleIDO\\ZNS.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {EIP-5267}. _Available since v4.9._"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 978,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 980,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201e4c6c0359dc04fcc6f7a8e3b137d89d8979a9b9a9eb658be19203c3ff5bbbb064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201e4c6c0359dc04fcc6f7a8e3b137d89d8979a9b9a9eb658be19203c3ff5bbbb064736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0x4C PUSH13 0x359DC04FCC6F7A8E3B137D89D DUP10 PUSH26 0xA9B9A9EB658BE19203C3FF5BBBB064736F6C6343000814003300 ",
							"sourceMap": "202:12582:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201e4c6c0359dc04fcc6f7a8e3b137d89d8979a9b9a9eb658be19203c3ff5bbbb064736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0x4C PUSH13 0x359DC04FCC6F7A8E3B137D89D DUP10 PUSH26 0xA9B9A9EB658BE19203C3FF5BBBB064736F6C6343000814003300 ",
							"sourceMap": "202:12582:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e4c6c0359dc04fcc6f7a8e3b137d89d8979a9b9a9eb658be19203c3ff5bbbb064736f6c63430008140033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"saleIDO\\ZNS.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220326da03e3eeb5c93b2c37839d7438240351e4068c9c750e92fff469f27049f5d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220326da03e3eeb5c93b2c37839d7438240351e4068c9c750e92fff469f27049f5d64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN PUSH14 0xA03E3EEB5C93B2C37839D7438240 CALLDATALOAD 0x1E BLOCKHASH PUSH9 0xC9C750E92FFF469F27 DIV SWAP16 0x5D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "215:1047:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220326da03e3eeb5c93b2c37839d7438240351e4068c9c750e92fff469f27049f5d64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN PUSH14 0xA03E3EEB5C93B2C37839D7438240 CALLDATALOAD 0x1E BLOCKHASH PUSH9 0xC9C750E92FFF469F27 DIV SWAP16 0x5D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "215:1047:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220326da03e3eeb5c93b2c37839d7438240351e4068c9c750e92fff469f27049f5d64736f6c63430008140033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"saleIDO\\ZNS.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"saleIDO\\ZNS.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"saleIDO\\\\ZNS.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"saleIDO\\\\ZNS.sol\":{\"keccak256\":\"0x3ce4d0d564fe15c7065f7bee8030f8d0f8d970bf59f1fba030c4cc10cc95dc91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e1fef31997a7406e34a751531e9239b46e19823552731f2a91f39592db1d154\",\"dweb:/ipfs/QmZ63PqUfcFFDrnoUZE77vCiJn2TtsECeQdywhhWdc1tBn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"saleIDO\\\\ZNS.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"saleIDO\\\\ZNS.sol\":{\"keccak256\":\"0x3ce4d0d564fe15c7065f7bee8030f8d0f8d970bf59f1fba030c4cc10cc95dc91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e1fef31997a7406e34a751531e9239b46e19823552731f2a91f39592db1d154\",\"dweb:/ipfs/QmZ63PqUfcFFDrnoUZE77vCiJn2TtsECeQdywhhWdc1tBn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2254,
								"contract": "saleIDO\\ZNS.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2260,
								"contract": "saleIDO\\ZNS.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2262,
								"contract": "saleIDO\\ZNS.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2264,
								"contract": "saleIDO\\ZNS.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2266,
								"contract": "saleIDO\\ZNS.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"eip712Domain()": {
								"details": "See {EIP-5267}. _Available since v4.9._"
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC20Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC20Permit-permit}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"eip712Domain()": "84b0196e",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"saleIDO\\\\ZNS.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"saleIDO\\\\ZNS.sol\":{\"keccak256\":\"0x3ce4d0d564fe15c7065f7bee8030f8d0f8d970bf59f1fba030c4cc10cc95dc91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e1fef31997a7406e34a751531e9239b46e19823552731f2a91f39592db1d154\",\"dweb:/ipfs/QmZ63PqUfcFFDrnoUZE77vCiJn2TtsECeQdywhhWdc1tBn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2254,
								"contract": "saleIDO\\ZNS.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2260,
								"contract": "saleIDO\\ZNS.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2262,
								"contract": "saleIDO\\ZNS.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2264,
								"contract": "saleIDO\\ZNS.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2266,
								"contract": "saleIDO\\ZNS.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 978,
								"contract": "saleIDO\\ZNS.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 980,
								"contract": "saleIDO\\ZNS.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 2872,
								"contract": "saleIDO\\ZNS.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"saleIDO\\\\ZNS.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"saleIDO\\\\ZNS.sol\":{\"keccak256\":\"0x3ce4d0d564fe15c7065f7bee8030f8d0f8d970bf59f1fba030c4cc10cc95dc91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e1fef31997a7406e34a751531e9239b46e19823552731f2a91f39592db1d154\",\"dweb:/ipfs/QmZ63PqUfcFFDrnoUZE77vCiJn2TtsECeQdywhhWdc1tBn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"saleIDO\\\\ZNS.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"saleIDO\\\\ZNS.sol\":{\"keccak256\":\"0x3ce4d0d564fe15c7065f7bee8030f8d0f8d970bf59f1fba030c4cc10cc95dc91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e1fef31997a7406e34a751531e9239b46e19823552731f2a91f39592db1d154\",\"dweb:/ipfs/QmZ63PqUfcFFDrnoUZE77vCiJn2TtsECeQdywhhWdc1tBn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"saleIDO\\\\ZNS.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"saleIDO\\\\ZNS.sol\":{\"keccak256\":\"0x3ce4d0d564fe15c7065f7bee8030f8d0f8d970bf59f1fba030c4cc10cc95dc91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e1fef31997a7406e34a751531e9239b46e19823552731f2a91f39592db1d154\",\"dweb:/ipfs/QmZ63PqUfcFFDrnoUZE77vCiJn2TtsECeQdywhhWdc1tBn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns an the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns an the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"saleIDO\\\\ZNS.sol\":\"Nonces\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"saleIDO\\\\ZNS.sol\":{\"keccak256\":\"0x3ce4d0d564fe15c7065f7bee8030f8d0f8d970bf59f1fba030c4cc10cc95dc91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e1fef31997a7406e34a751531e9239b46e19823552731f2a91f39592db1d154\",\"dweb:/ipfs/QmZ63PqUfcFFDrnoUZE77vCiJn2TtsECeQdywhhWdc1tBn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2872,
								"contract": "saleIDO\\ZNS.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ZNS": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_totalSuperNum",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"eip712Domain()": {
								"details": "See {EIP-5267}. _Available since v4.9._"
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC20Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC20Permit-permit}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"saleIDO\\\\ZNS.sol\":23593:23792  contract ZNS is ERC20Permit{... */\n  mstore(0x40, 0x0160)\n    /* \"saleIDO\\\\ZNS.sol\":23627:23787  constructor(uint _totalSuperNum,string memory name,string memory symbol) ERC20Permit(name) ERC20(name,symbol){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"saleIDO\\\\ZNS.sol\":23712:23716  name */\n  dup2\n    /* \"saleIDO\\\\ZNS.sol\":22323:22327  name */\n  dup1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3178:3609  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"saleIDO\\\\ZNS.sol\":23724:23728  name */\n  dup5\n    /* \"saleIDO\\\\ZNS.sol\":23729:23735  symbol */\n  dup5\n    /* \"saleIDO\\\\ZNS.sol\":6553:6558  name_ */\n  dup2\n    /* \"saleIDO\\\\ZNS.sol\":6545:6550  _name */\n  0x03\n    /* \"saleIDO\\\\ZNS.sol\":6545:6558  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"saleIDO\\\\ZNS.sol\":6579:6586  symbol_ */\n  dup1\n    /* \"saleIDO\\\\ZNS.sol\":6569:6576  _symbol */\n  0x04\n    /* \"saleIDO\\\\ZNS.sol\":6569:6586  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"saleIDO\\\\ZNS.sol\":6478:6594  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3251:3296  name.toShortStringWithFallback(_nameFallback) */\n  tag_13\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3282:3295  _nameFallback */\n  0x05\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3251:3255  name */\n  dup4\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3251:3281  name.toShortStringWithFallback */\n  shl(0x20, tag_14)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3251:3296  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3243:3296  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3317:3368  version.toShortStringWithFallback(_versionFallback) */\n  tag_15\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3351:3367  _versionFallback */\n  0x06\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3317:3324  version */\n  dup3\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3317:3350  version.toShortStringWithFallback */\n  shl(0x20, tag_14)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3317:3368  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3306:3368  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3408:3412  name */\n  dup2\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3392:3414  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3378:3414  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3457:3464  version */\n  dup1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3441:3466  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3424:3466  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3494:3507  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3477:3507  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3542:3565  _buildDomainSeparator() */\n  tag_16\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3542:3563  _buildDomainSeparator */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3542:3565  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3517:3565  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3597:3601  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3575:3602  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3178:3609  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"saleIDO\\\\ZNS.sol\":22284:22336  constructor(string memory name) EIP712(name, \"1\") {} */\n  pop\n    /* \"saleIDO\\\\ZNS.sol\":23747:23779  _mint(msg.sender,_totalSuperNum) */\n  tag_20\n    /* \"saleIDO\\\\ZNS.sol\":23753:23763  msg.sender */\n  caller\n    /* \"saleIDO\\\\ZNS.sol\":23764:23778  _totalSuperNum */\n  dup5\n    /* \"saleIDO\\\\ZNS.sol\":23747:23752  _mint */\n  shl(0x20, tag_21)\n    /* \"saleIDO\\\\ZNS.sol\":23747:23779  _mint(msg.sender,_totalSuperNum) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"saleIDO\\\\ZNS.sol\":23627:23787  constructor(uint _totalSuperNum,string memory name,string memory symbol) ERC20Permit(name) ERC20(name,symbol){... */\n  pop\n  pop\n  pop\n    /* \"saleIDO\\\\ZNS.sol\":23593:23792  contract ZNS is ERC20Permit{... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2895:3236  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2991:3002  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3040:3042  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3024:3029  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3018:3037  bytes(value).length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3018:3042  bytes(value).length < 32 */\n  lt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3014:3230  if (bytes(value).length < 32) {... */\n  iszero\n  tag_24\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3065:3085  toShortString(value) */\n  tag_25\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3079:3084  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3065:3078  toShortString */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3065:3085  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3058:3085  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3014:3230  if (bytes(value).length < 32) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3157:3162  value */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3116:3148  StorageSlot.getStringSlot(store) */\n  tag_28\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3142:3147  store */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3116:3141  StorageSlot.getStringSlot */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3116:3148  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3116:3154  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3116:3162  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_30\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_30:\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1371:1437  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3200:3218  _FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3176:3219  return ShortString.wrap(_FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2895:3236  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_23:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3963:4143  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4018:4025  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":1929:2024  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4077:4088  _hashedName */\n  mload(0xe0)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4090:4104  _hashedVersion */\n  mload(0x0100)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4106:4119  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4129:4133  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4054:4135  abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_32\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4044:4136  keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4037:4136  return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3963:4143  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"saleIDO\\\\ZNS.sol\":13274:13822  function _mint(address account, uint256 amount) internal virtual {... */\ntag_21:\n    /* \"saleIDO\\\\ZNS.sol\":13377:13378  0 */\n  0x00\n    /* \"saleIDO\\\\ZNS.sol\":13358:13379  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"saleIDO\\\\ZNS.sol\":13358:13365  account */\n  dup3\n    /* \"saleIDO\\\\ZNS.sol\":13358:13379  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"saleIDO\\\\ZNS.sol\":13350:13415  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_35\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_35:\n    /* \"saleIDO\\\\ZNS.sol\":13428:13477  _beforeTokenTransfer(address(0), account, amount) */\n  tag_38\n    /* \"saleIDO\\\\ZNS.sol\":13457:13458  0 */\n  0x00\n    /* \"saleIDO\\\\ZNS.sol\":13461:13468  account */\n  dup4\n    /* \"saleIDO\\\\ZNS.sol\":13470:13476  amount */\n  dup4\n    /* \"saleIDO\\\\ZNS.sol\":13428:13448  _beforeTokenTransfer */\n  shl(0x20, tag_39)\n    /* \"saleIDO\\\\ZNS.sol\":13428:13477  _beforeTokenTransfer(address(0), account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"saleIDO\\\\ZNS.sol\":13506:13512  amount */\n  dup1\n    /* \"saleIDO\\\\ZNS.sol\":13490:13502  _totalSupply */\n  0x02\n  0x00\n    /* \"saleIDO\\\\ZNS.sol\":13490:13512  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"saleIDO\\\\ZNS.sol\":13683:13689  amount */\n  dup1\n    /* \"saleIDO\\\\ZNS.sol\":13661:13670  _balances */\n  0x00\n    /* \"saleIDO\\\\ZNS.sol\":13661:13679  _balances[account] */\n  dup1\n    /* \"saleIDO\\\\ZNS.sol\":13671:13678  account */\n  dup5\n    /* \"saleIDO\\\\ZNS.sol\":13661:13679  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"saleIDO\\\\ZNS.sol\":13661:13689  _balances[account] += amount */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"saleIDO\\\\ZNS.sol\":13737:13744  account */\n  dup2\n    /* \"saleIDO\\\\ZNS.sol\":13716:13753  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"saleIDO\\\\ZNS.sol\":13733:13734  0 */\n  0x00\n    /* \"saleIDO\\\\ZNS.sol\":13716:13753  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"saleIDO\\\\ZNS.sol\":13746:13752  amount */\n  dup4\n    /* \"saleIDO\\\\ZNS.sol\":13716:13753  Transfer(address(0), account, amount) */\n  mload(0x40)\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"saleIDO\\\\ZNS.sol\":13766:13814  _afterTokenTransfer(address(0), account, amount) */\n  tag_44\n    /* \"saleIDO\\\\ZNS.sol\":13794:13795  0 */\n  0x00\n    /* \"saleIDO\\\\ZNS.sol\":13798:13805  account */\n  dup4\n    /* \"saleIDO\\\\ZNS.sol\":13807:13813  amount */\n  dup4\n    /* \"saleIDO\\\\ZNS.sol\":13766:13785  _afterTokenTransfer */\n  shl(0x20, tag_45)\n    /* \"saleIDO\\\\ZNS.sol\":13766:13814  _afterTokenTransfer(address(0), account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"saleIDO\\\\ZNS.sol\":13274:13822  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1689:1975  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1754:1765  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1777:1794  bytes memory bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1803:1806  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1777:1807  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1835:1837  31 */\n  0x1f\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1821:1825  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1821:1832  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1821:1837  bstr.length > 31 */\n  gt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1817:1889  if (bstr.length > 31) {... */\n  iszero\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1874:1877  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1860:1878  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_48\n  swap2\n  swap1\n  tag_49\n  jump\t// in\ntag_48:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1817:1889  if (bstr.length > 31) {... */\ntag_47:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1955:1959  bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1955:1966  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1946:1950  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1938:1951  bytes32(bstr) */\n  tag_50\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1930:1952  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1930:1966  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1922:1967  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1898:1968  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1689:1975  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3310:3512  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3378:3398  StringSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3486:3496  store.slot */\n  dup2\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3476:3496  r.slot := store.slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3310:3512  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"saleIDO\\\\ZNS.sol\":16992:17117  function _beforeTokenTransfer(... */\ntag_39:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"saleIDO\\\\ZNS.sol\":17721:17845  function _afterTokenTransfer(... */\ntag_45:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_55:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_56:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_57:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_58:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_59:\n    /* \"#utility.yul\":490:514   */\n  tag_109\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_58\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_110\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_110:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_60:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_112\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_59\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:811   */\ntag_61:\n    /* \"#utility.yul\":803:804   */\n  0x00\n    /* \"#utility.yul\":800:801   */\n  dup1\n    /* \"#utility.yul\":793:805   */\n  revert\n    /* \"#utility.yul\":817:934   */\ntag_62:\n    /* \"#utility.yul\":926:927   */\n  0x00\n    /* \"#utility.yul\":923:924   */\n  dup1\n    /* \"#utility.yul\":916:928   */\n  revert\n    /* \"#utility.yul\":940:1042   */\ntag_63:\n    /* \"#utility.yul\":981:987   */\n  0x00\n    /* \"#utility.yul\":1032:1034   */\n  0x1f\n    /* \"#utility.yul\":1028:1035   */\n  not\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1016:1021   */\n  dup4\n    /* \"#utility.yul\":1012:1026   */\n  add\n    /* \"#utility.yul\":1008:1036   */\n  and\n    /* \"#utility.yul\":998:1036   */\n  swap1\n  pop\n    /* \"#utility.yul\":940:1042   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1048:1228   */\ntag_64:\n    /* \"#utility.yul\":1096:1173   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1093:1094   */\n  0x00\n    /* \"#utility.yul\":1086:1174   */\n  mstore\n    /* \"#utility.yul\":1193:1197   */\n  0x41\n    /* \"#utility.yul\":1190:1191   */\n  0x04\n    /* \"#utility.yul\":1183:1198   */\n  mstore\n    /* \"#utility.yul\":1217:1221   */\n  0x24\n    /* \"#utility.yul\":1214:1215   */\n  0x00\n    /* \"#utility.yul\":1207:1222   */\n  revert\n    /* \"#utility.yul\":1234:1515   */\ntag_65:\n    /* \"#utility.yul\":1317:1344   */\n  tag_118\n    /* \"#utility.yul\":1339:1343   */\n  dup3\n    /* \"#utility.yul\":1317:1344   */\n  tag_63\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":1309:1315   */\n  dup2\n    /* \"#utility.yul\":1305:1345   */\n  add\n    /* \"#utility.yul\":1447:1453   */\n  dup2\n    /* \"#utility.yul\":1435:1445   */\n  dup2\n    /* \"#utility.yul\":1432:1454   */\n  lt\n    /* \"#utility.yul\":1411:1429   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1399:1409   */\n  dup3\n    /* \"#utility.yul\":1396:1430   */\n  gt\n    /* \"#utility.yul\":1393:1455   */\n  or\n    /* \"#utility.yul\":1390:1478   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":1458:1476   */\n  tag_120\n  tag_64\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1390:1478   */\ntag_119:\n    /* \"#utility.yul\":1498:1508   */\n  dup1\n    /* \"#utility.yul\":1494:1496   */\n  0x40\n    /* \"#utility.yul\":1487:1509   */\n  mstore\n    /* \"#utility.yul\":1277:1515   */\n  pop\n    /* \"#utility.yul\":1234:1515   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1521:1650   */\ntag_66:\n    /* \"#utility.yul\":1555:1561   */\n  0x00\n    /* \"#utility.yul\":1582:1602   */\n  tag_122\n  tag_55\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":1572:1602   */\n  swap1\n  pop\n    /* \"#utility.yul\":1611:1644   */\n  tag_123\n    /* \"#utility.yul\":1639:1643   */\n  dup3\n    /* \"#utility.yul\":1631:1637   */\n  dup3\n    /* \"#utility.yul\":1611:1644   */\n  tag_65\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":1521:1650   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1656:1964   */\ntag_67:\n    /* \"#utility.yul\":1718:1722   */\n  0x00\n    /* \"#utility.yul\":1808:1826   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1827   */\n  gt\n    /* \"#utility.yul\":1794:1850   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":1830:1848   */\n  tag_126\n  tag_64\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":1794:1850   */\ntag_125:\n    /* \"#utility.yul\":1868:1897   */\n  tag_127\n    /* \"#utility.yul\":1890:1896   */\n  dup3\n    /* \"#utility.yul\":1868:1897   */\n  tag_63\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":1860:1897   */\n  swap1\n  pop\n    /* \"#utility.yul\":1952:1956   */\n  0x20\n    /* \"#utility.yul\":1946:1950   */\n  dup2\n    /* \"#utility.yul\":1942:1957   */\n  add\n    /* \"#utility.yul\":1934:1957   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1964   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1970:2216   */\ntag_68:\n    /* \"#utility.yul\":2051:2052   */\n  0x00\n    /* \"#utility.yul\":2061:2174   */\ntag_129:\n    /* \"#utility.yul\":2075:2081   */\n  dup4\n    /* \"#utility.yul\":2072:2073   */\n  dup2\n    /* \"#utility.yul\":2069:2082   */\n  lt\n    /* \"#utility.yul\":2061:2174   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":2160:2161   */\n  dup1\n    /* \"#utility.yul\":2155:2158   */\n  dup3\n    /* \"#utility.yul\":2151:2162   */\n  add\n    /* \"#utility.yul\":2145:2163   */\n  mload\n    /* \"#utility.yul\":2141:2142   */\n  dup2\n    /* \"#utility.yul\":2136:2139   */\n  dup5\n    /* \"#utility.yul\":2132:2143   */\n  add\n    /* \"#utility.yul\":2125:2164   */\n  mstore\n    /* \"#utility.yul\":2097:2099   */\n  0x20\n    /* \"#utility.yul\":2094:2095   */\n  dup2\n    /* \"#utility.yul\":2090:2100   */\n  add\n    /* \"#utility.yul\":2085:2100   */\n  swap1\n  pop\n    /* \"#utility.yul\":2061:2174   */\n  jump(tag_129)\ntag_131:\n    /* \"#utility.yul\":2208:2209   */\n  0x00\n    /* \"#utility.yul\":2199:2205   */\n  dup5\n    /* \"#utility.yul\":2194:2197   */\n  dup5\n    /* \"#utility.yul\":2190:2206   */\n  add\n    /* \"#utility.yul\":2183:2210   */\n  mstore\n    /* \"#utility.yul\":2032:2216   */\n  pop\n    /* \"#utility.yul\":1970:2216   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2222:2656   */\ntag_69:\n    /* \"#utility.yul\":2311:2316   */\n  0x00\n    /* \"#utility.yul\":2336:2402   */\n  tag_133\n    /* \"#utility.yul\":2352:2401   */\n  tag_134\n    /* \"#utility.yul\":2394:2400   */\n  dup5\n    /* \"#utility.yul\":2352:2401   */\n  tag_67\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":2336:2402   */\n  tag_66\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":2327:2402   */\n  swap1\n  pop\n    /* \"#utility.yul\":2425:2431   */\n  dup3\n    /* \"#utility.yul\":2418:2423   */\n  dup2\n    /* \"#utility.yul\":2411:2432   */\n  mstore\n    /* \"#utility.yul\":2463:2467   */\n  0x20\n    /* \"#utility.yul\":2456:2461   */\n  dup2\n    /* \"#utility.yul\":2452:2468   */\n  add\n    /* \"#utility.yul\":2501:2504   */\n  dup5\n    /* \"#utility.yul\":2492:2498   */\n  dup5\n    /* \"#utility.yul\":2487:2490   */\n  dup5\n    /* \"#utility.yul\":2483:2499   */\n  add\n    /* \"#utility.yul\":2480:2505   */\n  gt\n    /* \"#utility.yul\":2477:2589   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":2508:2587   */\n  tag_136\n  tag_62\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":2477:2589   */\ntag_135:\n    /* \"#utility.yul\":2598:2650   */\n  tag_137\n    /* \"#utility.yul\":2643:2649   */\n  dup5\n    /* \"#utility.yul\":2638:2641   */\n  dup3\n    /* \"#utility.yul\":2633:2636   */\n  dup6\n    /* \"#utility.yul\":2598:2650   */\n  tag_68\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":2317:2656   */\n  pop\n    /* \"#utility.yul\":2222:2656   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2676:3031   */\ntag_70:\n    /* \"#utility.yul\":2743:2748   */\n  0x00\n    /* \"#utility.yul\":2792:2795   */\n  dup3\n    /* \"#utility.yul\":2785:2789   */\n  0x1f\n    /* \"#utility.yul\":2777:2783   */\n  dup4\n    /* \"#utility.yul\":2773:2790   */\n  add\n    /* \"#utility.yul\":2769:2796   */\n  slt\n    /* \"#utility.yul\":2759:2881   */\n  tag_139\n  jumpi\n    /* \"#utility.yul\":2800:2879   */\n  tag_140\n  tag_61\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":2759:2881   */\ntag_139:\n    /* \"#utility.yul\":2910:2916   */\n  dup2\n    /* \"#utility.yul\":2904:2917   */\n  mload\n    /* \"#utility.yul\":2935:3025   */\n  tag_141\n    /* \"#utility.yul\":3021:3024   */\n  dup5\n    /* \"#utility.yul\":3013:3019   */\n  dup3\n    /* \"#utility.yul\":3006:3010   */\n  0x20\n    /* \"#utility.yul\":2998:3004   */\n  dup7\n    /* \"#utility.yul\":2994:3011   */\n  add\n    /* \"#utility.yul\":2935:3025   */\n  tag_69\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":2926:3025   */\n  swap2\n  pop\n    /* \"#utility.yul\":2749:3031   */\n  pop\n    /* \"#utility.yul\":2676:3031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3037:4046   */\ntag_3:\n    /* \"#utility.yul\":3145:3151   */\n  0x00\n    /* \"#utility.yul\":3153:3159   */\n  dup1\n    /* \"#utility.yul\":3161:3167   */\n  0x00\n    /* \"#utility.yul\":3210:3212   */\n  0x60\n    /* \"#utility.yul\":3198:3207   */\n  dup5\n    /* \"#utility.yul\":3189:3196   */\n  dup7\n    /* \"#utility.yul\":3185:3208   */\n  sub\n    /* \"#utility.yul\":3181:3213   */\n  slt\n    /* \"#utility.yul\":3178:3297   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":3216:3295   */\n  tag_144\n  tag_56\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3178:3297   */\ntag_143:\n    /* \"#utility.yul\":3336:3337   */\n  0x00\n    /* \"#utility.yul\":3361:3425   */\n  tag_145\n    /* \"#utility.yul\":3417:3424   */\n  dup7\n    /* \"#utility.yul\":3408:3414   */\n  dup3\n    /* \"#utility.yul\":3397:3406   */\n  dup8\n    /* \"#utility.yul\":3393:3415   */\n  add\n    /* \"#utility.yul\":3361:3425   */\n  tag_60\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3351:3425   */\n  swap4\n  pop\n    /* \"#utility.yul\":3307:3435   */\n  pop\n    /* \"#utility.yul\":3495:3497   */\n  0x20\n    /* \"#utility.yul\":3484:3493   */\n  dup5\n    /* \"#utility.yul\":3480:3498   */\n  add\n    /* \"#utility.yul\":3474:3499   */\n  mload\n    /* \"#utility.yul\":3526:3544   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3518:3524   */\n  dup2\n    /* \"#utility.yul\":3515:3545   */\n  gt\n    /* \"#utility.yul\":3512:3629   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":3548:3627   */\n  tag_147\n  tag_57\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":3512:3629   */\ntag_146:\n    /* \"#utility.yul\":3653:3727   */\n  tag_148\n    /* \"#utility.yul\":3719:3726   */\n  dup7\n    /* \"#utility.yul\":3710:3716   */\n  dup3\n    /* \"#utility.yul\":3699:3708   */\n  dup8\n    /* \"#utility.yul\":3695:3717   */\n  add\n    /* \"#utility.yul\":3653:3727   */\n  tag_70\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":3643:3727   */\n  swap3\n  pop\n    /* \"#utility.yul\":3445:3737   */\n  pop\n    /* \"#utility.yul\":3797:3799   */\n  0x40\n    /* \"#utility.yul\":3786:3795   */\n  dup5\n    /* \"#utility.yul\":3782:3800   */\n  add\n    /* \"#utility.yul\":3776:3801   */\n  mload\n    /* \"#utility.yul\":3828:3846   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3820:3826   */\n  dup2\n    /* \"#utility.yul\":3817:3847   */\n  gt\n    /* \"#utility.yul\":3814:3931   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":3850:3929   */\n  tag_150\n  tag_57\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3814:3931   */\ntag_149:\n    /* \"#utility.yul\":3955:4029   */\n  tag_151\n    /* \"#utility.yul\":4021:4028   */\n  dup7\n    /* \"#utility.yul\":4012:4018   */\n  dup3\n    /* \"#utility.yul\":4001:4010   */\n  dup8\n    /* \"#utility.yul\":3997:4019   */\n  add\n    /* \"#utility.yul\":3955:4029   */\n  tag_70\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":3945:4029   */\n  swap2\n  pop\n    /* \"#utility.yul\":3747:4039   */\n  pop\n    /* \"#utility.yul\":3037:4046   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4052:4151   */\ntag_71:\n    /* \"#utility.yul\":4104:4110   */\n  0x00\n    /* \"#utility.yul\":4138:4143   */\n  dup2\n    /* \"#utility.yul\":4132:4144   */\n  mload\n    /* \"#utility.yul\":4122:4144   */\n  swap1\n  pop\n    /* \"#utility.yul\":4052:4151   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4157:4337   */\ntag_72:\n    /* \"#utility.yul\":4205:4282   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4202:4203   */\n  0x00\n    /* \"#utility.yul\":4195:4283   */\n  mstore\n    /* \"#utility.yul\":4302:4306   */\n  0x22\n    /* \"#utility.yul\":4299:4300   */\n  0x04\n    /* \"#utility.yul\":4292:4307   */\n  mstore\n    /* \"#utility.yul\":4326:4330   */\n  0x24\n    /* \"#utility.yul\":4323:4324   */\n  0x00\n    /* \"#utility.yul\":4316:4331   */\n  revert\n    /* \"#utility.yul\":4343:4663   */\ntag_73:\n    /* \"#utility.yul\":4387:4393   */\n  0x00\n    /* \"#utility.yul\":4424:4425   */\n  0x02\n    /* \"#utility.yul\":4418:4422   */\n  dup3\n    /* \"#utility.yul\":4414:4426   */\n  div\n    /* \"#utility.yul\":4404:4426   */\n  swap1\n  pop\n    /* \"#utility.yul\":4471:4472   */\n  0x01\n    /* \"#utility.yul\":4465:4469   */\n  dup3\n    /* \"#utility.yul\":4461:4473   */\n  and\n    /* \"#utility.yul\":4492:4510   */\n  dup1\n    /* \"#utility.yul\":4482:4563   */\n  tag_155\n  jumpi\n    /* \"#utility.yul\":4548:4552   */\n  0x7f\n    /* \"#utility.yul\":4540:4546   */\n  dup3\n    /* \"#utility.yul\":4536:4553   */\n  and\n    /* \"#utility.yul\":4526:4553   */\n  swap2\n  pop\n    /* \"#utility.yul\":4482:4563   */\ntag_155:\n    /* \"#utility.yul\":4610:4612   */\n  0x20\n    /* \"#utility.yul\":4602:4608   */\n  dup3\n    /* \"#utility.yul\":4599:4613   */\n  lt\n    /* \"#utility.yul\":4579:4597   */\n  dup2\n    /* \"#utility.yul\":4576:4614   */\n  sub\n    /* \"#utility.yul\":4573:4657   */\n  tag_156\n  jumpi\n    /* \"#utility.yul\":4629:4647   */\n  tag_157\n  tag_72\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":4573:4657   */\ntag_156:\n    /* \"#utility.yul\":4394:4663   */\n  pop\n    /* \"#utility.yul\":4343:4663   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4669:4810   */\ntag_74:\n    /* \"#utility.yul\":4718:4722   */\n  0x00\n    /* \"#utility.yul\":4741:4744   */\n  dup2\n    /* \"#utility.yul\":4733:4744   */\n  swap1\n  pop\n    /* \"#utility.yul\":4764:4767   */\n  dup2\n    /* \"#utility.yul\":4761:4762   */\n  0x00\n    /* \"#utility.yul\":4754:4768   */\n  mstore\n    /* \"#utility.yul\":4798:4802   */\n  0x20\n    /* \"#utility.yul\":4795:4796   */\n  0x00\n    /* \"#utility.yul\":4785:4803   */\n  keccak256\n    /* \"#utility.yul\":4777:4803   */\n  swap1\n  pop\n    /* \"#utility.yul\":4669:4810   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4816:4909   */\ntag_75:\n    /* \"#utility.yul\":4853:4859   */\n  0x00\n    /* \"#utility.yul\":4900:4902   */\n  0x20\n    /* \"#utility.yul\":4895:4897   */\n  0x1f\n    /* \"#utility.yul\":4888:4893   */\n  dup4\n    /* \"#utility.yul\":4884:4898   */\n  add\n    /* \"#utility.yul\":4880:4903   */\n  div\n    /* \"#utility.yul\":4870:4903   */\n  swap1\n  pop\n    /* \"#utility.yul\":4816:4909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4915:5022   */\ntag_76:\n    /* \"#utility.yul\":4959:4967   */\n  0x00\n    /* \"#utility.yul\":5009:5014   */\n  dup3\n    /* \"#utility.yul\":5003:5007   */\n  dup3\n    /* \"#utility.yul\":4999:5015   */\n  shl\n    /* \"#utility.yul\":4978:5015   */\n  swap1\n  pop\n    /* \"#utility.yul\":4915:5022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:5421   */\ntag_77:\n    /* \"#utility.yul\":5097:5103   */\n  0x00\n    /* \"#utility.yul\":5147:5148   */\n  0x08\n    /* \"#utility.yul\":5135:5145   */\n  dup4\n    /* \"#utility.yul\":5131:5149   */\n  mul\n    /* \"#utility.yul\":5170:5267   */\n  tag_162\n    /* \"#utility.yul\":5200:5266   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5189:5198   */\n  dup3\n    /* \"#utility.yul\":5170:5267   */\n  tag_76\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5288:5327   */\n  tag_163\n    /* \"#utility.yul\":5318:5326   */\n  dup7\n    /* \"#utility.yul\":5307:5316   */\n  dup4\n    /* \"#utility.yul\":5288:5327   */\n  tag_76\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":5276:5327   */\n  swap6\n  pop\n    /* \"#utility.yul\":5360:5364   */\n  dup1\n    /* \"#utility.yul\":5356:5365   */\n  not\n    /* \"#utility.yul\":5349:5354   */\n  dup5\n    /* \"#utility.yul\":5345:5366   */\n  and\n    /* \"#utility.yul\":5336:5366   */\n  swap4\n  pop\n    /* \"#utility.yul\":5409:5413   */\n  dup1\n    /* \"#utility.yul\":5399:5407   */\n  dup7\n    /* \"#utility.yul\":5395:5414   */\n  and\n    /* \"#utility.yul\":5388:5393   */\n  dup5\n    /* \"#utility.yul\":5385:5415   */\n  or\n    /* \"#utility.yul\":5375:5415   */\n  swap3\n  pop\n    /* \"#utility.yul\":5104:5421   */\n  pop\n  pop\n    /* \"#utility.yul\":5028:5421   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5427:5487   */\ntag_78:\n    /* \"#utility.yul\":5455:5458   */\n  0x00\n    /* \"#utility.yul\":5476:5481   */\n  dup2\n    /* \"#utility.yul\":5469:5481   */\n  swap1\n  pop\n    /* \"#utility.yul\":5427:5487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5493:5635   */\ntag_79:\n    /* \"#utility.yul\":5543:5552   */\n  0x00\n    /* \"#utility.yul\":5576:5629   */\n  tag_166\n    /* \"#utility.yul\":5594:5628   */\n  tag_167\n    /* \"#utility.yul\":5603:5627   */\n  tag_168\n    /* \"#utility.yul\":5621:5626   */\n  dup5\n    /* \"#utility.yul\":5603:5627   */\n  tag_58\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5594:5628   */\n  tag_78\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":5576:5629   */\n  tag_58\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":5563:5629   */\n  swap1\n  pop\n    /* \"#utility.yul\":5493:5635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5641:5716   */\ntag_80:\n    /* \"#utility.yul\":5684:5687   */\n  0x00\n    /* \"#utility.yul\":5705:5710   */\n  dup2\n    /* \"#utility.yul\":5698:5710   */\n  swap1\n  pop\n    /* \"#utility.yul\":5641:5716   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5722:5991   */\ntag_81:\n    /* \"#utility.yul\":5832:5871   */\n  tag_171\n    /* \"#utility.yul\":5863:5870   */\n  dup4\n    /* \"#utility.yul\":5832:5871   */\n  tag_79\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":5893:5984   */\n  tag_172\n    /* \"#utility.yul\":5942:5983   */\n  tag_173\n    /* \"#utility.yul\":5966:5982   */\n  dup3\n    /* \"#utility.yul\":5942:5983   */\n  tag_80\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":5934:5940   */\n  dup5\n    /* \"#utility.yul\":5927:5931   */\n  dup5\n    /* \"#utility.yul\":5921:5932   */\n  sload\n    /* \"#utility.yul\":5893:5984   */\n  tag_77\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":5887:5891   */\n  dup3\n    /* \"#utility.yul\":5880:5985   */\n  sstore\n    /* \"#utility.yul\":5798:5991   */\n  pop\n    /* \"#utility.yul\":5722:5991   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5997:6070   */\ntag_82:\n    /* \"#utility.yul\":6042:6045   */\n  0x00\n    /* \"#utility.yul\":5997:6070   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6076:6265   */\ntag_83:\n    /* \"#utility.yul\":6153:6185   */\n  tag_176\n  tag_82\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6194:6259   */\n  tag_177\n    /* \"#utility.yul\":6252:6258   */\n  dup2\n    /* \"#utility.yul\":6244:6250   */\n  dup5\n    /* \"#utility.yul\":6238:6242   */\n  dup5\n    /* \"#utility.yul\":6194:6259   */\n  tag_81\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6129:6265   */\n  pop\n    /* \"#utility.yul\":6076:6265   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6271:6457   */\ntag_84:\n    /* \"#utility.yul\":6331:6451   */\ntag_179:\n    /* \"#utility.yul\":6348:6351   */\n  dup2\n    /* \"#utility.yul\":6341:6346   */\n  dup2\n    /* \"#utility.yul\":6338:6352   */\n  lt\n    /* \"#utility.yul\":6331:6451   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":6402:6441   */\n  tag_182\n    /* \"#utility.yul\":6439:6440   */\n  0x00\n    /* \"#utility.yul\":6432:6437   */\n  dup3\n    /* \"#utility.yul\":6402:6441   */\n  tag_83\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":6375:6376   */\n  0x01\n    /* \"#utility.yul\":6368:6373   */\n  dup2\n    /* \"#utility.yul\":6364:6377   */\n  add\n    /* \"#utility.yul\":6355:6377   */\n  swap1\n  pop\n    /* \"#utility.yul\":6331:6451   */\n  jump(tag_179)\ntag_181:\n    /* \"#utility.yul\":6271:6457   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6463:7006   */\ntag_85:\n    /* \"#utility.yul\":6564:6566   */\n  0x1f\n    /* \"#utility.yul\":6559:6562   */\n  dup3\n    /* \"#utility.yul\":6556:6567   */\n  gt\n    /* \"#utility.yul\":6553:6999   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":6598:6636   */\n  tag_185\n    /* \"#utility.yul\":6630:6635   */\n  dup2\n    /* \"#utility.yul\":6598:6636   */\n  tag_74\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":6682:6711   */\n  tag_186\n    /* \"#utility.yul\":6700:6710   */\n  dup5\n    /* \"#utility.yul\":6682:6711   */\n  tag_75\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":6672:6680   */\n  dup2\n    /* \"#utility.yul\":6668:6712   */\n  add\n    /* \"#utility.yul\":6865:6867   */\n  0x20\n    /* \"#utility.yul\":6853:6863   */\n  dup6\n    /* \"#utility.yul\":6850:6868   */\n  lt\n    /* \"#utility.yul\":6847:6896   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":6886:6894   */\n  dup2\n    /* \"#utility.yul\":6871:6894   */\n  swap1\n  pop\n    /* \"#utility.yul\":6847:6896   */\ntag_187:\n    /* \"#utility.yul\":6909:6989   */\n  tag_188\n    /* \"#utility.yul\":6965:6987   */\n  tag_189\n    /* \"#utility.yul\":6983:6986   */\n  dup6\n    /* \"#utility.yul\":6965:6987   */\n  tag_75\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":6955:6963   */\n  dup4\n    /* \"#utility.yul\":6951:6988   */\n  add\n    /* \"#utility.yul\":6938:6949   */\n  dup3\n    /* \"#utility.yul\":6909:6989   */\n  tag_84\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":6568:6999   */\n  pop\n  pop\n    /* \"#utility.yul\":6553:6999   */\ntag_184:\n    /* \"#utility.yul\":6463:7006   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7012:7129   */\ntag_86:\n    /* \"#utility.yul\":7066:7074   */\n  0x00\n    /* \"#utility.yul\":7116:7121   */\n  dup3\n    /* \"#utility.yul\":7110:7114   */\n  dup3\n    /* \"#utility.yul\":7106:7122   */\n  shr\n    /* \"#utility.yul\":7085:7122   */\n  swap1\n  pop\n    /* \"#utility.yul\":7012:7129   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7135:7304   */\ntag_87:\n    /* \"#utility.yul\":7179:7185   */\n  0x00\n    /* \"#utility.yul\":7212:7263   */\n  tag_192\n    /* \"#utility.yul\":7260:7261   */\n  0x00\n    /* \"#utility.yul\":7256:7262   */\n  not\n    /* \"#utility.yul\":7248:7253   */\n  dup5\n    /* \"#utility.yul\":7245:7246   */\n  0x08\n    /* \"#utility.yul\":7241:7254   */\n  mul\n    /* \"#utility.yul\":7212:7263   */\n  tag_86\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":7208:7264   */\n  not\n    /* \"#utility.yul\":7293:7297   */\n  dup1\n    /* \"#utility.yul\":7287:7291   */\n  dup4\n    /* \"#utility.yul\":7283:7298   */\n  and\n    /* \"#utility.yul\":7273:7298   */\n  swap2\n  pop\n    /* \"#utility.yul\":7186:7304   */\n  pop\n    /* \"#utility.yul\":7135:7304   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7309:7604   */\ntag_88:\n    /* \"#utility.yul\":7385:7389   */\n  0x00\n    /* \"#utility.yul\":7531:7560   */\n  tag_194\n    /* \"#utility.yul\":7556:7559   */\n  dup4\n    /* \"#utility.yul\":7550:7554   */\n  dup4\n    /* \"#utility.yul\":7531:7560   */\n  tag_87\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7523:7560   */\n  swap2\n  pop\n    /* \"#utility.yul\":7593:7596   */\n  dup3\n    /* \"#utility.yul\":7590:7591   */\n  0x02\n    /* \"#utility.yul\":7586:7597   */\n  mul\n    /* \"#utility.yul\":7580:7584   */\n  dup3\n    /* \"#utility.yul\":7577:7598   */\n  or\n    /* \"#utility.yul\":7569:7598   */\n  swap1\n  pop\n    /* \"#utility.yul\":7309:7604   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7609:9004   */\ntag_10:\n    /* \"#utility.yul\":7726:7763   */\n  tag_196\n    /* \"#utility.yul\":7759:7762   */\n  dup3\n    /* \"#utility.yul\":7726:7763   */\n  tag_71\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":7828:7846   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7820:7826   */\n  dup2\n    /* \"#utility.yul\":7817:7847   */\n  gt\n    /* \"#utility.yul\":7814:7870   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":7850:7868   */\n  tag_198\n  tag_64\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":7814:7870   */\ntag_197:\n    /* \"#utility.yul\":7894:7932   */\n  tag_199\n    /* \"#utility.yul\":7926:7930   */\n  dup3\n    /* \"#utility.yul\":7920:7931   */\n  sload\n    /* \"#utility.yul\":7894:7932   */\n  tag_73\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":7979:8046   */\n  tag_200\n    /* \"#utility.yul\":8039:8045   */\n  dup3\n    /* \"#utility.yul\":8031:8037   */\n  dup3\n    /* \"#utility.yul\":8025:8029   */\n  dup6\n    /* \"#utility.yul\":7979:8046   */\n  tag_85\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8073:8074   */\n  0x00\n    /* \"#utility.yul\":8097:8101   */\n  0x20\n    /* \"#utility.yul\":8084:8101   */\n  swap1\n  pop\n    /* \"#utility.yul\":8129:8131   */\n  0x1f\n    /* \"#utility.yul\":8121:8127   */\n  dup4\n    /* \"#utility.yul\":8118:8132   */\n  gt\n    /* \"#utility.yul\":8146:8147   */\n  0x01\n    /* \"#utility.yul\":8141:8759   */\n  dup2\n  eq\n  tag_202\n  jumpi\n    /* \"#utility.yul\":8803:8804   */\n  0x00\n    /* \"#utility.yul\":8820:8826   */\n  dup5\n    /* \"#utility.yul\":8817:8894   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":8869:8878   */\n  dup3\n    /* \"#utility.yul\":8864:8867   */\n  dup8\n    /* \"#utility.yul\":8860:8879   */\n  add\n    /* \"#utility.yul\":8854:8880   */\n  mload\n    /* \"#utility.yul\":8845:8880   */\n  swap1\n  pop\n    /* \"#utility.yul\":8817:8894   */\ntag_203:\n    /* \"#utility.yul\":8920:8987   */\n  tag_204\n    /* \"#utility.yul\":8980:8986   */\n  dup6\n    /* \"#utility.yul\":8973:8978   */\n  dup3\n    /* \"#utility.yul\":8920:8987   */\n  tag_88\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":8914:8918   */\n  dup7\n    /* \"#utility.yul\":8907:8988   */\n  sstore\n    /* \"#utility.yul\":8776:8998   */\n  pop\n    /* \"#utility.yul\":8111:8998   */\n  jump(tag_201)\n    /* \"#utility.yul\":8141:8759   */\ntag_202:\n    /* \"#utility.yul\":8193:8197   */\n  0x1f\n    /* \"#utility.yul\":8189:8198   */\n  not\n    /* \"#utility.yul\":8181:8187   */\n  dup5\n    /* \"#utility.yul\":8177:8199   */\n  and\n    /* \"#utility.yul\":8227:8264   */\n  tag_205\n    /* \"#utility.yul\":8259:8263   */\n  dup7\n    /* \"#utility.yul\":8227:8264   */\n  tag_74\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":8286:8287   */\n  0x00\n    /* \"#utility.yul\":8300:8508   */\ntag_206:\n    /* \"#utility.yul\":8314:8321   */\n  dup3\n    /* \"#utility.yul\":8311:8312   */\n  dup2\n    /* \"#utility.yul\":8308:8322   */\n  lt\n    /* \"#utility.yul\":8300:8508   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":8393:8402   */\n  dup5\n    /* \"#utility.yul\":8388:8391   */\n  dup10\n    /* \"#utility.yul\":8384:8403   */\n  add\n    /* \"#utility.yul\":8378:8404   */\n  mload\n    /* \"#utility.yul\":8370:8376   */\n  dup3\n    /* \"#utility.yul\":8363:8405   */\n  sstore\n    /* \"#utility.yul\":8444:8445   */\n  0x01\n    /* \"#utility.yul\":8436:8442   */\n  dup3\n    /* \"#utility.yul\":8432:8446   */\n  add\n    /* \"#utility.yul\":8422:8446   */\n  swap2\n  pop\n    /* \"#utility.yul\":8491:8493   */\n  0x20\n    /* \"#utility.yul\":8480:8489   */\n  dup6\n    /* \"#utility.yul\":8476:8494   */\n  add\n    /* \"#utility.yul\":8463:8494   */\n  swap5\n  pop\n    /* \"#utility.yul\":8337:8341   */\n  0x20\n    /* \"#utility.yul\":8334:8335   */\n  dup2\n    /* \"#utility.yul\":8330:8342   */\n  add\n    /* \"#utility.yul\":8325:8342   */\n  swap1\n  pop\n    /* \"#utility.yul\":8300:8508   */\n  jump(tag_206)\ntag_208:\n    /* \"#utility.yul\":8536:8542   */\n  dup7\n    /* \"#utility.yul\":8527:8534   */\n  dup4\n    /* \"#utility.yul\":8524:8543   */\n  lt\n    /* \"#utility.yul\":8521:8700   */\n  iszero\n  tag_209\n  jumpi\n    /* \"#utility.yul\":8594:8603   */\n  dup5\n    /* \"#utility.yul\":8589:8592   */\n  dup10\n    /* \"#utility.yul\":8585:8604   */\n  add\n    /* \"#utility.yul\":8579:8605   */\n  mload\n    /* \"#utility.yul\":8637:8685   */\n  tag_210\n    /* \"#utility.yul\":8679:8683   */\n  0x1f\n    /* \"#utility.yul\":8671:8677   */\n  dup10\n    /* \"#utility.yul\":8667:8684   */\n  and\n    /* \"#utility.yul\":8656:8665   */\n  dup3\n    /* \"#utility.yul\":8637:8685   */\n  tag_87\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":8629:8635   */\n  dup4\n    /* \"#utility.yul\":8622:8686   */\n  sstore\n    /* \"#utility.yul\":8544:8700   */\n  pop\n    /* \"#utility.yul\":8521:8700   */\ntag_209:\n    /* \"#utility.yul\":8746:8747   */\n  0x01\n    /* \"#utility.yul\":8742:8743   */\n  0x02\n    /* \"#utility.yul\":8734:8740   */\n  dup9\n    /* \"#utility.yul\":8730:8744   */\n  mul\n    /* \"#utility.yul\":8726:8748   */\n  add\n    /* \"#utility.yul\":8720:8724   */\n  dup9\n    /* \"#utility.yul\":8713:8749   */\n  sstore\n    /* \"#utility.yul\":8148:8759   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8111:8998   */\ntag_201:\n  pop\n    /* \"#utility.yul\":7701:9004   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7609:9004   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9010:9087   */\ntag_89:\n    /* \"#utility.yul\":9047:9054   */\n  0x00\n    /* \"#utility.yul\":9076:9081   */\n  dup2\n    /* \"#utility.yul\":9065:9081   */\n  swap1\n  pop\n    /* \"#utility.yul\":9010:9087   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9093:9211   */\ntag_90:\n    /* \"#utility.yul\":9180:9204   */\n  tag_213\n    /* \"#utility.yul\":9198:9203   */\n  dup2\n    /* \"#utility.yul\":9180:9204   */\n  tag_89\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":9175:9178   */\n  dup3\n    /* \"#utility.yul\":9168:9205   */\n  mstore\n    /* \"#utility.yul\":9093:9211   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9217:9335   */\ntag_91:\n    /* \"#utility.yul\":9304:9328   */\n  tag_215\n    /* \"#utility.yul\":9322:9327   */\n  dup2\n    /* \"#utility.yul\":9304:9328   */\n  tag_58\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":9299:9302   */\n  dup3\n    /* \"#utility.yul\":9292:9329   */\n  mstore\n    /* \"#utility.yul\":9217:9335   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9341:9467   */\ntag_92:\n    /* \"#utility.yul\":9378:9385   */\n  0x00\n    /* \"#utility.yul\":9418:9460   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9411:9416   */\n  dup3\n    /* \"#utility.yul\":9407:9461   */\n  and\n    /* \"#utility.yul\":9396:9461   */\n  swap1\n  pop\n    /* \"#utility.yul\":9341:9467   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9473:9569   */\ntag_93:\n    /* \"#utility.yul\":9510:9517   */\n  0x00\n    /* \"#utility.yul\":9539:9563   */\n  tag_218\n    /* \"#utility.yul\":9557:9562   */\n  dup3\n    /* \"#utility.yul\":9539:9563   */\n  tag_92\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":9528:9563   */\n  swap1\n  pop\n    /* \"#utility.yul\":9473:9569   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9575:9693   */\ntag_94:\n    /* \"#utility.yul\":9662:9686   */\n  tag_220\n    /* \"#utility.yul\":9680:9685   */\n  dup2\n    /* \"#utility.yul\":9662:9686   */\n  tag_93\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":9657:9660   */\n  dup3\n    /* \"#utility.yul\":9650:9687   */\n  mstore\n    /* \"#utility.yul\":9575:9693   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9699:10363   */\ntag_33:\n    /* \"#utility.yul\":9904:9908   */\n  0x00\n    /* \"#utility.yul\":9942:9945   */\n  0xa0\n    /* \"#utility.yul\":9931:9940   */\n  dup3\n    /* \"#utility.yul\":9927:9946   */\n  add\n    /* \"#utility.yul\":9919:9946   */\n  swap1\n  pop\n    /* \"#utility.yul\":9956:10027   */\n  tag_222\n    /* \"#utility.yul\":10024:10025   */\n  0x00\n    /* \"#utility.yul\":10013:10022   */\n  dup4\n    /* \"#utility.yul\":10009:10026   */\n  add\n    /* \"#utility.yul\":10000:10006   */\n  dup9\n    /* \"#utility.yul\":9956:10027   */\n  tag_90\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10037:10109   */\n  tag_223\n    /* \"#utility.yul\":10105:10107   */\n  0x20\n    /* \"#utility.yul\":10094:10103   */\n  dup4\n    /* \"#utility.yul\":10090:10108   */\n  add\n    /* \"#utility.yul\":10081:10087   */\n  dup8\n    /* \"#utility.yul\":10037:10109   */\n  tag_90\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":10119:10191   */\n  tag_224\n    /* \"#utility.yul\":10187:10189   */\n  0x40\n    /* \"#utility.yul\":10176:10185   */\n  dup4\n    /* \"#utility.yul\":10172:10190   */\n  add\n    /* \"#utility.yul\":10163:10169   */\n  dup7\n    /* \"#utility.yul\":10119:10191   */\n  tag_90\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":10201:10273   */\n  tag_225\n    /* \"#utility.yul\":10269:10271   */\n  0x60\n    /* \"#utility.yul\":10258:10267   */\n  dup4\n    /* \"#utility.yul\":10254:10272   */\n  add\n    /* \"#utility.yul\":10245:10251   */\n  dup6\n    /* \"#utility.yul\":10201:10273   */\n  tag_91\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":10283:10356   */\n  tag_226\n    /* \"#utility.yul\":10351:10354   */\n  0x80\n    /* \"#utility.yul\":10340:10349   */\n  dup4\n    /* \"#utility.yul\":10336:10355   */\n  add\n    /* \"#utility.yul\":10327:10333   */\n  dup5\n    /* \"#utility.yul\":10283:10356   */\n  tag_94\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":9699:10363   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10369:10538   */\ntag_95:\n    /* \"#utility.yul\":10453:10464   */\n  0x00\n    /* \"#utility.yul\":10487:10493   */\n  dup3\n    /* \"#utility.yul\":10482:10485   */\n  dup3\n    /* \"#utility.yul\":10475:10494   */\n  mstore\n    /* \"#utility.yul\":10527:10531   */\n  0x20\n    /* \"#utility.yul\":10522:10525   */\n  dup3\n    /* \"#utility.yul\":10518:10532   */\n  add\n    /* \"#utility.yul\":10503:10532   */\n  swap1\n  pop\n    /* \"#utility.yul\":10369:10538   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10544:10725   */\ntag_96:\n    /* \"#utility.yul\":10684:10717   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":10680:10681   */\n  0x00\n    /* \"#utility.yul\":10672:10678   */\n  dup3\n    /* \"#utility.yul\":10668:10682   */\n  add\n    /* \"#utility.yul\":10661:10718   */\n  mstore\n    /* \"#utility.yul\":10544:10725   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10731:11097   */\ntag_97:\n    /* \"#utility.yul\":10873:10876   */\n  0x00\n    /* \"#utility.yul\":10894:10961   */\n  tag_230\n    /* \"#utility.yul\":10958:10960   */\n  0x1f\n    /* \"#utility.yul\":10953:10956   */\n  dup4\n    /* \"#utility.yul\":10894:10961   */\n  tag_95\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":10887:10961   */\n  swap2\n  pop\n    /* \"#utility.yul\":10970:11063   */\n  tag_231\n    /* \"#utility.yul\":11059:11062   */\n  dup3\n    /* \"#utility.yul\":10970:11063   */\n  tag_96\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":11088:11090   */\n  0x20\n    /* \"#utility.yul\":11083:11086   */\n  dup3\n    /* \"#utility.yul\":11079:11091   */\n  add\n    /* \"#utility.yul\":11072:11091   */\n  swap1\n  pop\n    /* \"#utility.yul\":10731:11097   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11103:11522   */\ntag_37:\n    /* \"#utility.yul\":11269:11273   */\n  0x00\n    /* \"#utility.yul\":11307:11309   */\n  0x20\n    /* \"#utility.yul\":11296:11305   */\n  dup3\n    /* \"#utility.yul\":11292:11310   */\n  add\n    /* \"#utility.yul\":11284:11310   */\n  swap1\n  pop\n    /* \"#utility.yul\":11356:11365   */\n  dup2\n    /* \"#utility.yul\":11350:11354   */\n  dup2\n    /* \"#utility.yul\":11346:11366   */\n  sub\n    /* \"#utility.yul\":11342:11343   */\n  0x00\n    /* \"#utility.yul\":11331:11340   */\n  dup4\n    /* \"#utility.yul\":11327:11344   */\n  add\n    /* \"#utility.yul\":11320:11367   */\n  mstore\n    /* \"#utility.yul\":11384:11515   */\n  tag_233\n    /* \"#utility.yul\":11510:11514   */\n  dup2\n    /* \"#utility.yul\":11384:11515   */\n  tag_97\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":11376:11515   */\n  swap1\n  pop\n    /* \"#utility.yul\":11103:11522   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11528:11708   */\ntag_98:\n    /* \"#utility.yul\":11576:11653   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11573:11574   */\n  0x00\n    /* \"#utility.yul\":11566:11654   */\n  mstore\n    /* \"#utility.yul\":11673:11677   */\n  0x11\n    /* \"#utility.yul\":11670:11671   */\n  0x04\n    /* \"#utility.yul\":11663:11678   */\n  mstore\n    /* \"#utility.yul\":11697:11701   */\n  0x24\n    /* \"#utility.yul\":11694:11695   */\n  0x00\n    /* \"#utility.yul\":11687:11702   */\n  revert\n    /* \"#utility.yul\":11714:11905   */\ntag_41:\n    /* \"#utility.yul\":11754:11757   */\n  0x00\n    /* \"#utility.yul\":11773:11793   */\n  tag_236\n    /* \"#utility.yul\":11791:11792   */\n  dup3\n    /* \"#utility.yul\":11773:11793   */\n  tag_58\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":11768:11793   */\n  swap2\n  pop\n    /* \"#utility.yul\":11807:11827   */\n  tag_237\n    /* \"#utility.yul\":11825:11826   */\n  dup4\n    /* \"#utility.yul\":11807:11827   */\n  tag_58\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":11802:11827   */\n  swap3\n  pop\n    /* \"#utility.yul\":11850:11851   */\n  dup3\n    /* \"#utility.yul\":11847:11848   */\n  dup3\n    /* \"#utility.yul\":11843:11852   */\n  add\n    /* \"#utility.yul\":11836:11852   */\n  swap1\n  pop\n    /* \"#utility.yul\":11871:11874   */\n  dup1\n    /* \"#utility.yul\":11868:11869   */\n  dup3\n    /* \"#utility.yul\":11865:11875   */\n  gt\n    /* \"#utility.yul\":11862:11898   */\n  iszero\n  tag_238\n  jumpi\n    /* \"#utility.yul\":11878:11896   */\n  tag_239\n  tag_98\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":11862:11898   */\ntag_238:\n    /* \"#utility.yul\":11714:11905   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11911:12133   */\ntag_43:\n    /* \"#utility.yul\":12004:12008   */\n  0x00\n    /* \"#utility.yul\":12042:12044   */\n  0x20\n    /* \"#utility.yul\":12031:12040   */\n  dup3\n    /* \"#utility.yul\":12027:12045   */\n  add\n    /* \"#utility.yul\":12019:12045   */\n  swap1\n  pop\n    /* \"#utility.yul\":12055:12126   */\n  tag_241\n    /* \"#utility.yul\":12123:12124   */\n  0x00\n    /* \"#utility.yul\":12112:12121   */\n  dup4\n    /* \"#utility.yul\":12108:12125   */\n  add\n    /* \"#utility.yul\":12099:12105   */\n  dup5\n    /* \"#utility.yul\":12055:12126   */\n  tag_91\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":11911:12133   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12139:12516   */\ntag_99:\n    /* \"#utility.yul\":12227:12230   */\n  0x00\n    /* \"#utility.yul\":12255:12294   */\n  tag_243\n    /* \"#utility.yul\":12288:12293   */\n  dup3\n    /* \"#utility.yul\":12255:12294   */\n  tag_71\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":12310:12381   */\n  tag_244\n    /* \"#utility.yul\":12374:12380   */\n  dup2\n    /* \"#utility.yul\":12369:12372   */\n  dup6\n    /* \"#utility.yul\":12310:12381   */\n  tag_95\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":12303:12381   */\n  swap4\n  pop\n    /* \"#utility.yul\":12390:12455   */\n  tag_245\n    /* \"#utility.yul\":12448:12454   */\n  dup2\n    /* \"#utility.yul\":12443:12446   */\n  dup6\n    /* \"#utility.yul\":12436:12440   */\n  0x20\n    /* \"#utility.yul\":12429:12434   */\n  dup7\n    /* \"#utility.yul\":12425:12441   */\n  add\n    /* \"#utility.yul\":12390:12455   */\n  tag_68\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":12480:12509   */\n  tag_246\n    /* \"#utility.yul\":12502:12508   */\n  dup2\n    /* \"#utility.yul\":12480:12509   */\n  tag_63\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":12475:12478   */\n  dup5\n    /* \"#utility.yul\":12471:12510   */\n  add\n    /* \"#utility.yul\":12464:12510   */\n  swap2\n  pop\n    /* \"#utility.yul\":12231:12516   */\n  pop\n    /* \"#utility.yul\":12139:12516   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12522:12835   */\ntag_49:\n    /* \"#utility.yul\":12635:12639   */\n  0x00\n    /* \"#utility.yul\":12673:12675   */\n  0x20\n    /* \"#utility.yul\":12662:12671   */\n  dup3\n    /* \"#utility.yul\":12658:12676   */\n  add\n    /* \"#utility.yul\":12650:12676   */\n  swap1\n  pop\n    /* \"#utility.yul\":12722:12731   */\n  dup2\n    /* \"#utility.yul\":12716:12720   */\n  dup2\n    /* \"#utility.yul\":12712:12732   */\n  sub\n    /* \"#utility.yul\":12708:12709   */\n  0x00\n    /* \"#utility.yul\":12697:12706   */\n  dup4\n    /* \"#utility.yul\":12693:12710   */\n  add\n    /* \"#utility.yul\":12686:12733   */\n  mstore\n    /* \"#utility.yul\":12750:12828   */\n  tag_248\n    /* \"#utility.yul\":12823:12827   */\n  dup2\n    /* \"#utility.yul\":12814:12820   */\n  dup5\n    /* \"#utility.yul\":12750:12828   */\n  tag_99\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":12742:12828   */\n  swap1\n  pop\n    /* \"#utility.yul\":12522:12835   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12841:12939   */\ntag_100:\n    /* \"#utility.yul\":12892:12898   */\n  0x00\n    /* \"#utility.yul\":12926:12931   */\n  dup2\n    /* \"#utility.yul\":12920:12932   */\n  mload\n    /* \"#utility.yul\":12910:12932   */\n  swap1\n  pop\n    /* \"#utility.yul\":12841:12939   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12945:13061   */\ntag_101:\n    /* \"#utility.yul\":12996:13000   */\n  0x00\n    /* \"#utility.yul\":13019:13022   */\n  dup2\n    /* \"#utility.yul\":13011:13022   */\n  swap1\n  pop\n    /* \"#utility.yul\":13049:13053   */\n  0x20\n    /* \"#utility.yul\":13044:13047   */\n  dup3\n    /* \"#utility.yul\":13040:13054   */\n  add\n    /* \"#utility.yul\":13032:13054   */\n  swap1\n  pop\n    /* \"#utility.yul\":12945:13061   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13067:13221   */\ntag_102:\n    /* \"#utility.yul\":13110:13121   */\n  0x00\n    /* \"#utility.yul\":13146:13175   */\n  tag_252\n    /* \"#utility.yul\":13170:13173   */\n  dup3\n    /* \"#utility.yul\":13164:13174   */\n  mload\n    /* \"#utility.yul\":13146:13175   */\n  tag_89\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":13209:13214   */\n  dup1\n    /* \"#utility.yul\":13185:13214   */\n  swap2\n  pop\n    /* \"#utility.yul\":13122:13221   */\n  pop\n    /* \"#utility.yul\":13067:13221   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13227:13821   */\ntag_51:\n    /* \"#utility.yul\":13311:13316   */\n  0x00\n    /* \"#utility.yul\":13342:13380   */\n  tag_254\n    /* \"#utility.yul\":13374:13379   */\n  dup3\n    /* \"#utility.yul\":13342:13380   */\n  tag_100\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":13405:13410   */\n  dup3\n    /* \"#utility.yul\":13432:13472   */\n  tag_255\n    /* \"#utility.yul\":13466:13471   */\n  dup5\n    /* \"#utility.yul\":13432:13472   */\n  tag_101\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":13420:13472   */\n  swap1\n  pop\n    /* \"#utility.yul\":13491:13526   */\n  tag_256\n    /* \"#utility.yul\":13517:13525   */\n  dup2\n    /* \"#utility.yul\":13491:13526   */\n  tag_102\n  jump\t// in\ntag_256:\n    /* \"#utility.yul\":13482:13526   */\n  swap3\n  pop\n    /* \"#utility.yul\":13550:13552   */\n  0x20\n    /* \"#utility.yul\":13542:13548   */\n  dup3\n    /* \"#utility.yul\":13539:13553   */\n  lt\n    /* \"#utility.yul\":13536:13814   */\n  iszero\n  tag_257\n  jumpi\n    /* \"#utility.yul\":13621:13790   */\n  tag_258\n    /* \"#utility.yul\":13706:13772   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":13676:13682   */\n  dup4\n    /* \"#utility.yul\":13672:13674   */\n  0x20\n    /* \"#utility.yul\":13668:13683   */\n  sub\n    /* \"#utility.yul\":13665:13666   */\n  0x08\n    /* \"#utility.yul\":13661:13684   */\n  mul\n    /* \"#utility.yul\":13621:13790   */\n  tag_76\n  jump\t// in\ntag_258:\n    /* \"#utility.yul\":13598:13603   */\n  dup4\n    /* \"#utility.yul\":13577:13804   */\n  and\n    /* \"#utility.yul\":13568:13804   */\n  swap3\n  pop\n    /* \"#utility.yul\":13536:13814   */\ntag_257:\n    /* \"#utility.yul\":13317:13821   */\n  pop\n  pop\n    /* \"#utility.yul\":13227:13821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"saleIDO\\\\ZNS.sol\":23593:23792  contract ZNS is ERC20Permit{... */\ntag_22:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xed870a0389b720122307aec7908f2d3af87dd1fed26cd116ebd921becf62cb81\")\n  0x00\n  assignImmutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n  0x00\n  assignImmutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n  0x00\n  assignImmutable(\"0x87bd18b67247df6baa7533339c49063efb5f43390eb1bcf9e95a3aa2cdb49408\")\n  0x00\n  assignImmutable(\"0x5f5b5a8290fb1ae7087a2571d1f5b0913474ec7aeab6a3ccbbe0de9185523d27\")\n  0x00\n  assignImmutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n  0x00\n  assignImmutable(\"0x61c015546d5e44346798f1c6880464efac2cf5ed99e68a15f785eaa6fd93e7ec\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"saleIDO\\\\ZNS.sol\":23593:23792  contract ZNS is ERC20Permit{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x23b872dd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"saleIDO\\\\ZNS.sol\":6664:6764  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":9015:9216  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":7784:7892  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":9796:10091  function transferFrom(... */\n    tag_6:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":7626:7719  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":23439:23553  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":10500:10738  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":7955:8082  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":23164:23309  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5021:5654  function eip712Domain()... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":6883:6987  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":11241:11677  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":8288:8481  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":22402:23098  function permit(... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"saleIDO\\\\ZNS.sol\":8544:8695  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"saleIDO\\\\ZNS.sol\":6664:6764  function name() public view virtual override returns (string memory) {... */\n    tag_22:\n        /* \"saleIDO\\\\ZNS.sol\":6718:6731  string memory */\n      0x60\n        /* \"saleIDO\\\\ZNS.sol\":6751:6756  _name */\n      0x03\n        /* \"saleIDO\\\\ZNS.sol\":6744:6756  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":6664:6764  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":9015:9216  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"saleIDO\\\\ZNS.sol\":9098:9102  bool */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":9115:9128  address owner */\n      dup1\n        /* \"saleIDO\\\\ZNS.sol\":9131:9143  _msgSender() */\n      tag_93\n        /* \"saleIDO\\\\ZNS.sol\":9131:9141  _msgSender */\n      tag_94\n        /* \"saleIDO\\\\ZNS.sol\":9131:9143  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"saleIDO\\\\ZNS.sol\":9115:9143  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":9154:9186  _approve(owner, spender, amount) */\n      tag_95\n        /* \"saleIDO\\\\ZNS.sol\":9163:9168  owner */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":9170:9177  spender */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":9179:9185  amount */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":9154:9162  _approve */\n      tag_96\n        /* \"saleIDO\\\\ZNS.sol\":9154:9186  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_95:\n        /* \"saleIDO\\\\ZNS.sol\":9204:9208  true */\n      0x01\n        /* \"saleIDO\\\\ZNS.sol\":9197:9208  return true */\n      swap2\n      pop\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":9015:9216  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":7784:7892  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_32:\n        /* \"saleIDO\\\\ZNS.sol\":7845:7852  uint256 */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":7872:7884  _totalSupply */\n      sload(0x02)\n        /* \"saleIDO\\\\ZNS.sol\":7865:7884  return _totalSupply */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":7784:7892  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":9796:10091  function transferFrom(... */\n    tag_38:\n        /* \"saleIDO\\\\ZNS.sol\":9927:9931  bool */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":9944:9959  address spender */\n      dup1\n        /* \"saleIDO\\\\ZNS.sol\":9962:9974  _msgSender() */\n      tag_99\n        /* \"saleIDO\\\\ZNS.sol\":9962:9972  _msgSender */\n      tag_94\n        /* \"saleIDO\\\\ZNS.sol\":9962:9974  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"saleIDO\\\\ZNS.sol\":9944:9974  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":9985:10023  _spendAllowance(from, spender, amount) */\n      tag_100\n        /* \"saleIDO\\\\ZNS.sol\":10001:10005  from */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":10007:10014  spender */\n      dup3\n        /* \"saleIDO\\\\ZNS.sol\":10016:10022  amount */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":9985:10000  _spendAllowance */\n      tag_101\n        /* \"saleIDO\\\\ZNS.sol\":9985:10023  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_100:\n        /* \"saleIDO\\\\ZNS.sol\":10034:10061  _transfer(from, to, amount) */\n      tag_102\n        /* \"saleIDO\\\\ZNS.sol\":10044:10048  from */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":10050:10052  to */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":10054:10060  amount */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":10034:10043  _transfer */\n      tag_103\n        /* \"saleIDO\\\\ZNS.sol\":10034:10061  _transfer(from, to, amount) */\n      jump\t// in\n    tag_102:\n        /* \"saleIDO\\\\ZNS.sol\":10079:10083  true */\n      0x01\n        /* \"saleIDO\\\\ZNS.sol\":10072:10083  return true */\n      swap2\n      pop\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":9796:10091  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":7626:7719  function decimals() public view virtual override returns (uint8) {... */\n    tag_41:\n        /* \"saleIDO\\\\ZNS.sol\":7684:7689  uint8 */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":7709:7711  18 */\n      0x12\n        /* \"saleIDO\\\\ZNS.sol\":7702:7711  return 18 */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":7626:7719  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":23439:23553  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_45:\n        /* \"saleIDO\\\\ZNS.sol\":23498:23505  bytes32 */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":23525:23545  _domainSeparatorV4() */\n      tag_106\n        /* \"saleIDO\\\\ZNS.sol\":23525:23543  _domainSeparatorV4 */\n      tag_107\n        /* \"saleIDO\\\\ZNS.sol\":23525:23545  _domainSeparatorV4() */\n      jump\t// in\n    tag_106:\n        /* \"saleIDO\\\\ZNS.sol\":23518:23545  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":23439:23553  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":10500:10738  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_50:\n        /* \"saleIDO\\\\ZNS.sol\":10588:10592  bool */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":10605:10618  address owner */\n      dup1\n        /* \"saleIDO\\\\ZNS.sol\":10621:10633  _msgSender() */\n      tag_109\n        /* \"saleIDO\\\\ZNS.sol\":10621:10631  _msgSender */\n      tag_94\n        /* \"saleIDO\\\\ZNS.sol\":10621:10633  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"saleIDO\\\\ZNS.sol\":10605:10633  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":10644:10708  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_110\n        /* \"saleIDO\\\\ZNS.sol\":10653:10658  owner */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":10660:10667  spender */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":10697:10707  addedValue */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":10669:10694  allowance(owner, spender) */\n      tag_111\n        /* \"saleIDO\\\\ZNS.sol\":10679:10684  owner */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":10686:10693  spender */\n      dup10\n        /* \"saleIDO\\\\ZNS.sol\":10669:10678  allowance */\n      tag_83\n        /* \"saleIDO\\\\ZNS.sol\":10669:10694  allowance(owner, spender) */\n      jump\t// in\n    tag_111:\n        /* \"saleIDO\\\\ZNS.sol\":10669:10707  allowance(owner, spender) + addedValue */\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"saleIDO\\\\ZNS.sol\":10644:10652  _approve */\n      tag_96\n        /* \"saleIDO\\\\ZNS.sol\":10644:10708  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_110:\n        /* \"saleIDO\\\\ZNS.sol\":10726:10730  true */\n      0x01\n        /* \"saleIDO\\\\ZNS.sol\":10719:10730  return true */\n      swap2\n      pop\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":10500:10738  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":7955:8082  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_55:\n        /* \"saleIDO\\\\ZNS.sol\":8029:8036  uint256 */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":8056:8065  _balances */\n      dup1\n        /* \"saleIDO\\\\ZNS.sol\":8056:8074  _balances[account] */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":8066:8073  account */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":8056:8074  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"saleIDO\\\\ZNS.sol\":8049:8074  return _balances[account] */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":7955:8082  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":23164:23309  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_59:\n        /* \"saleIDO\\\\ZNS.sol\":23255:23262  uint256 */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":23282:23301  super.nonces(owner) */\n      tag_116\n        /* \"saleIDO\\\\ZNS.sol\":23295:23300  owner */\n      dup3\n        /* \"saleIDO\\\\ZNS.sol\":23282:23294  super.nonces */\n      tag_117\n        /* \"saleIDO\\\\ZNS.sol\":23282:23301  super.nonces(owner) */\n      jump\t// in\n    tag_116:\n        /* \"saleIDO\\\\ZNS.sol\":23275:23301  return super.nonces(owner) */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":23164:23309  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5021:5654  function eip712Domain()... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5136:5149  bytes1 fields */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5163:5181  string memory name */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5195:5216  string memory version */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5230:5245  uint256 chainId */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5259:5284  address verifyingContract */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5298:5310  bytes32 salt */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5324:5351  uint256[] memory extensions */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5427:5468  _name.toStringWithFallback(_nameFallback) */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5454:5467  _nameFallback */\n      0x05\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5427:5432  _name */\n      immutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5427:5453  _name.toStringWithFallback */\n      tag_120\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5427:5468  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5529  _version.toStringWithFallback(_versionFallback) */\n      tag_121\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5512:5528  _versionFallback */\n      0x06\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5490  _version */\n      immutable(\"0xed870a0389b720122307aec7908f2d3af87dd1fed26cd116ebd921becf62cb81\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5511  _version.toStringWithFallback */\n      tag_120\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5529  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5543:5556  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5578:5582  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5605:5606  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5597:5607  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5635:5636  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5621:5637  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_122\n      jumpi\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n    tag_122:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_125\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_125:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5376:5647  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5021:5654  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":6883:6987  function symbol() public view virtual override returns (string memory) {... */\n    tag_66:\n        /* \"saleIDO\\\\ZNS.sol\":6939:6952  string memory */\n      0x60\n        /* \"saleIDO\\\\ZNS.sol\":6972:6979  _symbol */\n      0x04\n        /* \"saleIDO\\\\ZNS.sol\":6965:6979  return _symbol */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_87\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_87\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":6883:6987  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":11241:11677  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_70:\n        /* \"saleIDO\\\\ZNS.sol\":11334:11338  bool */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":11351:11364  address owner */\n      dup1\n        /* \"saleIDO\\\\ZNS.sol\":11367:11379  _msgSender() */\n      tag_133\n        /* \"saleIDO\\\\ZNS.sol\":11367:11377  _msgSender */\n      tag_94\n        /* \"saleIDO\\\\ZNS.sol\":11367:11379  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"saleIDO\\\\ZNS.sol\":11351:11379  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":11390:11414  uint256 currentAllowance */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":11417:11442  allowance(owner, spender) */\n      tag_134\n        /* \"saleIDO\\\\ZNS.sol\":11427:11432  owner */\n      dup3\n        /* \"saleIDO\\\\ZNS.sol\":11434:11441  spender */\n      dup7\n        /* \"saleIDO\\\\ZNS.sol\":11417:11426  allowance */\n      tag_83\n        /* \"saleIDO\\\\ZNS.sol\":11417:11442  allowance(owner, spender) */\n      jump\t// in\n    tag_134:\n        /* \"saleIDO\\\\ZNS.sol\":11390:11442  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":11481:11496  subtractedValue */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":11461:11477  currentAllowance */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":11461:11496  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"saleIDO\\\\ZNS.sol\":11453:11538  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"saleIDO\\\\ZNS.sol\":11574:11634  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_138\n        /* \"saleIDO\\\\ZNS.sol\":11583:11588  owner */\n      dup3\n        /* \"saleIDO\\\\ZNS.sol\":11590:11597  spender */\n      dup7\n        /* \"saleIDO\\\\ZNS.sol\":11618:11633  subtractedValue */\n      dup7\n        /* \"saleIDO\\\\ZNS.sol\":11599:11615  currentAllowance */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":11599:11633  currentAllowance - subtractedValue */\n      sub\n        /* \"saleIDO\\\\ZNS.sol\":11574:11582  _approve */\n      tag_96\n        /* \"saleIDO\\\\ZNS.sol\":11574:11634  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_138:\n        /* \"saleIDO\\\\ZNS.sol\":11665:11669  true */\n      0x01\n        /* \"saleIDO\\\\ZNS.sol\":11658:11669  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":11241:11677  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":8288:8481  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_74:\n        /* \"saleIDO\\\\ZNS.sol\":8367:8371  bool */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":8384:8397  address owner */\n      dup1\n        /* \"saleIDO\\\\ZNS.sol\":8400:8412  _msgSender() */\n      tag_140\n        /* \"saleIDO\\\\ZNS.sol\":8400:8410  _msgSender */\n      tag_94\n        /* \"saleIDO\\\\ZNS.sol\":8400:8412  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"saleIDO\\\\ZNS.sol\":8384:8412  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":8423:8451  _transfer(owner, to, amount) */\n      tag_141\n        /* \"saleIDO\\\\ZNS.sol\":8433:8438  owner */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":8440:8442  to */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":8444:8450  amount */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":8423:8432  _transfer */\n      tag_103\n        /* \"saleIDO\\\\ZNS.sol\":8423:8451  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_141:\n        /* \"saleIDO\\\\ZNS.sol\":8469:8473  true */\n      0x01\n        /* \"saleIDO\\\\ZNS.sol\":8462:8473  return true */\n      swap2\n      pop\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":8288:8481  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":22402:23098  function permit(... */\n    tag_79:\n        /* \"saleIDO\\\\ZNS.sol\":22632:22640  deadline */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":22614:22629  block.timestamp */\n      timestamp\n        /* \"saleIDO\\\\ZNS.sol\":22614:22640  block.timestamp > deadline */\n      gt\n        /* \"saleIDO\\\\ZNS.sol\":22610:22709  if (block.timestamp > deadline) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"saleIDO\\\\ZNS.sol\":22688:22696  deadline */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":22664:22697  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      0x6279130200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"saleIDO\\\\ZNS.sol\":22610:22709  if (block.timestamp > deadline) {... */\n    tag_143:\n        /* \"saleIDO\\\\ZNS.sol\":22721:22739  bytes32 structHash */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":21715:21810  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"saleIDO\\\\ZNS.sol\":22781:22786  owner */\n      dup9\n        /* \"saleIDO\\\\ZNS.sol\":22788:22795  spender */\n      dup9\n        /* \"saleIDO\\\\ZNS.sol\":22797:22802  value */\n      dup9\n        /* \"saleIDO\\\\ZNS.sol\":22804:22820  _useNonce(owner) */\n      tag_145\n        /* \"saleIDO\\\\ZNS.sol\":22814:22819  owner */\n      dup13\n        /* \"saleIDO\\\\ZNS.sol\":22804:22813  _useNonce */\n      tag_146\n        /* \"saleIDO\\\\ZNS.sol\":22804:22820  _useNonce(owner) */\n      jump\t// in\n    tag_145:\n        /* \"saleIDO\\\\ZNS.sol\":22822:22830  deadline */\n      dup10\n        /* \"saleIDO\\\\ZNS.sol\":22752:22831  abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      tag_147\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"saleIDO\\\\ZNS.sol\":22742:22832  keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"saleIDO\\\\ZNS.sol\":22721:22832  bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":22845:22857  bytes32 hash */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":22860:22888  _hashTypedDataV4(structHash) */\n      tag_149\n        /* \"saleIDO\\\\ZNS.sol\":22877:22887  structHash */\n      dup3\n        /* \"saleIDO\\\\ZNS.sol\":22860:22876  _hashTypedDataV4 */\n      tag_150\n        /* \"saleIDO\\\\ZNS.sol\":22860:22888  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_149:\n        /* \"saleIDO\\\\ZNS.sol\":22845:22888  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":22901:22915  address signer */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":22918:22946  ECDSA.recover(hash, v, r, s) */\n      tag_151\n        /* \"saleIDO\\\\ZNS.sol\":22932:22936  hash */\n      dup3\n        /* \"saleIDO\\\\ZNS.sol\":22938:22939  v */\n      dup8\n        /* \"saleIDO\\\\ZNS.sol\":22941:22942  r */\n      dup8\n        /* \"saleIDO\\\\ZNS.sol\":22944:22945  s */\n      dup8\n        /* \"saleIDO\\\\ZNS.sol\":22918:22931  ECDSA.recover */\n      tag_152\n        /* \"saleIDO\\\\ZNS.sol\":22918:22946  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_151:\n        /* \"saleIDO\\\\ZNS.sol\":22901:22946  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":22971:22976  owner */\n      dup10\n        /* \"saleIDO\\\\ZNS.sol\":22961:22976  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"saleIDO\\\\ZNS.sol\":22961:22967  signer */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":22961:22976  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"saleIDO\\\\ZNS.sol\":22957:23047  if (signer != owner) {... */\n      tag_153\n      jumpi\n        /* \"saleIDO\\\\ZNS.sol\":23021:23027  signer */\n      dup1\n        /* \"saleIDO\\\\ZNS.sol\":23029:23034  owner */\n      dup11\n        /* \"saleIDO\\\\ZNS.sol\":23000:23035  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      0x4b800e4600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"saleIDO\\\\ZNS.sol\":22957:23047  if (signer != owner) {... */\n    tag_153:\n        /* \"saleIDO\\\\ZNS.sol\":23059:23090  _approve(owner, spender, value) */\n      tag_156\n        /* \"saleIDO\\\\ZNS.sol\":23068:23073  owner */\n      dup11\n        /* \"saleIDO\\\\ZNS.sol\":23075:23082  spender */\n      dup11\n        /* \"saleIDO\\\\ZNS.sol\":23084:23089  value */\n      dup11\n        /* \"saleIDO\\\\ZNS.sol\":23059:23067  _approve */\n      tag_96\n        /* \"saleIDO\\\\ZNS.sol\":23059:23090  _approve(owner, spender, value) */\n      jump\t// in\n    tag_156:\n        /* \"saleIDO\\\\ZNS.sol\":22599:23098  {... */\n      pop\n      pop\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":22402:23098  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":8544:8695  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_83:\n        /* \"saleIDO\\\\ZNS.sol\":8633:8640  uint256 */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":8660:8671  _allowances */\n      0x01\n        /* \"saleIDO\\\\ZNS.sol\":8660:8678  _allowances[owner] */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":8672:8677  owner */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":8660:8678  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"saleIDO\\\\ZNS.sol\":8660:8687  _allowances[owner][spender] */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":8679:8686  spender */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":8660:8687  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"saleIDO\\\\ZNS.sol\":8653:8687  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":8544:8695  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":683:781  function _msgSender() internal view virtual returns (address) {... */\n    tag_94:\n        /* \"saleIDO\\\\ZNS.sol\":736:743  address */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":763:773  msg.sender */\n      caller\n        /* \"saleIDO\\\\ZNS.sol\":756:773  return msg.sender */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":683:781  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":15268:15648  function _approve(... */\n    tag_96:\n        /* \"saleIDO\\\\ZNS.sol\":15421:15422  0 */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":15404:15423  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"saleIDO\\\\ZNS.sol\":15404:15409  owner */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":15404:15423  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"saleIDO\\\\ZNS.sol\":15396:15464  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"saleIDO\\\\ZNS.sol\":15502:15503  0 */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":15483:15504  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"saleIDO\\\\ZNS.sol\":15483:15490  spender */\n      dup3\n        /* \"saleIDO\\\\ZNS.sol\":15483:15504  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"saleIDO\\\\ZNS.sol\":15475:15543  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"saleIDO\\\\ZNS.sol\":15586:15592  amount */\n      dup1\n        /* \"saleIDO\\\\ZNS.sol\":15556:15567  _allowances */\n      0x01\n        /* \"saleIDO\\\\ZNS.sol\":15556:15574  _allowances[owner] */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":15568:15573  owner */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":15556:15574  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"saleIDO\\\\ZNS.sol\":15556:15583  _allowances[owner][spender] */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":15575:15582  spender */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":15556:15583  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"saleIDO\\\\ZNS.sol\":15556:15592  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":15624:15631  spender */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":15608:15640  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"saleIDO\\\\ZNS.sol\":15617:15622  owner */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":15608:15640  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"saleIDO\\\\ZNS.sol\":15633:15639  amount */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":15608:15640  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"saleIDO\\\\ZNS.sol\":15268:15648  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":15939:16392  function _spendAllowance(... */\n    tag_101:\n        /* \"saleIDO\\\\ZNS.sol\":16074:16098  uint256 currentAllowance */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":16101:16126  allowance(owner, spender) */\n      tag_168\n        /* \"saleIDO\\\\ZNS.sol\":16111:16116  owner */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":16118:16125  spender */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":16101:16110  allowance */\n      tag_83\n        /* \"saleIDO\\\\ZNS.sol\":16101:16126  allowance(owner, spender) */\n      jump\t// in\n    tag_168:\n        /* \"saleIDO\\\\ZNS.sol\":16074:16126  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":16161:16178  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"saleIDO\\\\ZNS.sol\":16141:16157  currentAllowance */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":16141:16178  currentAllowance != type(uint256).max */\n      eq\n        /* \"saleIDO\\\\ZNS.sol\":16137:16385  if (currentAllowance != type(uint256).max) {... */\n      tag_169\n      jumpi\n        /* \"saleIDO\\\\ZNS.sol\":16223:16229  amount */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":16203:16219  currentAllowance */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":16203:16229  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"saleIDO\\\\ZNS.sol\":16195:16263  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"saleIDO\\\\ZNS.sol\":16307:16358  _approve(owner, spender, currentAllowance - amount) */\n      tag_173\n        /* \"saleIDO\\\\ZNS.sol\":16316:16321  owner */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":16323:16330  spender */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":16351:16357  amount */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":16332:16348  currentAllowance */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":16332:16357  currentAllowance - amount */\n      sub\n        /* \"saleIDO\\\\ZNS.sol\":16307:16315  _approve */\n      tag_96\n        /* \"saleIDO\\\\ZNS.sol\":16307:16358  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_173:\n        /* \"saleIDO\\\\ZNS.sol\":16137:16385  if (currentAllowance != type(uint256).max) {... */\n    tag_169:\n        /* \"saleIDO\\\\ZNS.sol\":16063:16392  {... */\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":15939:16392  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":12147:12987  function _transfer(... */\n    tag_103:\n        /* \"saleIDO\\\\ZNS.sol\":12294:12295  0 */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":12278:12296  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"saleIDO\\\\ZNS.sol\":12278:12282  from */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":12278:12296  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"saleIDO\\\\ZNS.sol\":12270:12338  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"saleIDO\\\\ZNS.sol\":12371:12372  0 */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":12357:12373  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"saleIDO\\\\ZNS.sol\":12357:12359  to */\n      dup3\n        /* \"saleIDO\\\\ZNS.sol\":12357:12373  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"saleIDO\\\\ZNS.sol\":12349:12413  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"saleIDO\\\\ZNS.sol\":12426:12464  _beforeTokenTransfer(from, to, amount) */\n      tag_181\n        /* \"saleIDO\\\\ZNS.sol\":12447:12451  from */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":12453:12455  to */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":12457:12463  amount */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":12426:12446  _beforeTokenTransfer */\n      tag_182\n        /* \"saleIDO\\\\ZNS.sol\":12426:12464  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_181:\n        /* \"saleIDO\\\\ZNS.sol\":12477:12496  uint256 fromBalance */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":12499:12508  _balances */\n      dup1\n        /* \"saleIDO\\\\ZNS.sol\":12499:12514  _balances[from] */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":12509:12513  from */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":12499:12514  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"saleIDO\\\\ZNS.sol\":12477:12514  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":12548:12554  amount */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":12533:12544  fromBalance */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":12533:12554  fromBalance >= amount */\n      lt\n      iszero\n        /* \"saleIDO\\\\ZNS.sol\":12525:12597  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"saleIDO\\\\ZNS.sol\":12665:12671  amount */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":12651:12662  fromBalance */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":12651:12671  fromBalance - amount */\n      sub\n        /* \"saleIDO\\\\ZNS.sol\":12633:12642  _balances */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":12633:12648  _balances[from] */\n      dup1\n        /* \"saleIDO\\\\ZNS.sol\":12643:12647  from */\n      dup7\n        /* \"saleIDO\\\\ZNS.sol\":12633:12648  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"saleIDO\\\\ZNS.sol\":12633:12671  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":12868:12874  amount */\n      dup2\n        /* \"saleIDO\\\\ZNS.sol\":12851:12860  _balances */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":12851:12864  _balances[to] */\n      dup1\n        /* \"saleIDO\\\\ZNS.sol\":12861:12863  to */\n      dup6\n        /* \"saleIDO\\\\ZNS.sol\":12851:12864  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":12851:12874  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":12918:12920  to */\n      dup3\n        /* \"saleIDO\\\\ZNS.sol\":12903:12929  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"saleIDO\\\\ZNS.sol\":12912:12916  from */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":12903:12929  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"saleIDO\\\\ZNS.sol\":12922:12928  amount */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":12903:12929  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"saleIDO\\\\ZNS.sol\":12942:12979  _afterTokenTransfer(from, to, amount) */\n      tag_187\n        /* \"saleIDO\\\\ZNS.sol\":12962:12966  from */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":12968:12970  to */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":12972:12978  amount */\n      dup5\n        /* \"saleIDO\\\\ZNS.sol\":12942:12961  _afterTokenTransfer */\n      tag_188\n        /* \"saleIDO\\\\ZNS.sol\":12942:12979  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_187:\n        /* \"saleIDO\\\\ZNS.sol\":12259:12987  {... */\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":12147:12987  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3695:3957  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3748:3755  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3788:3799  _cachedThis */\n      immutable(\"0x5f5b5a8290fb1ae7087a2571d1f5b0913474ec7aeab6a3ccbbe0de9185523d27\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3771:3799  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3779:3783  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3771:3799  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3771:3834  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_190\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3820:3834  _cachedChainId */\n      immutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3803:3816  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3803:3834  block.chainid == _cachedChainId */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3771:3834  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_190:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3767:3951  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3857:3879  _cachedDomainSeparator */\n      immutable(\"0x61c015546d5e44346798f1c6880464efac2cf5ed99e68a15f785eaa6fd93e7ec\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3850:3879  return _cachedDomainSeparator */\n      swap1\n      pop\n      jump(tag_189)\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3767:3951  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:3940  _buildDomainSeparator() */\n      tag_193\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:3938  _buildDomainSeparator */\n      tag_194\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:3940  _buildDomainSeparator() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3910:3940  return _buildDomainSeparator() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3695:3957  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_189:\n      swap1\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":20508:20617  function nonces(address owner) public view virtual returns (uint256) {... */\n    tag_117:\n        /* \"saleIDO\\\\ZNS.sol\":20568:20575  uint256 */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":20595:20602  _nonces */\n      0x07\n        /* \"saleIDO\\\\ZNS.sol\":20595:20609  _nonces[owner] */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":20603:20608  owner */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":20595:20609  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"saleIDO\\\\ZNS.sol\":20588:20609  return _nonces[owner] */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":20508:20617  function nonces(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3367:3635  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3461:3474  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1371:1437  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3519:3537  _FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3509:3514  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3490:3537  ShortString.unwrap(value) != _FALLBACK_SENTINEL */\n      eq\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3486:3629  if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3560:3575  toString(value) */\n      tag_198\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3569:3574  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3560:3568  toString */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3560:3575  toString(value) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3553:3575  return toString(value) */\n      swap1\n      pop\n      jump(tag_196)\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3486:3629  if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3613:3618  store */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3606:3618  return store */\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_87\n      jump\t// in\n    tag_201:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_87\n      jump\t// in\n    tag_202:\n      dup1\n      iszero\n      tag_203\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_204\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_203)\n    tag_204:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_205:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_205\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3367:3635  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_196:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":20738:21140  function _useNonce(address owner) internal virtual returns (uint256) {... */\n    tag_146:\n        /* \"saleIDO\\\\ZNS.sol\":20798:20805  uint256 */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":21105:21112  _nonces */\n      0x07\n        /* \"saleIDO\\\\ZNS.sol\":21105:21119  _nonces[owner] */\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":21113:21118  owner */\n      dup4\n        /* \"saleIDO\\\\ZNS.sol\":21105:21119  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"saleIDO\\\\ZNS.sol\":21105:21121  _nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"saleIDO\\\\ZNS.sol\":21098:21121  return _nonces[owner]++ */\n      swap1\n      pop\n        /* \"saleIDO\\\\ZNS.sol\":20738:21140  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4768:4933  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4845:4852  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4871:4926  ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_208\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4893:4913  _domainSeparatorV4() */\n      tag_209\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4893:4911  _domainSeparatorV4 */\n      tag_107\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4893:4913  _domainSeparatorV4() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4915:4925  structHash */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4871:4892  ECDSA.toTypedDataHash */\n      tag_210\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4871:4926  ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4864:4926  return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4768:4933  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6598:6830  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6683:6690  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6703:6720  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6722:6740  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6744:6769  tryRecover(hash, v, r, s) */\n      tag_212\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6755:6759  hash */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6761:6762  v */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6764:6765  r */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6767:6768  s */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6744:6754  tryRecover */\n      tag_213\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6744:6769  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6702:6769  (address recovered, RecoverError error) = tryRecover(hash, v, r, s) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6779:6797  _throwError(error) */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6791:6796  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6779:6790  _throwError */\n      tag_215\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6779:6797  _throwError(error) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6814:6823  recovered */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6807:6823  return recovered */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6598:6830  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":16992:17117  function _beforeTokenTransfer(... */\n    tag_182:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"saleIDO\\\\ZNS.sol\":17721:17845  function _afterTokenTransfer(... */\n    tag_188:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3963:4143  function _buildDomainSeparator() private view returns (bytes32) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4018:4025  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":1929:2024  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4077:4088  _hashedName */\n      immutable(\"0x87bd18b67247df6baa7533339c49063efb5f43390eb1bcf9e95a3aa2cdb49408\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4090:4104  _hashedVersion */\n      immutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4106:4119  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4129:4133  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4054:4135  abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      add(0x20, mload(0x40))\n      tag_219\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4044:4136  keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4037:4136  return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3963:4143  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2059:2464  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2118:2131  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2143:2154  uint256 len */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2157:2173  byteLength(sstr) */\n      tag_222\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2168:2172  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2157:2167  byteLength */\n      tag_223\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2157:2173  byteLength(sstr) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2143:2173  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2261:2278  string memory str */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2292:2294  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2281:2295  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_224\n      jumpi\n      tag_225\n      tag_124\n      jump\t// in\n    tag_225:\n    tag_224:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_226\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_226:\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2261:2295  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2383:2386  len */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2378:2381  str */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2371:2387  mstore(str, len) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2423:2427  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2416:2420  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2411:2414  str */\n      dup3\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2407:2421  add(str, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2400:2428  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2454:2457  str */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2447:2457  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2059:2464  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8336:8733  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8429:8441  bytes32 data */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8536:8540  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8530:8541  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8566:8576  \"\\x19\\x01\" */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8561:8564  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8554:8577  mstore(ptr, \"\\x19\\x01\") */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8613:8628  domainSeparator */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8606:8610  0x02 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8601:8604  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8597:8611  add(ptr, 0x02) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8590:8629  mstore(add(ptr, 0x02), domainSeparator) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8665:8675  structHash */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8658:8662  0x22 */\n      0x22\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8653:8656  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8649:8663  add(ptr, 0x22) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8642:8676  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8712:8716  0x42 */\n      0x42\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8707:8710  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8697:8717  keccak256(ptr, 0x42) */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8689:8717  data := keccak256(ptr, 0x42) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8505:8727  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":8336:8733  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5009:6465  function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5097:5104  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5106:5118  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6021:6087  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6016:6017  s */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6008:6018  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6008:6087  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6004:6165  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6119:6120  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6123:6153  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6103:6154  return (address(0), RecoverError.InvalidSignatureS) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_228)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6004:6165  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6259:6273  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6276:6300  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6286:6290  hash */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6292:6293  v */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6295:6296  r */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6298:6299  s */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6276:6300  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_230\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_233:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6259:6300  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6332:6333  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6314:6334  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6314:6320  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6314:6334  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6310:6411  if (signer == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6366:6367  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6370:6399  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6350:6400  return (address(0), RecoverError.InvalidSignature) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_228)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6310:6411  if (signer == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6429:6435  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6437:6457  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6421:6458  return (signer, RecoverError.NoError) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5009:6465  function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {... */\n    tag_228:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":570:1081  function _throwError(RecoverError error) private pure {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":647:667  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":638:667  error == RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_236\n      jumpi\n      tag_237\n      tag_238\n      jump\t// in\n    tag_237:\n    tag_236:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":638:643  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":638:667  error == RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_239\n      jumpi\n      tag_240\n      tag_238\n      jump\t// in\n    tag_240:\n    tag_239:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":634:1075  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":683:690  return; */\n      tag_235\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":634:1075  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":743:772  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":734:772  error == RecoverError.InvalidSignature */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_243\n      jumpi\n      tag_244\n      tag_238\n      jump\t// in\n    tag_244:\n    tag_243:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":734:739  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":734:772  error == RecoverError.InvalidSignature */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_245\n      jumpi\n      tag_246\n      tag_238\n      jump\t// in\n    tag_246:\n    tag_245:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":730:1075  if (error == RecoverError.InvalidSignature) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":788:822  revert(\"ECDSA: invalid signature\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":730:1075  if (error == RecoverError.InvalidSignature) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":852:887  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":843:887  error == RecoverError.InvalidSignatureLength */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_251\n      jumpi\n      tag_252\n      tag_238\n      jump\t// in\n    tag_252:\n    tag_251:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":843:848  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":843:887  error == RecoverError.InvalidSignatureLength */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_253\n      jumpi\n      tag_254\n      tag_238\n      jump\t// in\n    tag_254:\n    tag_253:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":839:1075  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":903:944  revert(\"ECDSA: invalid signature length\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":839:1075  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":974:1004  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":965:1004  error == RecoverError.InvalidSignatureS */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_259\n      jumpi\n      tag_260\n      tag_238\n      jump\t// in\n    tag_260:\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":965:970  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":965:1004  error == RecoverError.InvalidSignatureS */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_261\n      jumpi\n      tag_262\n      tag_238\n      jump\t// in\n    tag_262:\n    tag_261:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":961:1075  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":1020:1064  revert(\"ECDSA: invalid signature 's' value\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":961:1075  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":570:1081  function _throwError(RecoverError error) private pure {... */\n    tag_235:\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2536:2781  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2597:2604  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2616:2630  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2669:2673  0xFF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2660:2664  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2633:2666  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2633:2673  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2616:2673  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2696:2698  31 */\n      0x1f\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2687:2693  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2687:2698  result > 31 */\n      gt\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2683:2752  if (result > 31) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2721:2741  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2683:2752  if (result > 31) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2768:2774  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2761:2774  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2536:2781  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_268:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_269:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_270:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_330:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_330)\n    tag_332:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_271:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_272:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_335\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_268\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":818:889   */\n      tag_336\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_269\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_337\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_270\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":988:1017   */\n      tag_338\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_271\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_24:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_340\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_272\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_274:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_276:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_277:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_346\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_276\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_278:\n        /* \"#utility.yul\":1983:2007   */\n      tag_348\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_277\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_349:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_279:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_351\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_278\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_280:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_281:\n        /* \"#utility.yul\":2339:2363   */\n      tag_354\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_280\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_355:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_282:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_357\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_281\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_27:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_360\n      tag_274\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":2632:2751   */\n    tag_359:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_361\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_279\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_362\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_282\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_283:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_284:\n        /* \"#utility.yul\":3196:3217   */\n      tag_365\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_283\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_30:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_367\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_284\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_285:\n        /* \"#utility.yul\":3533:3557   */\n      tag_369\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_280\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_34:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_371\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_285\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_37:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_374\n      tag_274\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3908:4027   */\n    tag_373:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_375\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_279\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_376\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_279\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_377\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_282\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_286:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_287:\n        /* \"#utility.yul\":4598:4620   */\n      tag_380\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_286\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_43:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_382\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_287\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4930   */\n    tag_288:\n        /* \"#utility.yul\":4890:4897   */\n      0x00\n        /* \"#utility.yul\":4919:4924   */\n      dup2\n        /* \"#utility.yul\":4908:4924   */\n      swap1\n      pop\n        /* \"#utility.yul\":4853:4930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5054   */\n    tag_289:\n        /* \"#utility.yul\":5023:5047   */\n      tag_385\n        /* \"#utility.yul\":5041:5046   */\n      dup2\n        /* \"#utility.yul\":5023:5047   */\n      tag_288\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5018:5021   */\n      dup3\n        /* \"#utility.yul\":5011:5048   */\n      mstore\n        /* \"#utility.yul\":4936:5054   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5282   */\n    tag_47:\n        /* \"#utility.yul\":5153:5157   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"#utility.yul\":5180:5189   */\n      dup3\n        /* \"#utility.yul\":5176:5194   */\n      add\n        /* \"#utility.yul\":5168:5194   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5275   */\n      tag_387\n        /* \"#utility.yul\":5272:5273   */\n      0x00\n        /* \"#utility.yul\":5261:5270   */\n      dup4\n        /* \"#utility.yul\":5257:5274   */\n      add\n        /* \"#utility.yul\":5248:5254   */\n      dup5\n        /* \"#utility.yul\":5204:5275   */\n      tag_289\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5060:5282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5288:5617   */\n    tag_54:\n        /* \"#utility.yul\":5347:5353   */\n      0x00\n        /* \"#utility.yul\":5396:5398   */\n      0x20\n        /* \"#utility.yul\":5384:5393   */\n      dup3\n        /* \"#utility.yul\":5375:5382   */\n      dup5\n        /* \"#utility.yul\":5371:5394   */\n      sub\n        /* \"#utility.yul\":5367:5399   */\n      slt\n        /* \"#utility.yul\":5364:5483   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":5402:5481   */\n      tag_390\n      tag_274\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5364:5483   */\n    tag_389:\n        /* \"#utility.yul\":5522:5523   */\n      0x00\n        /* \"#utility.yul\":5547:5600   */\n      tag_391\n        /* \"#utility.yul\":5592:5599   */\n      dup5\n        /* \"#utility.yul\":5583:5589   */\n      dup3\n        /* \"#utility.yul\":5572:5581   */\n      dup6\n        /* \"#utility.yul\":5568:5590   */\n      add\n        /* \"#utility.yul\":5547:5600   */\n      tag_279\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5537:5600   */\n      swap2\n      pop\n        /* \"#utility.yul\":5493:5610   */\n      pop\n        /* \"#utility.yul\":5288:5617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5772   */\n    tag_290:\n        /* \"#utility.yul\":5659:5666   */\n      0x00\n        /* \"#utility.yul\":5699:5765   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5692:5697   */\n      dup3\n        /* \"#utility.yul\":5688:5766   */\n      and\n        /* \"#utility.yul\":5677:5766   */\n      swap1\n      pop\n        /* \"#utility.yul\":5623:5772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5778:5893   */\n    tag_291:\n        /* \"#utility.yul\":5863:5886   */\n      tag_394\n        /* \"#utility.yul\":5880:5885   */\n      dup2\n        /* \"#utility.yul\":5863:5886   */\n      tag_290\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":5858:5861   */\n      dup3\n        /* \"#utility.yul\":5851:5887   */\n      mstore\n        /* \"#utility.yul\":5778:5893   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5899:6017   */\n    tag_292:\n        /* \"#utility.yul\":5986:6010   */\n      tag_396\n        /* \"#utility.yul\":6004:6009   */\n      dup2\n        /* \"#utility.yul\":5986:6010   */\n      tag_277\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5981:5984   */\n      dup3\n        /* \"#utility.yul\":5974:6011   */\n      mstore\n        /* \"#utility.yul\":5899:6017   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6137   */\n    tag_293:\n        /* \"#utility.yul\":6090:6096   */\n      0x00\n        /* \"#utility.yul\":6124:6129   */\n      dup2\n        /* \"#utility.yul\":6118:6130   */\n      mload\n        /* \"#utility.yul\":6108:6130   */\n      swap1\n      pop\n        /* \"#utility.yul\":6023:6137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6143:6327   */\n    tag_294:\n        /* \"#utility.yul\":6242:6253   */\n      0x00\n        /* \"#utility.yul\":6276:6282   */\n      dup3\n        /* \"#utility.yul\":6271:6274   */\n      dup3\n        /* \"#utility.yul\":6264:6283   */\n      mstore\n        /* \"#utility.yul\":6316:6320   */\n      0x20\n        /* \"#utility.yul\":6311:6314   */\n      dup3\n        /* \"#utility.yul\":6307:6321   */\n      add\n        /* \"#utility.yul\":6292:6321   */\n      swap1\n      pop\n        /* \"#utility.yul\":6143:6327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6333:6465   */\n    tag_295:\n        /* \"#utility.yul\":6400:6404   */\n      0x00\n        /* \"#utility.yul\":6423:6426   */\n      dup2\n        /* \"#utility.yul\":6415:6426   */\n      swap1\n      pop\n        /* \"#utility.yul\":6453:6457   */\n      0x20\n        /* \"#utility.yul\":6448:6451   */\n      dup3\n        /* \"#utility.yul\":6444:6458   */\n      add\n        /* \"#utility.yul\":6436:6458   */\n      swap1\n      pop\n        /* \"#utility.yul\":6333:6465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6471:6579   */\n    tag_296:\n        /* \"#utility.yul\":6548:6572   */\n      tag_401\n        /* \"#utility.yul\":6566:6571   */\n      dup2\n        /* \"#utility.yul\":6548:6572   */\n      tag_280\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":6543:6546   */\n      dup3\n        /* \"#utility.yul\":6536:6573   */\n      mstore\n        /* \"#utility.yul\":6471:6579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6585:6764   */\n    tag_297:\n        /* \"#utility.yul\":6654:6664   */\n      0x00\n        /* \"#utility.yul\":6675:6721   */\n      tag_403\n        /* \"#utility.yul\":6717:6720   */\n      dup4\n        /* \"#utility.yul\":6709:6715   */\n      dup4\n        /* \"#utility.yul\":6675:6721   */\n      tag_296\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6753:6757   */\n      0x20\n        /* \"#utility.yul\":6748:6751   */\n      dup4\n        /* \"#utility.yul\":6744:6758   */\n      add\n        /* \"#utility.yul\":6730:6758   */\n      swap1\n      pop\n        /* \"#utility.yul\":6585:6764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6770:6883   */\n    tag_298:\n        /* \"#utility.yul\":6840:6844   */\n      0x00\n        /* \"#utility.yul\":6872:6876   */\n      0x20\n        /* \"#utility.yul\":6867:6870   */\n      dup3\n        /* \"#utility.yul\":6863:6877   */\n      add\n        /* \"#utility.yul\":6855:6877   */\n      swap1\n      pop\n        /* \"#utility.yul\":6770:6883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6919:7651   */\n    tag_299:\n        /* \"#utility.yul\":7038:7041   */\n      0x00\n        /* \"#utility.yul\":7067:7121   */\n      tag_406\n        /* \"#utility.yul\":7115:7120   */\n      dup3\n        /* \"#utility.yul\":7067:7121   */\n      tag_293\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7137:7223   */\n      tag_407\n        /* \"#utility.yul\":7216:7222   */\n      dup2\n        /* \"#utility.yul\":7211:7214   */\n      dup6\n        /* \"#utility.yul\":7137:7223   */\n      tag_294\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7130:7223   */\n      swap4\n      pop\n        /* \"#utility.yul\":7247:7303   */\n      tag_408\n        /* \"#utility.yul\":7297:7302   */\n      dup4\n        /* \"#utility.yul\":7247:7303   */\n      tag_295\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7326:7333   */\n      dup1\n        /* \"#utility.yul\":7357:7358   */\n      0x00\n        /* \"#utility.yul\":7342:7626   */\n    tag_409:\n        /* \"#utility.yul\":7367:7373   */\n      dup4\n        /* \"#utility.yul\":7364:7365   */\n      dup2\n        /* \"#utility.yul\":7361:7374   */\n      lt\n        /* \"#utility.yul\":7342:7626   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":7443:7449   */\n      dup2\n        /* \"#utility.yul\":7437:7450   */\n      mload\n        /* \"#utility.yul\":7470:7533   */\n      tag_412\n        /* \"#utility.yul\":7529:7532   */\n      dup9\n        /* \"#utility.yul\":7514:7527   */\n      dup3\n        /* \"#utility.yul\":7470:7533   */\n      tag_297\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7463:7533   */\n      swap8\n      pop\n        /* \"#utility.yul\":7556:7616   */\n      tag_413\n        /* \"#utility.yul\":7609:7615   */\n      dup4\n        /* \"#utility.yul\":7556:7616   */\n      tag_298\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7546:7616   */\n      swap3\n      pop\n        /* \"#utility.yul\":7402:7626   */\n      pop\n        /* \"#utility.yul\":7389:7390   */\n      0x01\n        /* \"#utility.yul\":7386:7387   */\n      dup2\n        /* \"#utility.yul\":7382:7391   */\n      add\n        /* \"#utility.yul\":7377:7391   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7626   */\n      jump(tag_409)\n    tag_411:\n        /* \"#utility.yul\":7346:7360   */\n      pop\n        /* \"#utility.yul\":7642:7645   */\n      dup6\n        /* \"#utility.yul\":7635:7645   */\n      swap4\n      pop\n        /* \"#utility.yul\":7043:7651   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6919:7651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7657:8872   */\n    tag_64:\n        /* \"#utility.yul\":8006:8010   */\n      0x00\n        /* \"#utility.yul\":8044:8047   */\n      0xe0\n        /* \"#utility.yul\":8033:8042   */\n      dup3\n        /* \"#utility.yul\":8029:8048   */\n      add\n        /* \"#utility.yul\":8021:8048   */\n      swap1\n      pop\n        /* \"#utility.yul\":8058:8127   */\n      tag_415\n        /* \"#utility.yul\":8124:8125   */\n      0x00\n        /* \"#utility.yul\":8113:8122   */\n      dup4\n        /* \"#utility.yul\":8109:8126   */\n      add\n        /* \"#utility.yul\":8100:8106   */\n      dup11\n        /* \"#utility.yul\":8058:8127   */\n      tag_291\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8174:8183   */\n      dup2\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8164:8184   */\n      sub\n        /* \"#utility.yul\":8159:8161   */\n      0x20\n        /* \"#utility.yul\":8148:8157   */\n      dup4\n        /* \"#utility.yul\":8144:8162   */\n      add\n        /* \"#utility.yul\":8137:8185   */\n      mstore\n        /* \"#utility.yul\":8202:8280   */\n      tag_416\n        /* \"#utility.yul\":8275:8279   */\n      dup2\n        /* \"#utility.yul\":8266:8272   */\n      dup10\n        /* \"#utility.yul\":8202:8280   */\n      tag_272\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8194:8280   */\n      swap1\n      pop\n        /* \"#utility.yul\":8327:8336   */\n      dup2\n        /* \"#utility.yul\":8321:8325   */\n      dup2\n        /* \"#utility.yul\":8317:8337   */\n      sub\n        /* \"#utility.yul\":8312:8314   */\n      0x40\n        /* \"#utility.yul\":8301:8310   */\n      dup4\n        /* \"#utility.yul\":8297:8315   */\n      add\n        /* \"#utility.yul\":8290:8338   */\n      mstore\n        /* \"#utility.yul\":8355:8433   */\n      tag_417\n        /* \"#utility.yul\":8428:8432   */\n      dup2\n        /* \"#utility.yul\":8419:8425   */\n      dup9\n        /* \"#utility.yul\":8355:8433   */\n      tag_272\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8347:8433   */\n      swap1\n      pop\n        /* \"#utility.yul\":8443:8515   */\n      tag_418\n        /* \"#utility.yul\":8511:8513   */\n      0x60\n        /* \"#utility.yul\":8500:8509   */\n      dup4\n        /* \"#utility.yul\":8496:8514   */\n      add\n        /* \"#utility.yul\":8487:8493   */\n      dup8\n        /* \"#utility.yul\":8443:8515   */\n      tag_285\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8525:8598   */\n      tag_419\n        /* \"#utility.yul\":8593:8596   */\n      0x80\n        /* \"#utility.yul\":8582:8591   */\n      dup4\n        /* \"#utility.yul\":8578:8597   */\n      add\n        /* \"#utility.yul\":8569:8575   */\n      dup7\n        /* \"#utility.yul\":8525:8598   */\n      tag_292\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8608:8681   */\n      tag_420\n        /* \"#utility.yul\":8676:8679   */\n      0xa0\n        /* \"#utility.yul\":8665:8674   */\n      dup4\n        /* \"#utility.yul\":8661:8680   */\n      add\n        /* \"#utility.yul\":8652:8658   */\n      dup6\n        /* \"#utility.yul\":8608:8681   */\n      tag_289\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8729:8738   */\n      dup2\n        /* \"#utility.yul\":8723:8727   */\n      dup2\n        /* \"#utility.yul\":8719:8739   */\n      sub\n        /* \"#utility.yul\":8713:8716   */\n      0xc0\n        /* \"#utility.yul\":8702:8711   */\n      dup4\n        /* \"#utility.yul\":8698:8717   */\n      add\n        /* \"#utility.yul\":8691:8740   */\n      mstore\n        /* \"#utility.yul\":8757:8865   */\n      tag_421\n        /* \"#utility.yul\":8860:8864   */\n      dup2\n        /* \"#utility.yul\":8851:8857   */\n      dup5\n        /* \"#utility.yul\":8757:8865   */\n      tag_299\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8749:8865   */\n      swap1\n      pop\n        /* \"#utility.yul\":7657:8872   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:8996   */\n    tag_300:\n        /* \"#utility.yul\":8949:8971   */\n      tag_423\n        /* \"#utility.yul\":8965:8970   */\n      dup2\n        /* \"#utility.yul\":8949:8971   */\n      tag_286\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8942:8947   */\n      dup2\n        /* \"#utility.yul\":8939:8972   */\n      eq\n        /* \"#utility.yul\":8929:8990   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":8986:8987   */\n      0x00\n        /* \"#utility.yul\":8983:8984   */\n      dup1\n        /* \"#utility.yul\":8976:8988   */\n      revert\n        /* \"#utility.yul\":8929:8990   */\n    tag_424:\n        /* \"#utility.yul\":8878:8996   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9002:9137   */\n    tag_301:\n        /* \"#utility.yul\":9046:9051   */\n      0x00\n        /* \"#utility.yul\":9084:9090   */\n      dup2\n        /* \"#utility.yul\":9071:9091   */\n      calldataload\n        /* \"#utility.yul\":9062:9091   */\n      swap1\n      pop\n        /* \"#utility.yul\":9100:9131   */\n      tag_426\n        /* \"#utility.yul\":9125:9130   */\n      dup2\n        /* \"#utility.yul\":9100:9131   */\n      tag_300\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9002:9137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9143:9265   */\n    tag_302:\n        /* \"#utility.yul\":9216:9240   */\n      tag_428\n        /* \"#utility.yul\":9234:9239   */\n      dup2\n        /* \"#utility.yul\":9216:9240   */\n      tag_288\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9209:9214   */\n      dup2\n        /* \"#utility.yul\":9206:9241   */\n      eq\n        /* \"#utility.yul\":9196:9259   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":9255:9256   */\n      0x00\n        /* \"#utility.yul\":9252:9253   */\n      dup1\n        /* \"#utility.yul\":9245:9257   */\n      revert\n        /* \"#utility.yul\":9196:9259   */\n    tag_429:\n        /* \"#utility.yul\":9143:9265   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9271:9410   */\n    tag_303:\n        /* \"#utility.yul\":9317:9322   */\n      0x00\n        /* \"#utility.yul\":9355:9361   */\n      dup2\n        /* \"#utility.yul\":9342:9362   */\n      calldataload\n        /* \"#utility.yul\":9333:9362   */\n      swap1\n      pop\n        /* \"#utility.yul\":9371:9404   */\n      tag_431\n        /* \"#utility.yul\":9398:9403   */\n      dup2\n        /* \"#utility.yul\":9371:9404   */\n      tag_302\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9271:9410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9416:10615   */\n    tag_78:\n        /* \"#utility.yul\":9527:9533   */\n      0x00\n        /* \"#utility.yul\":9535:9541   */\n      dup1\n        /* \"#utility.yul\":9543:9549   */\n      0x00\n        /* \"#utility.yul\":9551:9557   */\n      dup1\n        /* \"#utility.yul\":9559:9565   */\n      0x00\n        /* \"#utility.yul\":9567:9573   */\n      dup1\n        /* \"#utility.yul\":9575:9581   */\n      0x00\n        /* \"#utility.yul\":9624:9627   */\n      0xe0\n        /* \"#utility.yul\":9612:9621   */\n      dup9\n        /* \"#utility.yul\":9603:9610   */\n      dup11\n        /* \"#utility.yul\":9599:9622   */\n      sub\n        /* \"#utility.yul\":9595:9628   */\n      slt\n        /* \"#utility.yul\":9592:9712   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":9631:9710   */\n      tag_434\n      tag_274\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9592:9712   */\n    tag_433:\n        /* \"#utility.yul\":9751:9752   */\n      0x00\n        /* \"#utility.yul\":9776:9829   */\n      tag_435\n        /* \"#utility.yul\":9821:9828   */\n      dup11\n        /* \"#utility.yul\":9812:9818   */\n      dup3\n        /* \"#utility.yul\":9801:9810   */\n      dup12\n        /* \"#utility.yul\":9797:9819   */\n      add\n        /* \"#utility.yul\":9776:9829   */\n      tag_279\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":9766:9829   */\n      swap8\n      pop\n        /* \"#utility.yul\":9722:9839   */\n      pop\n        /* \"#utility.yul\":9878:9880   */\n      0x20\n        /* \"#utility.yul\":9904:9957   */\n      tag_436\n        /* \"#utility.yul\":9949:9956   */\n      dup11\n        /* \"#utility.yul\":9940:9946   */\n      dup3\n        /* \"#utility.yul\":9929:9938   */\n      dup12\n        /* \"#utility.yul\":9925:9947   */\n      add\n        /* \"#utility.yul\":9904:9957   */\n      tag_279\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9894:9957   */\n      swap7\n      pop\n        /* \"#utility.yul\":9849:9967   */\n      pop\n        /* \"#utility.yul\":10006:10008   */\n      0x40\n        /* \"#utility.yul\":10032:10085   */\n      tag_437\n        /* \"#utility.yul\":10077:10084   */\n      dup11\n        /* \"#utility.yul\":10068:10074   */\n      dup3\n        /* \"#utility.yul\":10057:10066   */\n      dup12\n        /* \"#utility.yul\":10053:10075   */\n      add\n        /* \"#utility.yul\":10032:10085   */\n      tag_282\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10022:10085   */\n      swap6\n      pop\n        /* \"#utility.yul\":9977:10095   */\n      pop\n        /* \"#utility.yul\":10134:10136   */\n      0x60\n        /* \"#utility.yul\":10160:10213   */\n      tag_438\n        /* \"#utility.yul\":10205:10212   */\n      dup11\n        /* \"#utility.yul\":10196:10202   */\n      dup3\n        /* \"#utility.yul\":10185:10194   */\n      dup12\n        /* \"#utility.yul\":10181:10203   */\n      add\n        /* \"#utility.yul\":10160:10213   */\n      tag_282\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10150:10213   */\n      swap5\n      pop\n        /* \"#utility.yul\":10105:10223   */\n      pop\n        /* \"#utility.yul\":10262:10265   */\n      0x80\n        /* \"#utility.yul\":10289:10340   */\n      tag_439\n        /* \"#utility.yul\":10332:10339   */\n      dup11\n        /* \"#utility.yul\":10323:10329   */\n      dup3\n        /* \"#utility.yul\":10312:10321   */\n      dup12\n        /* \"#utility.yul\":10308:10330   */\n      add\n        /* \"#utility.yul\":10289:10340   */\n      tag_301\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10279:10340   */\n      swap4\n      pop\n        /* \"#utility.yul\":10233:10350   */\n      pop\n        /* \"#utility.yul\":10389:10392   */\n      0xa0\n        /* \"#utility.yul\":10416:10469   */\n      tag_440\n        /* \"#utility.yul\":10461:10468   */\n      dup11\n        /* \"#utility.yul\":10452:10458   */\n      dup3\n        /* \"#utility.yul\":10441:10450   */\n      dup12\n        /* \"#utility.yul\":10437:10459   */\n      add\n        /* \"#utility.yul\":10416:10469   */\n      tag_303\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10406:10469   */\n      swap3\n      pop\n        /* \"#utility.yul\":10360:10479   */\n      pop\n        /* \"#utility.yul\":10518:10521   */\n      0xc0\n        /* \"#utility.yul\":10545:10598   */\n      tag_441\n        /* \"#utility.yul\":10590:10597   */\n      dup11\n        /* \"#utility.yul\":10581:10587   */\n      dup3\n        /* \"#utility.yul\":10570:10579   */\n      dup12\n        /* \"#utility.yul\":10566:10588   */\n      add\n        /* \"#utility.yul\":10545:10598   */\n      tag_303\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10535:10598   */\n      swap2\n      pop\n        /* \"#utility.yul\":10489:10608   */\n      pop\n        /* \"#utility.yul\":9416:10615   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10621:11095   */\n    tag_82:\n        /* \"#utility.yul\":10689:10695   */\n      0x00\n        /* \"#utility.yul\":10697:10703   */\n      dup1\n        /* \"#utility.yul\":10746:10748   */\n      0x40\n        /* \"#utility.yul\":10734:10743   */\n      dup4\n        /* \"#utility.yul\":10725:10732   */\n      dup6\n        /* \"#utility.yul\":10721:10744   */\n      sub\n        /* \"#utility.yul\":10717:10749   */\n      slt\n        /* \"#utility.yul\":10714:10833   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":10752:10831   */\n      tag_444\n      tag_274\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10714:10833   */\n    tag_443:\n        /* \"#utility.yul\":10872:10873   */\n      0x00\n        /* \"#utility.yul\":10897:10950   */\n      tag_445\n        /* \"#utility.yul\":10942:10949   */\n      dup6\n        /* \"#utility.yul\":10933:10939   */\n      dup3\n        /* \"#utility.yul\":10922:10931   */\n      dup7\n        /* \"#utility.yul\":10918:10940   */\n      add\n        /* \"#utility.yul\":10897:10950   */\n      tag_279\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10887:10950   */\n      swap3\n      pop\n        /* \"#utility.yul\":10843:10960   */\n      pop\n        /* \"#utility.yul\":10999:11001   */\n      0x20\n        /* \"#utility.yul\":11025:11078   */\n      tag_446\n        /* \"#utility.yul\":11070:11077   */\n      dup6\n        /* \"#utility.yul\":11061:11067   */\n      dup3\n        /* \"#utility.yul\":11050:11059   */\n      dup7\n        /* \"#utility.yul\":11046:11068   */\n      add\n        /* \"#utility.yul\":11025:11078   */\n      tag_279\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11015:11078   */\n      swap2\n      pop\n        /* \"#utility.yul\":10970:11088   */\n      pop\n        /* \"#utility.yul\":10621:11095   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11101:11281   */\n    tag_304:\n        /* \"#utility.yul\":11149:11226   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11146:11147   */\n      0x00\n        /* \"#utility.yul\":11139:11227   */\n      mstore\n        /* \"#utility.yul\":11246:11250   */\n      0x22\n        /* \"#utility.yul\":11243:11244   */\n      0x04\n        /* \"#utility.yul\":11236:11251   */\n      mstore\n        /* \"#utility.yul\":11270:11274   */\n      0x24\n        /* \"#utility.yul\":11267:11268   */\n      0x00\n        /* \"#utility.yul\":11260:11275   */\n      revert\n        /* \"#utility.yul\":11287:11607   */\n    tag_87:\n        /* \"#utility.yul\":11331:11337   */\n      0x00\n        /* \"#utility.yul\":11368:11369   */\n      0x02\n        /* \"#utility.yul\":11362:11366   */\n      dup3\n        /* \"#utility.yul\":11358:11370   */\n      div\n        /* \"#utility.yul\":11348:11370   */\n      swap1\n      pop\n        /* \"#utility.yul\":11415:11416   */\n      0x01\n        /* \"#utility.yul\":11409:11413   */\n      dup3\n        /* \"#utility.yul\":11405:11417   */\n      and\n        /* \"#utility.yul\":11436:11454   */\n      dup1\n        /* \"#utility.yul\":11426:11507   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":11492:11496   */\n      0x7f\n        /* \"#utility.yul\":11484:11490   */\n      dup3\n        /* \"#utility.yul\":11480:11497   */\n      and\n        /* \"#utility.yul\":11470:11497   */\n      swap2\n      pop\n        /* \"#utility.yul\":11426:11507   */\n    tag_449:\n        /* \"#utility.yul\":11554:11556   */\n      0x20\n        /* \"#utility.yul\":11546:11552   */\n      dup3\n        /* \"#utility.yul\":11543:11557   */\n      lt\n        /* \"#utility.yul\":11523:11541   */\n      dup2\n        /* \"#utility.yul\":11520:11558   */\n      sub\n        /* \"#utility.yul\":11517:11601   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":11573:11591   */\n      tag_451\n      tag_304\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11517:11601   */\n    tag_450:\n        /* \"#utility.yul\":11338:11607   */\n      pop\n        /* \"#utility.yul\":11287:11607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11613:11793   */\n    tag_305:\n        /* \"#utility.yul\":11661:11738   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11658:11659   */\n      0x00\n        /* \"#utility.yul\":11651:11739   */\n      mstore\n        /* \"#utility.yul\":11758:11762   */\n      0x11\n        /* \"#utility.yul\":11755:11756   */\n      0x04\n        /* \"#utility.yul\":11748:11763   */\n      mstore\n        /* \"#utility.yul\":11782:11786   */\n      0x24\n        /* \"#utility.yul\":11779:11780   */\n      0x00\n        /* \"#utility.yul\":11772:11787   */\n      revert\n        /* \"#utility.yul\":11799:11990   */\n    tag_113:\n        /* \"#utility.yul\":11839:11842   */\n      0x00\n        /* \"#utility.yul\":11858:11878   */\n      tag_454\n        /* \"#utility.yul\":11876:11877   */\n      dup3\n        /* \"#utility.yul\":11858:11878   */\n      tag_280\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":11853:11878   */\n      swap2\n      pop\n        /* \"#utility.yul\":11892:11912   */\n      tag_455\n        /* \"#utility.yul\":11910:11911   */\n      dup4\n        /* \"#utility.yul\":11892:11912   */\n      tag_280\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11887:11912   */\n      swap3\n      pop\n        /* \"#utility.yul\":11935:11936   */\n      dup3\n        /* \"#utility.yul\":11932:11933   */\n      dup3\n        /* \"#utility.yul\":11928:11937   */\n      add\n        /* \"#utility.yul\":11921:11937   */\n      swap1\n      pop\n        /* \"#utility.yul\":11956:11959   */\n      dup1\n        /* \"#utility.yul\":11953:11954   */\n      dup3\n        /* \"#utility.yul\":11950:11960   */\n      gt\n        /* \"#utility.yul\":11947:11983   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":11963:11981   */\n      tag_457\n      tag_305\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":11947:11983   */\n    tag_456:\n        /* \"#utility.yul\":11799:11990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11996:12176   */\n    tag_124:\n        /* \"#utility.yul\":12044:12121   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12041:12042   */\n      0x00\n        /* \"#utility.yul\":12034:12122   */\n      mstore\n        /* \"#utility.yul\":12141:12145   */\n      0x41\n        /* \"#utility.yul\":12138:12139   */\n      0x04\n        /* \"#utility.yul\":12131:12146   */\n      mstore\n        /* \"#utility.yul\":12165:12169   */\n      0x24\n        /* \"#utility.yul\":12162:12163   */\n      0x00\n        /* \"#utility.yul\":12155:12170   */\n      revert\n        /* \"#utility.yul\":12182:12406   */\n    tag_306:\n        /* \"#utility.yul\":12322:12356   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":12318:12319   */\n      0x00\n        /* \"#utility.yul\":12310:12316   */\n      dup3\n        /* \"#utility.yul\":12306:12320   */\n      add\n        /* \"#utility.yul\":12299:12357   */\n      mstore\n        /* \"#utility.yul\":12391:12398   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12386:12388   */\n      0x20\n        /* \"#utility.yul\":12378:12384   */\n      dup3\n        /* \"#utility.yul\":12374:12389   */\n      add\n        /* \"#utility.yul\":12367:12399   */\n      mstore\n        /* \"#utility.yul\":12182:12406   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12412:12778   */\n    tag_307:\n        /* \"#utility.yul\":12554:12557   */\n      0x00\n        /* \"#utility.yul\":12575:12642   */\n      tag_461\n        /* \"#utility.yul\":12639:12641   */\n      0x25\n        /* \"#utility.yul\":12634:12637   */\n      dup4\n        /* \"#utility.yul\":12575:12642   */\n      tag_269\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12568:12642   */\n      swap2\n      pop\n        /* \"#utility.yul\":12651:12744   */\n      tag_462\n        /* \"#utility.yul\":12740:12743   */\n      dup3\n        /* \"#utility.yul\":12651:12744   */\n      tag_306\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":12769:12771   */\n      0x40\n        /* \"#utility.yul\":12764:12767   */\n      dup3\n        /* \"#utility.yul\":12760:12772   */\n      add\n        /* \"#utility.yul\":12753:12772   */\n      swap1\n      pop\n        /* \"#utility.yul\":12412:12778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12784:13203   */\n    tag_137:\n        /* \"#utility.yul\":12950:12954   */\n      0x00\n        /* \"#utility.yul\":12988:12990   */\n      0x20\n        /* \"#utility.yul\":12977:12986   */\n      dup3\n        /* \"#utility.yul\":12973:12991   */\n      add\n        /* \"#utility.yul\":12965:12991   */\n      swap1\n      pop\n        /* \"#utility.yul\":13037:13046   */\n      dup2\n        /* \"#utility.yul\":13031:13035   */\n      dup2\n        /* \"#utility.yul\":13027:13047   */\n      sub\n        /* \"#utility.yul\":13023:13024   */\n      0x00\n        /* \"#utility.yul\":13012:13021   */\n      dup4\n        /* \"#utility.yul\":13008:13025   */\n      add\n        /* \"#utility.yul\":13001:13048   */\n      mstore\n        /* \"#utility.yul\":13065:13196   */\n      tag_464\n        /* \"#utility.yul\":13191:13195   */\n      dup2\n        /* \"#utility.yul\":13065:13196   */\n      tag_307\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":13057:13196   */\n      swap1\n      pop\n        /* \"#utility.yul\":12784:13203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13209:13984   */\n    tag_148:\n        /* \"#utility.yul\":13442:13446   */\n      0x00\n        /* \"#utility.yul\":13480:13483   */\n      0xc0\n        /* \"#utility.yul\":13469:13478   */\n      dup3\n        /* \"#utility.yul\":13465:13484   */\n      add\n        /* \"#utility.yul\":13457:13484   */\n      swap1\n      pop\n        /* \"#utility.yul\":13494:13565   */\n      tag_466\n        /* \"#utility.yul\":13562:13563   */\n      0x00\n        /* \"#utility.yul\":13551:13560   */\n      dup4\n        /* \"#utility.yul\":13547:13564   */\n      add\n        /* \"#utility.yul\":13538:13544   */\n      dup10\n        /* \"#utility.yul\":13494:13565   */\n      tag_289\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":13575:13647   */\n      tag_467\n        /* \"#utility.yul\":13643:13645   */\n      0x20\n        /* \"#utility.yul\":13632:13641   */\n      dup4\n        /* \"#utility.yul\":13628:13646   */\n      add\n        /* \"#utility.yul\":13619:13625   */\n      dup9\n        /* \"#utility.yul\":13575:13647   */\n      tag_292\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":13657:13729   */\n      tag_468\n        /* \"#utility.yul\":13725:13727   */\n      0x40\n        /* \"#utility.yul\":13714:13723   */\n      dup4\n        /* \"#utility.yul\":13710:13728   */\n      add\n        /* \"#utility.yul\":13701:13707   */\n      dup8\n        /* \"#utility.yul\":13657:13729   */\n      tag_292\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":13739:13811   */\n      tag_469\n        /* \"#utility.yul\":13807:13809   */\n      0x60\n        /* \"#utility.yul\":13796:13805   */\n      dup4\n        /* \"#utility.yul\":13792:13810   */\n      add\n        /* \"#utility.yul\":13783:13789   */\n      dup7\n        /* \"#utility.yul\":13739:13811   */\n      tag_285\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13821:13894   */\n      tag_470\n        /* \"#utility.yul\":13889:13892   */\n      0x80\n        /* \"#utility.yul\":13878:13887   */\n      dup4\n        /* \"#utility.yul\":13874:13893   */\n      add\n        /* \"#utility.yul\":13865:13871   */\n      dup6\n        /* \"#utility.yul\":13821:13894   */\n      tag_285\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":13904:13977   */\n      tag_471\n        /* \"#utility.yul\":13972:13975   */\n      0xa0\n        /* \"#utility.yul\":13961:13970   */\n      dup4\n        /* \"#utility.yul\":13957:13976   */\n      add\n        /* \"#utility.yul\":13948:13954   */\n      dup5\n        /* \"#utility.yul\":13904:13977   */\n      tag_285\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13209:13984   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13990:14322   */\n    tag_155:\n        /* \"#utility.yul\":14111:14115   */\n      0x00\n        /* \"#utility.yul\":14149:14151   */\n      0x40\n        /* \"#utility.yul\":14138:14147   */\n      dup3\n        /* \"#utility.yul\":14134:14152   */\n      add\n        /* \"#utility.yul\":14126:14152   */\n      swap1\n      pop\n        /* \"#utility.yul\":14162:14233   */\n      tag_473\n        /* \"#utility.yul\":14230:14231   */\n      0x00\n        /* \"#utility.yul\":14219:14228   */\n      dup4\n        /* \"#utility.yul\":14215:14232   */\n      add\n        /* \"#utility.yul\":14206:14212   */\n      dup6\n        /* \"#utility.yul\":14162:14233   */\n      tag_292\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":14243:14315   */\n      tag_474\n        /* \"#utility.yul\":14311:14313   */\n      0x20\n        /* \"#utility.yul\":14300:14309   */\n      dup4\n        /* \"#utility.yul\":14296:14314   */\n      add\n        /* \"#utility.yul\":14287:14293   */\n      dup5\n        /* \"#utility.yul\":14243:14315   */\n      tag_292\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":13990:14322   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14328:14551   */\n    tag_308:\n        /* \"#utility.yul\":14468:14502   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":14464:14465   */\n      0x00\n        /* \"#utility.yul\":14456:14462   */\n      dup3\n        /* \"#utility.yul\":14452:14466   */\n      add\n        /* \"#utility.yul\":14445:14503   */\n      mstore\n        /* \"#utility.yul\":14537:14543   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14532:14534   */\n      0x20\n        /* \"#utility.yul\":14524:14530   */\n      dup3\n        /* \"#utility.yul\":14520:14535   */\n      add\n        /* \"#utility.yul\":14513:14544   */\n      mstore\n        /* \"#utility.yul\":14328:14551   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14557:14923   */\n    tag_309:\n        /* \"#utility.yul\":14699:14702   */\n      0x00\n        /* \"#utility.yul\":14720:14787   */\n      tag_477\n        /* \"#utility.yul\":14784:14786   */\n      0x24\n        /* \"#utility.yul\":14779:14782   */\n      dup4\n        /* \"#utility.yul\":14720:14787   */\n      tag_269\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":14713:14787   */\n      swap2\n      pop\n        /* \"#utility.yul\":14796:14889   */\n      tag_478\n        /* \"#utility.yul\":14885:14888   */\n      dup3\n        /* \"#utility.yul\":14796:14889   */\n      tag_308\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":14914:14916   */\n      0x40\n        /* \"#utility.yul\":14909:14912   */\n      dup3\n        /* \"#utility.yul\":14905:14917   */\n      add\n        /* \"#utility.yul\":14898:14917   */\n      swap1\n      pop\n        /* \"#utility.yul\":14557:14923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14929:15348   */\n    tag_162:\n        /* \"#utility.yul\":15095:15099   */\n      0x00\n        /* \"#utility.yul\":15133:15135   */\n      0x20\n        /* \"#utility.yul\":15122:15131   */\n      dup3\n        /* \"#utility.yul\":15118:15136   */\n      add\n        /* \"#utility.yul\":15110:15136   */\n      swap1\n      pop\n        /* \"#utility.yul\":15182:15191   */\n      dup2\n        /* \"#utility.yul\":15176:15180   */\n      dup2\n        /* \"#utility.yul\":15172:15192   */\n      sub\n        /* \"#utility.yul\":15168:15169   */\n      0x00\n        /* \"#utility.yul\":15157:15166   */\n      dup4\n        /* \"#utility.yul\":15153:15170   */\n      add\n        /* \"#utility.yul\":15146:15193   */\n      mstore\n        /* \"#utility.yul\":15210:15341   */\n      tag_480\n        /* \"#utility.yul\":15336:15340   */\n      dup2\n        /* \"#utility.yul\":15210:15341   */\n      tag_309\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":15202:15341   */\n      swap1\n      pop\n        /* \"#utility.yul\":14929:15348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15354:15575   */\n    tag_310:\n        /* \"#utility.yul\":15494:15528   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":15490:15491   */\n      0x00\n        /* \"#utility.yul\":15482:15488   */\n      dup3\n        /* \"#utility.yul\":15478:15492   */\n      add\n        /* \"#utility.yul\":15471:15529   */\n      mstore\n        /* \"#utility.yul\":15563:15567   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15558:15560   */\n      0x20\n        /* \"#utility.yul\":15550:15556   */\n      dup3\n        /* \"#utility.yul\":15546:15561   */\n      add\n        /* \"#utility.yul\":15539:15568   */\n      mstore\n        /* \"#utility.yul\":15354:15575   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15581:15947   */\n    tag_311:\n        /* \"#utility.yul\":15723:15726   */\n      0x00\n        /* \"#utility.yul\":15744:15811   */\n      tag_483\n        /* \"#utility.yul\":15808:15810   */\n      0x22\n        /* \"#utility.yul\":15803:15806   */\n      dup4\n        /* \"#utility.yul\":15744:15811   */\n      tag_269\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":15737:15811   */\n      swap2\n      pop\n        /* \"#utility.yul\":15820:15913   */\n      tag_484\n        /* \"#utility.yul\":15909:15912   */\n      dup3\n        /* \"#utility.yul\":15820:15913   */\n      tag_310\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":15938:15940   */\n      0x40\n        /* \"#utility.yul\":15933:15936   */\n      dup3\n        /* \"#utility.yul\":15929:15941   */\n      add\n        /* \"#utility.yul\":15922:15941   */\n      swap1\n      pop\n        /* \"#utility.yul\":15581:15947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15953:16372   */\n    tag_165:\n        /* \"#utility.yul\":16119:16123   */\n      0x00\n        /* \"#utility.yul\":16157:16159   */\n      0x20\n        /* \"#utility.yul\":16146:16155   */\n      dup3\n        /* \"#utility.yul\":16142:16160   */\n      add\n        /* \"#utility.yul\":16134:16160   */\n      swap1\n      pop\n        /* \"#utility.yul\":16206:16215   */\n      dup2\n        /* \"#utility.yul\":16200:16204   */\n      dup2\n        /* \"#utility.yul\":16196:16216   */\n      sub\n        /* \"#utility.yul\":16192:16193   */\n      0x00\n        /* \"#utility.yul\":16181:16190   */\n      dup4\n        /* \"#utility.yul\":16177:16194   */\n      add\n        /* \"#utility.yul\":16170:16217   */\n      mstore\n        /* \"#utility.yul\":16234:16365   */\n      tag_486\n        /* \"#utility.yul\":16360:16364   */\n      dup2\n        /* \"#utility.yul\":16234:16365   */\n      tag_311\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":16226:16365   */\n      swap1\n      pop\n        /* \"#utility.yul\":15953:16372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16378:16557   */\n    tag_312:\n        /* \"#utility.yul\":16518:16549   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":16514:16515   */\n      0x00\n        /* \"#utility.yul\":16506:16512   */\n      dup3\n        /* \"#utility.yul\":16502:16516   */\n      add\n        /* \"#utility.yul\":16495:16550   */\n      mstore\n        /* \"#utility.yul\":16378:16557   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16563:16929   */\n    tag_313:\n        /* \"#utility.yul\":16705:16708   */\n      0x00\n        /* \"#utility.yul\":16726:16793   */\n      tag_489\n        /* \"#utility.yul\":16790:16792   */\n      0x1d\n        /* \"#utility.yul\":16785:16788   */\n      dup4\n        /* \"#utility.yul\":16726:16793   */\n      tag_269\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":16719:16793   */\n      swap2\n      pop\n        /* \"#utility.yul\":16802:16895   */\n      tag_490\n        /* \"#utility.yul\":16891:16894   */\n      dup3\n        /* \"#utility.yul\":16802:16895   */\n      tag_312\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":16920:16922   */\n      0x20\n        /* \"#utility.yul\":16915:16918   */\n      dup3\n        /* \"#utility.yul\":16911:16923   */\n      add\n        /* \"#utility.yul\":16904:16923   */\n      swap1\n      pop\n        /* \"#utility.yul\":16563:16929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16935:17354   */\n    tag_172:\n        /* \"#utility.yul\":17101:17105   */\n      0x00\n        /* \"#utility.yul\":17139:17141   */\n      0x20\n        /* \"#utility.yul\":17128:17137   */\n      dup3\n        /* \"#utility.yul\":17124:17142   */\n      add\n        /* \"#utility.yul\":17116:17142   */\n      swap1\n      pop\n        /* \"#utility.yul\":17188:17197   */\n      dup2\n        /* \"#utility.yul\":17182:17186   */\n      dup2\n        /* \"#utility.yul\":17178:17198   */\n      sub\n        /* \"#utility.yul\":17174:17175   */\n      0x00\n        /* \"#utility.yul\":17163:17172   */\n      dup4\n        /* \"#utility.yul\":17159:17176   */\n      add\n        /* \"#utility.yul\":17152:17199   */\n      mstore\n        /* \"#utility.yul\":17216:17347   */\n      tag_492\n        /* \"#utility.yul\":17342:17346   */\n      dup2\n        /* \"#utility.yul\":17216:17347   */\n      tag_313\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":17208:17347   */\n      swap1\n      pop\n        /* \"#utility.yul\":16935:17354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17360:17584   */\n    tag_314:\n        /* \"#utility.yul\":17500:17534   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":17496:17497   */\n      0x00\n        /* \"#utility.yul\":17488:17494   */\n      dup3\n        /* \"#utility.yul\":17484:17498   */\n      add\n        /* \"#utility.yul\":17477:17535   */\n      mstore\n        /* \"#utility.yul\":17569:17576   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17564:17566   */\n      0x20\n        /* \"#utility.yul\":17556:17562   */\n      dup3\n        /* \"#utility.yul\":17552:17567   */\n      add\n        /* \"#utility.yul\":17545:17577   */\n      mstore\n        /* \"#utility.yul\":17360:17584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17590:17956   */\n    tag_315:\n        /* \"#utility.yul\":17732:17735   */\n      0x00\n        /* \"#utility.yul\":17753:17820   */\n      tag_495\n        /* \"#utility.yul\":17817:17819   */\n      0x25\n        /* \"#utility.yul\":17812:17815   */\n      dup4\n        /* \"#utility.yul\":17753:17820   */\n      tag_269\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":17746:17820   */\n      swap2\n      pop\n        /* \"#utility.yul\":17829:17922   */\n      tag_496\n        /* \"#utility.yul\":17918:17921   */\n      dup3\n        /* \"#utility.yul\":17829:17922   */\n      tag_314\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":17947:17949   */\n      0x40\n        /* \"#utility.yul\":17942:17945   */\n      dup3\n        /* \"#utility.yul\":17938:17950   */\n      add\n        /* \"#utility.yul\":17931:17950   */\n      swap1\n      pop\n        /* \"#utility.yul\":17590:17956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17962:18381   */\n    tag_177:\n        /* \"#utility.yul\":18128:18132   */\n      0x00\n        /* \"#utility.yul\":18166:18168   */\n      0x20\n        /* \"#utility.yul\":18155:18164   */\n      dup3\n        /* \"#utility.yul\":18151:18169   */\n      add\n        /* \"#utility.yul\":18143:18169   */\n      swap1\n      pop\n        /* \"#utility.yul\":18215:18224   */\n      dup2\n        /* \"#utility.yul\":18209:18213   */\n      dup2\n        /* \"#utility.yul\":18205:18225   */\n      sub\n        /* \"#utility.yul\":18201:18202   */\n      0x00\n        /* \"#utility.yul\":18190:18199   */\n      dup4\n        /* \"#utility.yul\":18186:18203   */\n      add\n        /* \"#utility.yul\":18179:18226   */\n      mstore\n        /* \"#utility.yul\":18243:18374   */\n      tag_498\n        /* \"#utility.yul\":18369:18373   */\n      dup2\n        /* \"#utility.yul\":18243:18374   */\n      tag_315\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":18235:18374   */\n      swap1\n      pop\n        /* \"#utility.yul\":17962:18381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18387:18609   */\n    tag_316:\n        /* \"#utility.yul\":18527:18561   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":18523:18524   */\n      0x00\n        /* \"#utility.yul\":18515:18521   */\n      dup3\n        /* \"#utility.yul\":18511:18525   */\n      add\n        /* \"#utility.yul\":18504:18562   */\n      mstore\n        /* \"#utility.yul\":18596:18601   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18591:18593   */\n      0x20\n        /* \"#utility.yul\":18583:18589   */\n      dup3\n        /* \"#utility.yul\":18579:18594   */\n      add\n        /* \"#utility.yul\":18572:18602   */\n      mstore\n        /* \"#utility.yul\":18387:18609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18615:18981   */\n    tag_317:\n        /* \"#utility.yul\":18757:18760   */\n      0x00\n        /* \"#utility.yul\":18778:18845   */\n      tag_501\n        /* \"#utility.yul\":18842:18844   */\n      0x23\n        /* \"#utility.yul\":18837:18840   */\n      dup4\n        /* \"#utility.yul\":18778:18845   */\n      tag_269\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":18771:18845   */\n      swap2\n      pop\n        /* \"#utility.yul\":18854:18947   */\n      tag_502\n        /* \"#utility.yul\":18943:18946   */\n      dup3\n        /* \"#utility.yul\":18854:18947   */\n      tag_316\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":18972:18974   */\n      0x40\n        /* \"#utility.yul\":18967:18970   */\n      dup3\n        /* \"#utility.yul\":18963:18975   */\n      add\n        /* \"#utility.yul\":18956:18975   */\n      swap1\n      pop\n        /* \"#utility.yul\":18615:18981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18987:19406   */\n    tag_180:\n        /* \"#utility.yul\":19153:19157   */\n      0x00\n        /* \"#utility.yul\":19191:19193   */\n      0x20\n        /* \"#utility.yul\":19180:19189   */\n      dup3\n        /* \"#utility.yul\":19176:19194   */\n      add\n        /* \"#utility.yul\":19168:19194   */\n      swap1\n      pop\n        /* \"#utility.yul\":19240:19249   */\n      dup2\n        /* \"#utility.yul\":19234:19238   */\n      dup2\n        /* \"#utility.yul\":19230:19250   */\n      sub\n        /* \"#utility.yul\":19226:19227   */\n      0x00\n        /* \"#utility.yul\":19215:19224   */\n      dup4\n        /* \"#utility.yul\":19211:19228   */\n      add\n        /* \"#utility.yul\":19204:19251   */\n      mstore\n        /* \"#utility.yul\":19268:19399   */\n      tag_504\n        /* \"#utility.yul\":19394:19398   */\n      dup2\n        /* \"#utility.yul\":19268:19399   */\n      tag_317\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":19260:19399   */\n      swap1\n      pop\n        /* \"#utility.yul\":18987:19406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19412:19637   */\n    tag_318:\n        /* \"#utility.yul\":19552:19586   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":19548:19549   */\n      0x00\n        /* \"#utility.yul\":19540:19546   */\n      dup3\n        /* \"#utility.yul\":19536:19550   */\n      add\n        /* \"#utility.yul\":19529:19587   */\n      mstore\n        /* \"#utility.yul\":19621:19629   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19616:19618   */\n      0x20\n        /* \"#utility.yul\":19608:19614   */\n      dup3\n        /* \"#utility.yul\":19604:19619   */\n      add\n        /* \"#utility.yul\":19597:19630   */\n      mstore\n        /* \"#utility.yul\":19412:19637   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19643:20009   */\n    tag_319:\n        /* \"#utility.yul\":19785:19788   */\n      0x00\n        /* \"#utility.yul\":19806:19873   */\n      tag_507\n        /* \"#utility.yul\":19870:19872   */\n      0x26\n        /* \"#utility.yul\":19865:19868   */\n      dup4\n        /* \"#utility.yul\":19806:19873   */\n      tag_269\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":19799:19873   */\n      swap2\n      pop\n        /* \"#utility.yul\":19882:19975   */\n      tag_508\n        /* \"#utility.yul\":19971:19974   */\n      dup3\n        /* \"#utility.yul\":19882:19975   */\n      tag_318\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":20000:20002   */\n      0x40\n        /* \"#utility.yul\":19995:19998   */\n      dup3\n        /* \"#utility.yul\":19991:20003   */\n      add\n        /* \"#utility.yul\":19984:20003   */\n      swap1\n      pop\n        /* \"#utility.yul\":19643:20009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20015:20434   */\n    tag_185:\n        /* \"#utility.yul\":20181:20185   */\n      0x00\n        /* \"#utility.yul\":20219:20221   */\n      0x20\n        /* \"#utility.yul\":20208:20217   */\n      dup3\n        /* \"#utility.yul\":20204:20222   */\n      add\n        /* \"#utility.yul\":20196:20222   */\n      swap1\n      pop\n        /* \"#utility.yul\":20268:20277   */\n      dup2\n        /* \"#utility.yul\":20262:20266   */\n      dup2\n        /* \"#utility.yul\":20258:20278   */\n      sub\n        /* \"#utility.yul\":20254:20255   */\n      0x00\n        /* \"#utility.yul\":20243:20252   */\n      dup4\n        /* \"#utility.yul\":20239:20256   */\n      add\n        /* \"#utility.yul\":20232:20279   */\n      mstore\n        /* \"#utility.yul\":20296:20427   */\n      tag_510\n        /* \"#utility.yul\":20422:20426   */\n      dup2\n        /* \"#utility.yul\":20296:20427   */\n      tag_319\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":20288:20427   */\n      swap1\n      pop\n        /* \"#utility.yul\":20015:20434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20440:21104   */\n    tag_220:\n        /* \"#utility.yul\":20645:20649   */\n      0x00\n        /* \"#utility.yul\":20683:20686   */\n      0xa0\n        /* \"#utility.yul\":20672:20681   */\n      dup3\n        /* \"#utility.yul\":20668:20687   */\n      add\n        /* \"#utility.yul\":20660:20687   */\n      swap1\n      pop\n        /* \"#utility.yul\":20697:20768   */\n      tag_512\n        /* \"#utility.yul\":20765:20766   */\n      0x00\n        /* \"#utility.yul\":20754:20763   */\n      dup4\n        /* \"#utility.yul\":20750:20767   */\n      add\n        /* \"#utility.yul\":20741:20747   */\n      dup9\n        /* \"#utility.yul\":20697:20768   */\n      tag_289\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":20778:20850   */\n      tag_513\n        /* \"#utility.yul\":20846:20848   */\n      0x20\n        /* \"#utility.yul\":20835:20844   */\n      dup4\n        /* \"#utility.yul\":20831:20849   */\n      add\n        /* \"#utility.yul\":20822:20828   */\n      dup8\n        /* \"#utility.yul\":20778:20850   */\n      tag_289\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":20860:20932   */\n      tag_514\n        /* \"#utility.yul\":20928:20930   */\n      0x40\n        /* \"#utility.yul\":20917:20926   */\n      dup4\n        /* \"#utility.yul\":20913:20931   */\n      add\n        /* \"#utility.yul\":20904:20910   */\n      dup7\n        /* \"#utility.yul\":20860:20932   */\n      tag_289\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":20942:21014   */\n      tag_515\n        /* \"#utility.yul\":21010:21012   */\n      0x60\n        /* \"#utility.yul\":20999:21008   */\n      dup4\n        /* \"#utility.yul\":20995:21013   */\n      add\n        /* \"#utility.yul\":20986:20992   */\n      dup6\n        /* \"#utility.yul\":20942:21014   */\n      tag_285\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":21024:21097   */\n      tag_516\n        /* \"#utility.yul\":21092:21095   */\n      0x80\n        /* \"#utility.yul\":21081:21090   */\n      dup4\n        /* \"#utility.yul\":21077:21096   */\n      add\n        /* \"#utility.yul\":21068:21074   */\n      dup5\n        /* \"#utility.yul\":21024:21097   */\n      tag_292\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":20440:21104   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21110:21655   */\n    tag_231:\n        /* \"#utility.yul\":21283:21287   */\n      0x00\n        /* \"#utility.yul\":21321:21324   */\n      0x80\n        /* \"#utility.yul\":21310:21319   */\n      dup3\n        /* \"#utility.yul\":21306:21325   */\n      add\n        /* \"#utility.yul\":21298:21325   */\n      swap1\n      pop\n        /* \"#utility.yul\":21335:21406   */\n      tag_518\n        /* \"#utility.yul\":21403:21404   */\n      0x00\n        /* \"#utility.yul\":21392:21401   */\n      dup4\n        /* \"#utility.yul\":21388:21405   */\n      add\n        /* \"#utility.yul\":21379:21385   */\n      dup8\n        /* \"#utility.yul\":21335:21406   */\n      tag_289\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":21416:21484   */\n      tag_519\n        /* \"#utility.yul\":21480:21482   */\n      0x20\n        /* \"#utility.yul\":21469:21478   */\n      dup4\n        /* \"#utility.yul\":21465:21483   */\n      add\n        /* \"#utility.yul\":21456:21462   */\n      dup7\n        /* \"#utility.yul\":21416:21484   */\n      tag_287\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":21494:21566   */\n      tag_520\n        /* \"#utility.yul\":21562:21564   */\n      0x40\n        /* \"#utility.yul\":21551:21560   */\n      dup4\n        /* \"#utility.yul\":21547:21565   */\n      add\n        /* \"#utility.yul\":21538:21544   */\n      dup6\n        /* \"#utility.yul\":21494:21566   */\n      tag_289\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":21576:21648   */\n      tag_521\n        /* \"#utility.yul\":21644:21646   */\n      0x60\n        /* \"#utility.yul\":21633:21642   */\n      dup4\n        /* \"#utility.yul\":21629:21647   */\n      add\n        /* \"#utility.yul\":21620:21626   */\n      dup5\n        /* \"#utility.yul\":21576:21648   */\n      tag_289\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":21110:21655   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21661:21841   */\n    tag_238:\n        /* \"#utility.yul\":21709:21786   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21706:21707   */\n      0x00\n        /* \"#utility.yul\":21699:21787   */\n      mstore\n        /* \"#utility.yul\":21806:21810   */\n      0x21\n        /* \"#utility.yul\":21803:21804   */\n      0x04\n        /* \"#utility.yul\":21796:21811   */\n      mstore\n        /* \"#utility.yul\":21830:21834   */\n      0x24\n        /* \"#utility.yul\":21827:21828   */\n      0x00\n        /* \"#utility.yul\":21820:21835   */\n      revert\n        /* \"#utility.yul\":21847:22021   */\n    tag_320:\n        /* \"#utility.yul\":21987:22013   */\n      0x45434453413a20696e76616c6964207369676e61747572650000000000000000\n        /* \"#utility.yul\":21983:21984   */\n      0x00\n        /* \"#utility.yul\":21975:21981   */\n      dup3\n        /* \"#utility.yul\":21971:21985   */\n      add\n        /* \"#utility.yul\":21964:22014   */\n      mstore\n        /* \"#utility.yul\":21847:22021   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22027:22393   */\n    tag_321:\n        /* \"#utility.yul\":22169:22172   */\n      0x00\n        /* \"#utility.yul\":22190:22257   */\n      tag_525\n        /* \"#utility.yul\":22254:22256   */\n      0x18\n        /* \"#utility.yul\":22249:22252   */\n      dup4\n        /* \"#utility.yul\":22190:22257   */\n      tag_269\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":22183:22257   */\n      swap2\n      pop\n        /* \"#utility.yul\":22266:22359   */\n      tag_526\n        /* \"#utility.yul\":22355:22358   */\n      dup3\n        /* \"#utility.yul\":22266:22359   */\n      tag_320\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":22384:22386   */\n      0x20\n        /* \"#utility.yul\":22379:22382   */\n      dup3\n        /* \"#utility.yul\":22375:22387   */\n      add\n        /* \"#utility.yul\":22368:22387   */\n      swap1\n      pop\n        /* \"#utility.yul\":22027:22393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22399:22818   */\n    tag_249:\n        /* \"#utility.yul\":22565:22569   */\n      0x00\n        /* \"#utility.yul\":22603:22605   */\n      0x20\n        /* \"#utility.yul\":22592:22601   */\n      dup3\n        /* \"#utility.yul\":22588:22606   */\n      add\n        /* \"#utility.yul\":22580:22606   */\n      swap1\n      pop\n        /* \"#utility.yul\":22652:22661   */\n      dup2\n        /* \"#utility.yul\":22646:22650   */\n      dup2\n        /* \"#utility.yul\":22642:22662   */\n      sub\n        /* \"#utility.yul\":22638:22639   */\n      0x00\n        /* \"#utility.yul\":22627:22636   */\n      dup4\n        /* \"#utility.yul\":22623:22640   */\n      add\n        /* \"#utility.yul\":22616:22663   */\n      mstore\n        /* \"#utility.yul\":22680:22811   */\n      tag_528\n        /* \"#utility.yul\":22806:22810   */\n      dup2\n        /* \"#utility.yul\":22680:22811   */\n      tag_321\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":22672:22811   */\n      swap1\n      pop\n        /* \"#utility.yul\":22399:22818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22824:23005   */\n    tag_322:\n        /* \"#utility.yul\":22964:22997   */\n      0x45434453413a20696e76616c6964207369676e6174757265206c656e67746800\n        /* \"#utility.yul\":22960:22961   */\n      0x00\n        /* \"#utility.yul\":22952:22958   */\n      dup3\n        /* \"#utility.yul\":22948:22962   */\n      add\n        /* \"#utility.yul\":22941:22998   */\n      mstore\n        /* \"#utility.yul\":22824:23005   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23011:23377   */\n    tag_323:\n        /* \"#utility.yul\":23153:23156   */\n      0x00\n        /* \"#utility.yul\":23174:23241   */\n      tag_531\n        /* \"#utility.yul\":23238:23240   */\n      0x1f\n        /* \"#utility.yul\":23233:23236   */\n      dup4\n        /* \"#utility.yul\":23174:23241   */\n      tag_269\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":23167:23241   */\n      swap2\n      pop\n        /* \"#utility.yul\":23250:23343   */\n      tag_532\n        /* \"#utility.yul\":23339:23342   */\n      dup3\n        /* \"#utility.yul\":23250:23343   */\n      tag_322\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":23368:23370   */\n      0x20\n        /* \"#utility.yul\":23363:23366   */\n      dup3\n        /* \"#utility.yul\":23359:23371   */\n      add\n        /* \"#utility.yul\":23352:23371   */\n      swap1\n      pop\n        /* \"#utility.yul\":23011:23377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23383:23802   */\n    tag_257:\n        /* \"#utility.yul\":23549:23553   */\n      0x00\n        /* \"#utility.yul\":23587:23589   */\n      0x20\n        /* \"#utility.yul\":23576:23585   */\n      dup3\n        /* \"#utility.yul\":23572:23590   */\n      add\n        /* \"#utility.yul\":23564:23590   */\n      swap1\n      pop\n        /* \"#utility.yul\":23636:23645   */\n      dup2\n        /* \"#utility.yul\":23630:23634   */\n      dup2\n        /* \"#utility.yul\":23626:23646   */\n      sub\n        /* \"#utility.yul\":23622:23623   */\n      0x00\n        /* \"#utility.yul\":23611:23620   */\n      dup4\n        /* \"#utility.yul\":23607:23624   */\n      add\n        /* \"#utility.yul\":23600:23647   */\n      mstore\n        /* \"#utility.yul\":23664:23795   */\n      tag_534\n        /* \"#utility.yul\":23790:23794   */\n      dup2\n        /* \"#utility.yul\":23664:23795   */\n      tag_323\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":23656:23795   */\n      swap1\n      pop\n        /* \"#utility.yul\":23383:23802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23808:24029   */\n    tag_324:\n        /* \"#utility.yul\":23948:23982   */\n      0x45434453413a20696e76616c6964207369676e6174757265202773272076616c\n        /* \"#utility.yul\":23944:23945   */\n      0x00\n        /* \"#utility.yul\":23936:23942   */\n      dup3\n        /* \"#utility.yul\":23932:23946   */\n      add\n        /* \"#utility.yul\":23925:23983   */\n      mstore\n        /* \"#utility.yul\":24017:24021   */\n      0x7565000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24012:24014   */\n      0x20\n        /* \"#utility.yul\":24004:24010   */\n      dup3\n        /* \"#utility.yul\":24000:24015   */\n      add\n        /* \"#utility.yul\":23993:24022   */\n      mstore\n        /* \"#utility.yul\":23808:24029   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24035:24401   */\n    tag_325:\n        /* \"#utility.yul\":24177:24180   */\n      0x00\n        /* \"#utility.yul\":24198:24265   */\n      tag_537\n        /* \"#utility.yul\":24262:24264   */\n      0x22\n        /* \"#utility.yul\":24257:24260   */\n      dup4\n        /* \"#utility.yul\":24198:24265   */\n      tag_269\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":24191:24265   */\n      swap2\n      pop\n        /* \"#utility.yul\":24274:24367   */\n      tag_538\n        /* \"#utility.yul\":24363:24366   */\n      dup3\n        /* \"#utility.yul\":24274:24367   */\n      tag_324\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":24392:24394   */\n      0x40\n        /* \"#utility.yul\":24387:24390   */\n      dup3\n        /* \"#utility.yul\":24383:24395   */\n      add\n        /* \"#utility.yul\":24376:24395   */\n      swap1\n      pop\n        /* \"#utility.yul\":24035:24401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24407:24826   */\n    tag_265:\n        /* \"#utility.yul\":24573:24577   */\n      0x00\n        /* \"#utility.yul\":24611:24613   */\n      0x20\n        /* \"#utility.yul\":24600:24609   */\n      dup3\n        /* \"#utility.yul\":24596:24614   */\n      add\n        /* \"#utility.yul\":24588:24614   */\n      swap1\n      pop\n        /* \"#utility.yul\":24660:24669   */\n      dup2\n        /* \"#utility.yul\":24654:24658   */\n      dup2\n        /* \"#utility.yul\":24650:24670   */\n      sub\n        /* \"#utility.yul\":24646:24647   */\n      0x00\n        /* \"#utility.yul\":24635:24644   */\n      dup4\n        /* \"#utility.yul\":24631:24648   */\n      add\n        /* \"#utility.yul\":24624:24671   */\n      mstore\n        /* \"#utility.yul\":24688:24819   */\n      tag_540\n        /* \"#utility.yul\":24814:24818   */\n      dup2\n        /* \"#utility.yul\":24688:24819   */\n      tag_325\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":24680:24819   */\n      swap1\n      pop\n        /* \"#utility.yul\":24407:24826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a04d872616b4a7d936a58cf02d69cb34601f86d8e97b1fb385a1e93e1402ac5a64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1038": {
									"entryPoint": null,
									"id": 1038,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2283": {
									"entryPoint": null,
									"id": 2283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2966": {
									"entryPoint": null,
									"id": 2966,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3097": {
									"entryPoint": null,
									"id": 3097,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_2824": {
									"entryPoint": 1009,
									"id": 2824,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2813": {
									"entryPoint": 1004,
									"id": 2813,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_1085": {
									"entryPoint": 440,
									"id": 1085,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_2642": {
									"entryPoint": 532,
									"id": 2642,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getStringSlot_327": {
									"entryPoint": 995,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_181": {
									"entryPoint": 355,
									"id": 181,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_83": {
									"entryPoint": 889,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 2506,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 2998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2723,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 2976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1087,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1023,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e": {
									"entryPoint": 2613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1762,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1904,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13824:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:9",
														"type": ""
													}
												],
												"src": "545:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "783:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "800:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "803:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "793:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "793:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "694:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "906:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "926:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "916:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "916:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "817:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "988:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "998:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1016:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1023:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1012:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1012:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1028:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1028:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1008:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1008:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "998:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "981:6:9",
														"type": ""
													}
												],
												"src": "940:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1076:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1096:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1086:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1086:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1190:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1193:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1183:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1214:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1217:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1207:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1207:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1048:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1277:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1287:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1309:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1339:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1317:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1317:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1305:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1291:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1458:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1458:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1458:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1399:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1411:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1396:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1396:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1435:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1447:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1432:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1432:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1393:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:62:9"
															},
															"nodeType": "YulIf",
															"src": "1390:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1494:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1498:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1487:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1263:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1271:4:9",
														"type": ""
													}
												],
												"src": "1234:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1562:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1572:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1582:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1572:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1631:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1639:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1611:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1611:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1546:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1555:6:9",
														"type": ""
													}
												],
												"src": "1521:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1723:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1828:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1830:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1830:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1830:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1800:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1797:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:30:9"
															},
															"nodeType": "YulIf",
															"src": "1794:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1860:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1868:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1860:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1934:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1946:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1952:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1942:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1934:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1707:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1718:4:9",
														"type": ""
													}
												],
												"src": "1656:308:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2032:184:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2042:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2051:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2046:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2111:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2136:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2141:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2132:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2132:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2155:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2160:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2151:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2151:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2145:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2145:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2125:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2125:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2125:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2072:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2075:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2069:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2069:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2083:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2085:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2094:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2097:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2090:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2090:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2085:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2065:3:9",
																"statements": []
															},
															"src": "2061:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2194:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2199:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2190:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2190:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2183:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2014:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2019:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2024:6:9",
														"type": ""
													}
												],
												"src": "1970:246:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2317:339:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2327:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2394:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2352:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2336:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2336:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2327:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2418:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2425:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2411:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2411:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2441:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2456:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2463:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2452:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2452:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2445:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2506:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2508:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2508:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2508:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2487:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2492:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2483:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2483:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2501:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2480:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:25:9"
															},
															"nodeType": "YulIf",
															"src": "2477:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2633:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2638:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2643:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2598:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2598:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2598:52:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2290:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2295:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2303:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2311:5:9",
														"type": ""
													}
												],
												"src": "2222:434:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2749:282:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2798:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2800:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2800:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2800:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2777:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2785:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2773:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2773:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2792:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:35:9"
															},
															"nodeType": "YulIf",
															"src": "2759:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2910:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2904:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2904:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2894:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2926:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2998:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3006:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2994:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2994:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3013:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3021:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2935:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2935:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2926:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2727:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2735:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2743:5:9",
														"type": ""
													}
												],
												"src": "2676:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3168:878:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3214:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3216:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3216:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3216:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3189:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3198:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3181:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:32:9"
															},
															"nodeType": "YulIf",
															"src": "3178:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3307:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3322:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3336:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3326:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3351:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3397:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3408:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3393:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3393:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3417:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3361:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3361:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3351:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3445:292:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3460:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3484:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3495:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3474:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3474:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3464:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3546:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3548:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3548:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3548:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3518:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3526:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3515:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3512:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3643:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3699:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3710:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3695:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3695:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3719:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3653:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3653:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3643:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3747:292:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3762:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3786:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3797:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3782:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3782:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3776:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3776:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3766:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3848:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3850:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3850:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3850:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3820:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3828:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3817:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3817:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3814:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3945:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4001:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4012:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3997:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3997:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4021:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3955:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3955:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3945:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3122:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3133:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3145:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3153:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3161:6:9",
														"type": ""
													}
												],
												"src": "3037:1009:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4111:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4122:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4138:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4132:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4132:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4122:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4094:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4104:6:9",
														"type": ""
													}
												],
												"src": "4052:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4185:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4202:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4205:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4195:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4302:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4292:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4292:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4292:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4323:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4326:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "4157:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4394:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4404:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4418:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4424:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4414:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4414:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4435:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4465:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4471:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4439:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4512:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4526:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4540:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4548:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4536:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4536:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4526:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4492:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4485:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4485:26:9"
															},
															"nodeType": "YulIf",
															"src": "4482:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4615:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4629:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4579:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4602:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4610:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4599:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4599:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4576:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4576:38:9"
															},
															"nodeType": "YulIf",
															"src": "4573:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4378:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4387:6:9",
														"type": ""
													}
												],
												"src": "4343:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4723:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4733:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4741:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4733:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4761:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4764:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:14:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:14:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4777:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4795:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4798:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4785:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4785:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4777:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4710:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4718:4:9",
														"type": ""
													}
												],
												"src": "4669:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4860:49:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4870:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4888:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4895:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4884:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4884:14:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4900:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4880:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4880:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4870:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4843:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4853:6:9",
														"type": ""
													}
												],
												"src": "4816:93:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4968:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4978:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "5003:4:9"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5009:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4999:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4999:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4978:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4943:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4949:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4959:8:9",
														"type": ""
													}
												],
												"src": "4915:107:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5104:317:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5114:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "5135:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5147:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "5118:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5158:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5170:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "5162:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5276:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5307:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "5318:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5288:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5288:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "5276:8:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5336:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5349:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5360:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5356:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5356:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5345:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5336:5:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5375:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5388:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "5399:8:9"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5409:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5395:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5385:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5385:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5065:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "5072:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "5084:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5097:6:9",
														"type": ""
													}
												],
												"src": "5028:393:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5459:28:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5469:12:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5476:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5445:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5455:3:9",
														"type": ""
													}
												],
												"src": "5427:60:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5553:82:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5563:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5621:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5603:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5603:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5594:8:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5594:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5576:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5563:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5533:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5543:9:9",
														"type": ""
													}
												],
												"src": "5493:142:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5688:28:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5698:12:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5705:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5698:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5674:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5684:3:9",
														"type": ""
													}
												],
												"src": "5641:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5798:193:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5808:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5863:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5832:30:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5832:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5812:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5887:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5927:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5921:5:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5921:11:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5934:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5966:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5942:23:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5942:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5893:27:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5893:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5880:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:105:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5880:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5775:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5781:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5789:7:9",
														"type": ""
													}
												],
												"src": "5722:269:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6046:24:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6056:8:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6063:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6056:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6042:3:9",
														"type": ""
													}
												],
												"src": "5997:73:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6129:136:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6139:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6153:30:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6153:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "6143:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6238:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6244:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "6252:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6194:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6194:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6194:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6115:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6121:6:9",
														"type": ""
													}
												],
												"src": "6076:189:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6321:136:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6388:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6432:5:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6439:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6402:29:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6402:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6402:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "6341:5:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6348:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6338:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6338:14:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6353:26:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6355:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6368:5:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6375:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6364:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6364:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "6355:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6335:2:9",
																"statements": []
															},
															"src": "6331:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "6309:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6316:3:9",
														"type": ""
													}
												],
												"src": "6271:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6542:464:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6568:431:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6582:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6630:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6598:31:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6598:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6586:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6649:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6672:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6700:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6682:17:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6682:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6668:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6668:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6653:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6869:27:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6871:23:9",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6886:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6871:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6853:10:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6865:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6850:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6850:18:9"
																		},
																		"nodeType": "YulIf",
																		"src": "6847:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6938:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6955:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6983:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6965:17:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6965:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6951:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6951:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6909:28:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6909:80:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6909:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6559:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6564:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:11:9"
															},
															"nodeType": "YulIf",
															"src": "6553:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6518:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6525:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6530:10:9",
														"type": ""
													}
												],
												"src": "6463:543:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7075:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7085:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "7110:4:9"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7116:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7106:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7106:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7085:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "7050:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7056:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7066:8:9",
														"type": ""
													}
												],
												"src": "7012:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7186:118:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7196:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7245:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "7248:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "7241:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7241:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7260:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7256:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7256:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "7212:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7212:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "7208:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7208:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "7200:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7273:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7287:4:9"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "7293:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7283:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7283:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7273:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7163:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "7169:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7179:6:9",
														"type": ""
													}
												],
												"src": "7135:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7390:214:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7523:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7550:4:9"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7556:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7531:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7531:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7523:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7569:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7580:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7590:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7593:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7586:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7586:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7577:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7577:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7569:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7371:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7377:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7385:4:9",
														"type": ""
													}
												],
												"src": "7309:295:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7701:1303:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7712:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7759:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7726:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7726:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7716:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7848:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7850:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7850:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7850:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7820:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7828:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7817:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7817:30:9"
															},
															"nodeType": "YulIf",
															"src": "7814:56:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7880:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7926:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7920:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7920:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7894:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7894:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7884:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "8025:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "8031:6:9"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8039:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7979:45:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:67:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7979:67:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8056:18:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8073:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "8060:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8084:17:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8097:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "8084:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8148:611:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8162:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8181:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8193:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "8189:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8189:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "8177:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8177:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "8166:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8213:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8259:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "8227:31:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8227:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "8217:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8277:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8286:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "8281:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8345:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8370:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8388:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8393:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "8384:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8384:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "8378:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8378:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8363:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8363:42:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8363:42:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8422:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8436:6:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8444:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8432:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8432:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8422:6:9"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8463:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8480:9:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8491:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8476:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8476:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8463:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8311:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8314:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8308:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8308:14:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "8323:21:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8325:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "8334:1:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8337:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8330:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8330:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8325:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "8304:3:9",
																					"statements": []
																				},
																				"src": "8300:208:9"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8544:156:9",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8562:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8589:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8594:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8585:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8585:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8579:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8579:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8566:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8629:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8656:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8671:6:9"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8679:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8667:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8667:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8637:18:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8637:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8622:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8622:64:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8622:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8527:7:9"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8536:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8524:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8524:19:9"
																				},
																				"nodeType": "YulIf",
																				"src": "8521:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8720:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8734:6:9"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8742:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8730:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8730:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8746:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8726:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8726:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8713:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8713:36:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8713:36:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8141:618:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8146:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8776:222:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8790:14:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8803:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8794:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8827:67:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8845:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8864:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8869:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8860:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8860:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8854:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8854:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8845:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8820:6:9"
																				},
																				"nodeType": "YulIf",
																				"src": "8817:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8914:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8973:5:9"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8980:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8920:52:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8920:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8907:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8907:81:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8907:81:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8768:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8121:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8129:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8118:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8118:14:9"
															},
															"nodeType": "YulSwitch",
															"src": "8111:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7690:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7696:3:9",
														"type": ""
													}
												],
												"src": "7609:1395:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9055:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9065:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9076:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9065:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9037:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9047:7:9",
														"type": ""
													}
												],
												"src": "9010:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9158:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9175:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9198:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "9180:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9180:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9168:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9168:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9168:37:9"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9146:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9153:3:9",
														"type": ""
													}
												],
												"src": "9093:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9282:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9299:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9322:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9304:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9304:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9292:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9292:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9292:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9270:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9277:3:9",
														"type": ""
													}
												],
												"src": "9217:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9386:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9396:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9411:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9418:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9407:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9407:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9396:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9368:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9378:7:9",
														"type": ""
													}
												],
												"src": "9341:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9518:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9528:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9557:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9539:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9539:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9528:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9500:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9510:7:9",
														"type": ""
													}
												],
												"src": "9473:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9640:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9657:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9680:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9662:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9662:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9650:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9650:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9650:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9628:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9635:3:9",
														"type": ""
													}
												],
												"src": "9575:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9909:454:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9919:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9931:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9942:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9927:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9927:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9919:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10000:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10013:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10024:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10009:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10009:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9956:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9956:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9956:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10081:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10094:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10105:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10090:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10090:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10037:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10037:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10037:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10163:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10176:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10187:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10172:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10172:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10119:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10119:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10119:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10245:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10258:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10269:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10254:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10254:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10201:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10201:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10201:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10327:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10340:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10351:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10336:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10336:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10283:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10283:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10283:73:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9849:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9861:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9869:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9877:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9885:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9893:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9904:4:9",
														"type": ""
													}
												],
												"src": "9699:664:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10465:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10482:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10487:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10475:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10475:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10475:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10503:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10522:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10527:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10518:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10518:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10503:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10437:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10442:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10453:11:9",
														"type": ""
													}
												],
												"src": "10369:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10650:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10672:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10680:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10668:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10668:14:9"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10684:33:9",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10661:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10661:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10661:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10642:6:9",
														"type": ""
													}
												],
												"src": "10544:181:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10877:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10887:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10953:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10958:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10894:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10894:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10887:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11059:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																	"nodeType": "YulIdentifier",
																	"src": "10970:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10970:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10970:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11072:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11083:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11088:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11079:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11079:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11072:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10865:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10873:3:9",
														"type": ""
													}
												],
												"src": "10731:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11274:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11284:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11296:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11307:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11292:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11292:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11284:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11331:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11342:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11327:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11350:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11356:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11346:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11346:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11320:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11320:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11320:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11376:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11510:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11384:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11384:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11376:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11254:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11269:4:9",
														"type": ""
													}
												],
												"src": "11103:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11556:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11573:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11576:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11566:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11566:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11566:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11670:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11673:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11663:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11663:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11663:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11694:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11697:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11687:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11687:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11687:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11528:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11758:147:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11768:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11791:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11773:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11773:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11768:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11802:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11825:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11807:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11807:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11802:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11836:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11847:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11850:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11843:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11843:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11836:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11876:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11878:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11878:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11878:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11868:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11871:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11865:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11865:10:9"
															},
															"nodeType": "YulIf",
															"src": "11862:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11745:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11748:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11754:3:9",
														"type": ""
													}
												],
												"src": "11714:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12009:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12019:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12031:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12042:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12027:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12027:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12019:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12099:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12112:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12123:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12108:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12108:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12055:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12055:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12055:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11981:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11993:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12004:4:9",
														"type": ""
													}
												],
												"src": "11911:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12231:285:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12241:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12288:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12255:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12255:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12245:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12303:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12369:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12374:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12310:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12310:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12303:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12429:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12436:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12425:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12425:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12443:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12448:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12390:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12390:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12390:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12464:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12475:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12502:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12480:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12480:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12471:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12471:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12464:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12212:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12219:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12227:3:9",
														"type": ""
													}
												],
												"src": "12139:377:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12640:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12650:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12662:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12673:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12658:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12658:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12650:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12697:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12708:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12693:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12693:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12716:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12722:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12712:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12712:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12686:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12686:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12686:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12742:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12814:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12823:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12750:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12750:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12742:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12612:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12624:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12635:4:9",
														"type": ""
													}
												],
												"src": "12522:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12899:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12910:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12926:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12920:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12920:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12910:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12882:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12892:6:9",
														"type": ""
													}
												],
												"src": "12841:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13001:60:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13011:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "13019:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13011:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13032:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13044:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13049:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13040:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13040:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13032:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12988:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12996:4:9",
														"type": ""
													}
												],
												"src": "12945:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13122:99:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13133:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "13170:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "13164:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13164:10:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "13146:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13146:29:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13137:5:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13185:29:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13209:5:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "13185:11:9"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13102:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nodeType": "YulTypedName",
														"src": "13110:11:9",
														"type": ""
													}
												],
												"src": "13067:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13317:504:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13328:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "13374:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13342:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13342:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13332:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13389:21:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "13405:5:9"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nodeType": "YulTypedName",
																	"src": "13393:8:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13420:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "13466:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13432:33:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13432:40:9"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nodeType": "YulIdentifier",
																	"src": "13420:8:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13482:44:9",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nodeType": "YulIdentifier",
																		"src": "13517:8:9"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "13491:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13491:35:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13482:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13554:260:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13568:236:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "13598:5:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "13665:1:9",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "13672:2:9",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nodeType": "YulIdentifier",
																											"src": "13676:6:9"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "13668:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13668:15:9"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "13661:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13661:23:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13706:66:9",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nodeType": "YulIdentifier",
																						"src": "13621:18:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13621:169:9"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "13577:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13577:227:9"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13568:5:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13542:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13550:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13539:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13539:14:9"
															},
															"nodeType": "YulIf",
															"src": "13536:278:9"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "13301:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13311:5:9",
														"type": ""
													}
												],
												"src": "13227:594:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "61016060405234801562000011575f80fd5b5060405162002cfb38038062002cfb8339818101604052810190620000379190620005b3565b81806040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508484816003908162000082919062000878565b50806004908162000094919062000878565b505050620000ad6005836200016360201b90919060201c565b6101208181525050620000cb6006826200016360201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a081815250506200010a620001b860201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050506200015a33846200021460201b60201c565b50505062000c25565b5f602083511015620001885762000180836200037960201b60201c565b9050620001b2565b826200019a83620003e360201b60201c565b5f019081620001aa919062000878565b5060ff5f1b90505b92915050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e051610100514630604051602001620001f9959493929190620009ca565b60405160208183030381529060405280519060200120905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200027c9062000a83565b60405180910390fd5b620002985f8383620003ec60201b60201c565b8060025f828254620002ab919062000ad0565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200035a919062000b0a565b60405180910390a3620003755f8383620003f160201b60201c565b5050565b5f80829050601f81511115620003c857826040517f305a27a9000000000000000000000000000000000000000000000000000000008152600401620003bf919062000b65565b60405180910390fd5b805181620003d69062000bb6565b5f1c175f1b915050919050565b5f819050919050565b505050565b505050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b6200041b8162000407565b811462000426575f80fd5b50565b5f81519050620004398162000410565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200048f8262000447565b810181811067ffffffffffffffff82111715620004b157620004b062000457565b5b80604052505050565b5f620004c5620003f6565b9050620004d3828262000484565b919050565b5f67ffffffffffffffff821115620004f557620004f462000457565b5b620005008262000447565b9050602081019050919050565b5f5b838110156200052c5780820151818401526020810190506200050f565b5f8484015250505050565b5f6200054d6200054784620004d8565b620004ba565b9050828152602081018484840111156200056c576200056b62000443565b5b620005798482856200050d565b509392505050565b5f82601f8301126200059857620005976200043f565b5b8151620005aa84826020860162000537565b91505092915050565b5f805f60608486031215620005cd57620005cc620003ff565b5b5f620005dc8682870162000429565b935050602084015167ffffffffffffffff8111156200060057620005ff62000403565b5b6200060e8682870162000581565b925050604084015167ffffffffffffffff81111562000632576200063162000403565b5b620006408682870162000581565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200069957607f821691505b602082108103620006af57620006ae62000654565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620007137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620006d6565b6200071f8683620006d6565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620007606200075a620007548462000407565b62000737565b62000407565b9050919050565b5f819050919050565b6200077b8362000740565b620007936200078a8262000767565b848454620006e2565b825550505050565b5f90565b620007a96200079b565b620007b681848462000770565b505050565b5b81811015620007dd57620007d15f826200079f565b600181019050620007bc565b5050565b601f8211156200082c57620007f681620006b5565b6200080184620006c7565b8101602085101562000811578190505b620008296200082085620006c7565b830182620007bb565b50505b505050565b5f82821c905092915050565b5f6200084e5f198460080262000831565b1980831691505092915050565b5f6200086883836200083d565b9150826002028217905092915050565b62000883826200064a565b67ffffffffffffffff8111156200089f576200089e62000457565b5b620008ab825462000681565b620008b8828285620007e1565b5f60209050601f831160018114620008ee575f8415620008d9578287015190505b620008e585826200085b565b86555062000954565b601f198416620008fe86620006b5565b5f5b82811015620009275784890151825560018201915060208501945060208101905062000900565b8683101562000947578489015162000943601f8916826200083d565b8355505b6001600288020188555050505b505050505050565b5f819050919050565b62000970816200095c565b82525050565b620009818162000407565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620009b28262000987565b9050919050565b620009c481620009a6565b82525050565b5f60a082019050620009df5f83018862000965565b620009ee602083018762000965565b620009fd604083018662000965565b62000a0c606083018562000976565b62000a1b6080830184620009b9565b9695505050505050565b5f82825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f62000a6b601f8362000a25565b915062000a788262000a35565b602082019050919050565b5f6020820190508181035f83015262000a9c8162000a5d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000adc8262000407565b915062000ae98362000407565b925082820190508082111562000b045762000b0362000aa3565b5b92915050565b5f60208201905062000b1f5f83018462000976565b92915050565b5f62000b31826200064a565b62000b3d818562000a25565b935062000b4f8185602086016200050d565b62000b5a8162000447565b840191505092915050565b5f6020820190508181035f83015262000b7f818462000b25565b905092915050565b5f81519050919050565b5f819050602082019050919050565b5f62000bad82516200095c565b80915050919050565b5f62000bc28262000b87565b8262000bce8462000b91565b905062000bdb8162000ba0565b9250602082101562000c1e5762000c197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802620006d6565b831692505b5050919050565b60805160a05160c05160e05161010051610120516101405161208462000c775f395f61051c01525f6104e801525f61101101525f610ff001525f610d8701525f610ddd01525f610e0601526120845ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806370a0823111610095578063a457c2d711610064578063a457c2d7146102a1578063a9059cbb146102d1578063d505accf14610301578063dd62ed3e1461031d576100f3565b806370a08231146101ff5780637ecebe001461022f57806384b0196e1461025f57806395d89b4114610283576100f3565b806323b872dd116100d157806323b872dd14610163578063313ce567146101935780633644e515146101b157806339509351146101cf576100f3565b806306fdde03146100f7578063095ea7b31461011557806318160ddd14610145575b5f80fd5b6100ff61034d565b60405161010c9190611428565b60405180910390f35b61012f600480360381019061012a91906114d9565b6103dd565b60405161013c9190611531565b60405180910390f35b61014d6103ff565b60405161015a9190611559565b60405180910390f35b61017d60048036038101906101789190611572565b610408565b60405161018a9190611531565b60405180910390f35b61019b610436565b6040516101a891906115dd565b60405180910390f35b6101b961043e565b6040516101c6919061160e565b60405180910390f35b6101e960048036038101906101e491906114d9565b61044c565b6040516101f69190611531565b60405180910390f35b61021960048036038101906102149190611627565b610482565b6040516102269190611559565b60405180910390f35b61024960048036038101906102449190611627565b6104c7565b6040516102569190611559565b60405180910390f35b6102676104d8565b60405161027a9796959493929190611752565b60405180910390f35b61028b6105d5565b6040516102989190611428565b60405180910390f35b6102bb60048036038101906102b691906114d9565b610665565b6040516102c89190611531565b60405180910390f35b6102eb60048036038101906102e691906114d9565b6106da565b6040516102f89190611531565b60405180910390f35b61031b60048036038101906103169190611828565b6106fc565b005b610337600480360381019061033291906118c5565b610841565b6040516103449190611559565b60405180910390f35b60606003805461035c90611930565b80601f016020809104026020016040519081016040528092919081815260200182805461038890611930565b80156103d35780601f106103aa576101008083540402835291602001916103d3565b820191905f5260205f20905b8154815290600101906020018083116103b657829003601f168201915b5050505050905090565b5f806103e76108c3565b90506103f48185856108ca565b600191505092915050565b5f600254905090565b5f806104126108c3565b905061041f858285610a8d565b61042a858585610b18565b60019150509392505050565b5f6012905090565b5f610447610d84565b905090565b5f806104566108c3565b90506104778185856104688589610841565b610472919061198d565b6108ca565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6104d182610e3a565b9050919050565b5f6060805f805f606061051560057f0000000000000000000000000000000000000000000000000000000000000000610e8090919063ffffffff16565b61054960067f0000000000000000000000000000000000000000000000000000000000000000610e8090919063ffffffff16565b46305f801b5f67ffffffffffffffff811115610568576105676119c0565b5b6040519080825280602002602001820160405280156105965781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6060600480546105e490611930565b80601f016020809104026020016040519081016040528092919081815260200182805461061090611930565b801561065b5780601f106106325761010080835404028352916020019161065b565b820191905f5260205f20905b81548152906001019060200180831161063e57829003601f168201915b5050505050905090565b5f8061066f6108c3565b90505f61067c8286610841565b9050838110156106c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b890611a5d565b60405180910390fd5b6106ce82868684036108ca565b60019250505092915050565b5f806106e46108c3565b90506106f1818585610b18565b600191505092915050565b8342111561074157836040517f627913020000000000000000000000000000000000000000000000000000000081526004016107389190611559565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861076f8c610f2d565b8960405160200161078596959493929190611a7b565b6040516020818303038152906040528051906020012090505f6107a782610f80565b90505f6107b682878787610f99565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461082a57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610821929190611ada565b60405180910390fd5b6108358a8a8a6108ca565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092f90611b71565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099d90611bff565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a809190611559565b60405180910390a3505050565b5f610a988484610841565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b125781811015610b04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afb90611c67565b60405180910390fd5b610b1184848484036108ca565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7d90611cf5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610beb90611d83565b60405180910390fd5b610bff838383610fc2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610c82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7990611e11565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d6b9190611559565b60405180910390a3610d7e848484610fc7565b50505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610dff57507f000000000000000000000000000000000000000000000000000000000000000046145b15610e2c577f00000000000000000000000000000000000000000000000000000000000000009050610e37565b610e34610fcc565b90505b90565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060ff5f1b8314610e9c57610e9583611061565b9050610f27565b818054610ea890611930565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed490611930565b8015610f1f5780601f10610ef657610100808354040283529160200191610f1f565b820191905f5260205f20905b815481529060010190602001808311610f0257829003601f168201915b505050505090505b92915050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610f92610f8c610d84565b836110d3565b9050919050565b5f805f610fa887878787611113565b91509150610fb5816111eb565b8192505050949350505050565b505050565b505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611046959493929190611e2f565b60405160208183030381529060405280519060200120905090565b60605f61106d83611350565b90505f602067ffffffffffffffff81111561108b5761108a6119c0565b5b6040519080825280601f01601f1916602001820160405280156110bd5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0835f1c111561114b575f6003915091506111e2565b5f6001878787876040515f815260200160405260405161116e9493929190611e80565b6020604051602081039080840390855afa15801561118e573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111da575f600192509250506111e2565b805f92509250505b94509492505050565b5f60048111156111fe576111fd611ec3565b5b81600481111561121157611210611ec3565b5b031561134d576001600481111561122b5761122a611ec3565b5b81600481111561123e5761123d611ec3565b5b0361127e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127590611f3a565b60405180910390fd5b6002600481111561129257611291611ec3565b5b8160048111156112a5576112a4611ec3565b5b036112e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112dc90611fa2565b60405180910390fd5b600360048111156112f9576112f8611ec3565b5b81600481111561130c5761130b611ec3565b5b0361134c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134390612030565b60405180910390fd5b5b50565b5f8060ff835f1c169050601f811115611395576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156113d55780820151818401526020810190506113ba565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6113fa8261139e565b61140481856113a8565b93506114148185602086016113b8565b61141d816113e0565b840191505092915050565b5f6020820190508181035f83015261144081846113f0565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114758261144c565b9050919050565b6114858161146b565b811461148f575f80fd5b50565b5f813590506114a08161147c565b92915050565b5f819050919050565b6114b8816114a6565b81146114c2575f80fd5b50565b5f813590506114d3816114af565b92915050565b5f80604083850312156114ef576114ee611448565b5b5f6114fc85828601611492565b925050602061150d858286016114c5565b9150509250929050565b5f8115159050919050565b61152b81611517565b82525050565b5f6020820190506115445f830184611522565b92915050565b611553816114a6565b82525050565b5f60208201905061156c5f83018461154a565b92915050565b5f805f6060848603121561158957611588611448565b5b5f61159686828701611492565b93505060206115a786828701611492565b92505060406115b8868287016114c5565b9150509250925092565b5f60ff82169050919050565b6115d7816115c2565b82525050565b5f6020820190506115f05f8301846115ce565b92915050565b5f819050919050565b611608816115f6565b82525050565b5f6020820190506116215f8301846115ff565b92915050565b5f6020828403121561163c5761163b611448565b5b5f61164984828501611492565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61168681611652565b82525050565b6116958161146b565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6116cd816114a6565b82525050565b5f6116de83836116c4565b60208301905092915050565b5f602082019050919050565b5f6117008261169b565b61170a81856116a5565b9350611715836116b5565b805f5b8381101561174557815161172c88826116d3565b9750611737836116ea565b925050600181019050611718565b5085935050505092915050565b5f60e0820190506117655f83018a61167d565b818103602083015261177781896113f0565b9050818103604083015261178b81886113f0565b905061179a606083018761154a565b6117a7608083018661168c565b6117b460a08301856115ff565b81810360c08301526117c681846116f6565b905098975050505050505050565b6117dd816115c2565b81146117e7575f80fd5b50565b5f813590506117f8816117d4565b92915050565b611807816115f6565b8114611811575f80fd5b50565b5f81359050611822816117fe565b92915050565b5f805f805f805f60e0888a03121561184357611842611448565b5b5f6118508a828b01611492565b97505060206118618a828b01611492565b96505060406118728a828b016114c5565b95505060606118838a828b016114c5565b94505060806118948a828b016117ea565b93505060a06118a58a828b01611814565b92505060c06118b68a828b01611814565b91505092959891949750929550565b5f80604083850312156118db576118da611448565b5b5f6118e885828601611492565b92505060206118f985828601611492565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061194757607f821691505b60208210810361195a57611959611903565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611997826114a6565b91506119a2836114a6565b92508282019050808211156119ba576119b9611960565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f611a476025836113a8565b9150611a52826119ed565b604082019050919050565b5f6020820190508181035f830152611a7481611a3b565b9050919050565b5f60c082019050611a8e5f8301896115ff565b611a9b602083018861168c565b611aa8604083018761168c565b611ab5606083018661154a565b611ac2608083018561154a565b611acf60a083018461154a565b979650505050505050565b5f604082019050611aed5f83018561168c565b611afa602083018461168c565b9392505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611b5b6024836113a8565b9150611b6682611b01565b604082019050919050565b5f6020820190508181035f830152611b8881611b4f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f611be96022836113a8565b9150611bf482611b8f565b604082019050919050565b5f6020820190508181035f830152611c1681611bdd565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f611c51601d836113a8565b9150611c5c82611c1d565b602082019050919050565b5f6020820190508181035f830152611c7e81611c45565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f611cdf6025836113a8565b9150611cea82611c85565b604082019050919050565b5f6020820190508181035f830152611d0c81611cd3565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611d6d6023836113a8565b9150611d7882611d13565b604082019050919050565b5f6020820190508181035f830152611d9a81611d61565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f611dfb6026836113a8565b9150611e0682611da1565b604082019050919050565b5f6020820190508181035f830152611e2881611def565b9050919050565b5f60a082019050611e425f8301886115ff565b611e4f60208301876115ff565b611e5c60408301866115ff565b611e69606083018561154a565b611e76608083018461168c565b9695505050505050565b5f608082019050611e935f8301876115ff565b611ea060208301866115ce565b611ead60408301856115ff565b611eba60608301846115ff565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f45434453413a20696e76616c6964207369676e617475726500000000000000005f82015250565b5f611f246018836113a8565b9150611f2f82611ef0565b602082019050919050565b5f6020820190508181035f830152611f5181611f18565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e677468005f82015250565b5f611f8c601f836113a8565b9150611f9782611f58565b602082019050919050565b5f6020820190508181035f830152611fb981611f80565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c5f8201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b5f61201a6022836113a8565b915061202582611fc0565b604082019050919050565b5f6020820190508181035f8301526120478161200e565b905091905056fea2646970667358221220a04d872616b4a7d936a58cf02d69cb34601f86d8e97b1fb385a1e93e1402ac5a64736f6c63430008140033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2CFB CODESIZE SUB DUP1 PUSH3 0x2CFB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x5B3 JUMP JUMPDEST DUP2 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x82 SWAP2 SWAP1 PUSH3 0x878 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x94 SWAP2 SWAP1 PUSH3 0x878 JUMP JUMPDEST POP POP POP PUSH3 0xAD PUSH1 0x5 DUP4 PUSH3 0x163 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0xCB PUSH1 0x6 DUP3 PUSH3 0x163 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x10A PUSH3 0x1B8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x15A CALLER DUP5 PUSH3 0x214 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xC25 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x188 JUMPI PUSH3 0x180 DUP4 PUSH3 0x379 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x1B2 JUMP JUMPDEST DUP3 PUSH3 0x19A DUP4 PUSH3 0x3E3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH3 0x1AA SWAP2 SWAP1 PUSH3 0x878 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1F9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x27C SWAP1 PUSH3 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x298 PUSH0 DUP4 DUP4 PUSH3 0x3EC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x2AB SWAP2 SWAP1 PUSH3 0xAD0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x35A SWAP2 SWAP1 PUSH3 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x375 PUSH0 DUP4 DUP4 PUSH3 0x3F1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x3C8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3BF SWAP2 SWAP1 PUSH3 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x3D6 SWAP1 PUSH3 0xBB6 JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x41B DUP2 PUSH3 0x407 JUMP JUMPDEST DUP2 EQ PUSH3 0x426 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x439 DUP2 PUSH3 0x410 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x48F DUP3 PUSH3 0x447 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x4B1 JUMPI PUSH3 0x4B0 PUSH3 0x457 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4C5 PUSH3 0x3F6 JUMP JUMPDEST SWAP1 POP PUSH3 0x4D3 DUP3 DUP3 PUSH3 0x484 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x4F5 JUMPI PUSH3 0x4F4 PUSH3 0x457 JUMP JUMPDEST JUMPDEST PUSH3 0x500 DUP3 PUSH3 0x447 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x52C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x50F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x54D PUSH3 0x547 DUP5 PUSH3 0x4D8 JUMP JUMPDEST PUSH3 0x4BA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x56C JUMPI PUSH3 0x56B PUSH3 0x443 JUMP JUMPDEST JUMPDEST PUSH3 0x579 DUP5 DUP3 DUP6 PUSH3 0x50D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x598 JUMPI PUSH3 0x597 PUSH3 0x43F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x5AA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x537 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x5CD JUMPI PUSH3 0x5CC PUSH3 0x3FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x5DC DUP7 DUP3 DUP8 ADD PUSH3 0x429 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x600 JUMPI PUSH3 0x5FF PUSH3 0x403 JUMP JUMPDEST JUMPDEST PUSH3 0x60E DUP7 DUP3 DUP8 ADD PUSH3 0x581 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x632 JUMPI PUSH3 0x631 PUSH3 0x403 JUMP JUMPDEST JUMPDEST PUSH3 0x640 DUP7 DUP3 DUP8 ADD PUSH3 0x581 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x699 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x6AF JUMPI PUSH3 0x6AE PUSH3 0x654 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x713 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x6D6 JUMP JUMPDEST PUSH3 0x71F DUP7 DUP4 PUSH3 0x6D6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x760 PUSH3 0x75A PUSH3 0x754 DUP5 PUSH3 0x407 JUMP JUMPDEST PUSH3 0x737 JUMP JUMPDEST PUSH3 0x407 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x77B DUP4 PUSH3 0x740 JUMP JUMPDEST PUSH3 0x793 PUSH3 0x78A DUP3 PUSH3 0x767 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x6E2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x7A9 PUSH3 0x79B JUMP JUMPDEST PUSH3 0x7B6 DUP2 DUP5 DUP5 PUSH3 0x770 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x7DD JUMPI PUSH3 0x7D1 PUSH0 DUP3 PUSH3 0x79F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x7BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x82C JUMPI PUSH3 0x7F6 DUP2 PUSH3 0x6B5 JUMP JUMPDEST PUSH3 0x801 DUP5 PUSH3 0x6C7 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x811 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x829 PUSH3 0x820 DUP6 PUSH3 0x6C7 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x7BB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x84E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x831 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x868 DUP4 DUP4 PUSH3 0x83D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x883 DUP3 PUSH3 0x64A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x89F JUMPI PUSH3 0x89E PUSH3 0x457 JUMP JUMPDEST JUMPDEST PUSH3 0x8AB DUP3 SLOAD PUSH3 0x681 JUMP JUMPDEST PUSH3 0x8B8 DUP3 DUP3 DUP6 PUSH3 0x7E1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x8EE JUMPI PUSH0 DUP5 ISZERO PUSH3 0x8D9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x8E5 DUP6 DUP3 PUSH3 0x85B JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x954 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x8FE DUP7 PUSH3 0x6B5 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x927 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x900 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x947 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x943 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x83D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x970 DUP2 PUSH3 0x95C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x981 DUP2 PUSH3 0x407 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x9B2 DUP3 PUSH3 0x987 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9C4 DUP2 PUSH3 0x9A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x9DF PUSH0 DUP4 ADD DUP9 PUSH3 0x965 JUMP JUMPDEST PUSH3 0x9EE PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x965 JUMP JUMPDEST PUSH3 0x9FD PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x965 JUMP JUMPDEST PUSH3 0xA0C PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x976 JUMP JUMPDEST PUSH3 0xA1B PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x9B9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0xA6B PUSH1 0x1F DUP4 PUSH3 0xA25 JUMP JUMPDEST SWAP2 POP PUSH3 0xA78 DUP3 PUSH3 0xA35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xA9C DUP2 PUSH3 0xA5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xADC DUP3 PUSH3 0x407 JUMP JUMPDEST SWAP2 POP PUSH3 0xAE9 DUP4 PUSH3 0x407 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xB04 JUMPI PUSH3 0xB03 PUSH3 0xAA3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB1F PUSH0 DUP4 ADD DUP5 PUSH3 0x976 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB31 DUP3 PUSH3 0x64A JUMP JUMPDEST PUSH3 0xB3D DUP2 DUP6 PUSH3 0xA25 JUMP JUMPDEST SWAP4 POP PUSH3 0xB4F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x50D JUMP JUMPDEST PUSH3 0xB5A DUP2 PUSH3 0x447 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xB7F DUP2 DUP5 PUSH3 0xB25 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xBAD DUP3 MLOAD PUSH3 0x95C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xBC2 DUP3 PUSH3 0xB87 JUMP JUMPDEST DUP3 PUSH3 0xBCE DUP5 PUSH3 0xB91 JUMP JUMPDEST SWAP1 POP PUSH3 0xBDB DUP2 PUSH3 0xBA0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xC1E JUMPI PUSH3 0xC19 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x6D6 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2084 PUSH3 0xC77 PUSH0 CODECOPY PUSH0 PUSH2 0x51C ADD MSTORE PUSH0 PUSH2 0x4E8 ADD MSTORE PUSH0 PUSH2 0x1011 ADD MSTORE PUSH0 PUSH2 0xFF0 ADD MSTORE PUSH0 PUSH2 0xD87 ADD MSTORE PUSH0 PUSH2 0xDDD ADD MSTORE PUSH0 PUSH2 0xE06 ADD MSTORE PUSH2 0x2084 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31D JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x283 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1CF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x160E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1627 JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1627 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x35C SWAP1 PUSH2 0x1930 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x388 SWAP1 PUSH2 0x1930 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3E7 PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F4 DUP2 DUP6 DUP6 PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x412 PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x41F DUP6 DUP3 DUP6 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x42A DUP6 DUP6 DUP6 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x447 PUSH2 0xD84 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x456 PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x477 DUP2 DUP6 DUP6 PUSH2 0x468 DUP6 DUP10 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4D1 DUP3 PUSH2 0xE3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x515 PUSH1 0x5 PUSH32 0x0 PUSH2 0xE80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x549 PUSH1 0x6 PUSH32 0x0 PUSH2 0xE80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x568 JUMPI PUSH2 0x567 PUSH2 0x19C0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x596 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5E4 SWAP1 PUSH2 0x1930 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x610 SWAP1 PUSH2 0x1930 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x65B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x632 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x65B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x63E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x66F PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x67C DUP3 DUP7 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP1 PUSH2 0x1A5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CE DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6E4 PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6F1 DUP2 DUP6 DUP6 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x741 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x738 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x76F DUP13 PUSH2 0xF2D JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x785 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x7A7 DUP3 PUSH2 0xF80 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7B6 DUP3 DUP8 DUP8 DUP8 PUSH2 0xF99 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82A JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x835 DUP11 DUP11 DUP11 PUSH2 0x8CA JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA80 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA98 DUP5 DUP5 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB12 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFB SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB11 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x8CA JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7D SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x1D83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFF DUP4 DUP4 DUP4 PUSH2 0xFC2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC79 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD6B SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD7E DUP5 DUP5 DUP5 PUSH2 0xFC7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDFF JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xE2C JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xE37 JUMP JUMPDEST PUSH2 0xE34 PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0xE9C JUMPI PUSH2 0xE95 DUP4 PUSH2 0x1061 JUMP JUMPDEST SWAP1 POP PUSH2 0xF27 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xEA8 SWAP1 PUSH2 0x1930 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xED4 SWAP1 PUSH2 0x1930 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEF6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF92 PUSH2 0xF8C PUSH2 0xD84 JUMP JUMPDEST DUP4 PUSH2 0x10D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0xFA8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1113 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xFB5 DUP2 PUSH2 0x11EB JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1046 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x106D DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x108B JUMPI PUSH2 0x108A PUSH2 0x19C0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10BD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH0 SHR GT ISZERO PUSH2 0x114B JUMPI PUSH0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x11E2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x116E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x118E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11DA JUMPI PUSH0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x11E2 JUMP JUMPDEST DUP1 PUSH0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11FE JUMPI PUSH2 0x11FD PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1211 JUMPI PUSH2 0x1210 PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x134D JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x122B JUMPI PUSH2 0x122A PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x123E JUMPI PUSH2 0x123D PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x127E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1275 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1292 JUMPI PUSH2 0x1291 PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12A5 JUMPI PUSH2 0x12A4 PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12F9 JUMPI PUSH2 0x12F8 PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x130C JUMPI PUSH2 0x130B PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1343 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1395 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13BA JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13FA DUP3 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x1404 DUP2 DUP6 PUSH2 0x13A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1414 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x141D DUP2 PUSH2 0x13E0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1440 DUP2 DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1475 DUP3 PUSH2 0x144C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1485 DUP2 PUSH2 0x146B JUMP JUMPDEST DUP2 EQ PUSH2 0x148F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A0 DUP2 PUSH2 0x147C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B8 DUP2 PUSH2 0x14A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x14C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14D3 DUP2 PUSH2 0x14AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x1448 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14FC DUP6 DUP3 DUP7 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x150D DUP6 DUP3 DUP7 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x152B DUP2 PUSH2 0x1517 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1544 PUSH0 DUP4 ADD DUP5 PUSH2 0x1522 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1553 DUP2 PUSH2 0x14A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x156C PUSH0 DUP4 ADD DUP5 PUSH2 0x154A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1589 JUMPI PUSH2 0x1588 PUSH2 0x1448 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1596 DUP7 DUP3 DUP8 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15A7 DUP7 DUP3 DUP8 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15B8 DUP7 DUP3 DUP8 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D7 DUP2 PUSH2 0x15C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x15CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1608 DUP2 PUSH2 0x15F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1621 PUSH0 DUP4 ADD DUP5 PUSH2 0x15FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x163C JUMPI PUSH2 0x163B PUSH2 0x1448 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1649 DUP5 DUP3 DUP6 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1686 DUP2 PUSH2 0x1652 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1695 DUP2 PUSH2 0x146B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CD DUP2 PUSH2 0x14A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16DE DUP4 DUP4 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1700 DUP3 PUSH2 0x169B JUMP JUMPDEST PUSH2 0x170A DUP2 DUP6 PUSH2 0x16A5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1715 DUP4 PUSH2 0x16B5 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1745 JUMPI DUP2 MLOAD PUSH2 0x172C DUP9 DUP3 PUSH2 0x16D3 JUMP JUMPDEST SWAP8 POP PUSH2 0x1737 DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1718 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1765 PUSH0 DUP4 ADD DUP11 PUSH2 0x167D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1777 DUP2 DUP10 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x178B DUP2 DUP9 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x179A PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x17A7 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x17B4 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x15FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x17C6 DUP2 DUP5 PUSH2 0x16F6 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x17DD DUP2 PUSH2 0x15C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x17E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F8 DUP2 PUSH2 0x17D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1807 DUP2 PUSH2 0x15F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1811 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1822 DUP2 PUSH2 0x17FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1843 JUMPI PUSH2 0x1842 PUSH2 0x1448 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1850 DUP11 DUP3 DUP12 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1861 DUP11 DUP3 DUP12 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1872 DUP11 DUP3 DUP12 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1883 DUP11 DUP3 DUP12 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1894 DUP11 DUP3 DUP12 ADD PUSH2 0x17EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x18A5 DUP11 DUP3 DUP12 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x18B6 DUP11 DUP3 DUP12 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18DB JUMPI PUSH2 0x18DA PUSH2 0x1448 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18E8 DUP6 DUP3 DUP7 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18F9 DUP6 DUP3 DUP7 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1947 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x1903 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1997 DUP3 PUSH2 0x14A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A2 DUP4 PUSH2 0x14A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19BA JUMPI PUSH2 0x19B9 PUSH2 0x1960 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A47 PUSH1 0x25 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A52 DUP3 PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A74 DUP2 PUSH2 0x1A3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1A8E PUSH0 DUP4 ADD DUP10 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x1A9B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x1AA8 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x1AB5 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x1AC2 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x1ACF PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x154A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AED PUSH0 DUP4 ADD DUP6 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x1AFA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x168C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5B PUSH1 0x24 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B66 DUP3 PUSH2 0x1B01 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B88 DUP2 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BE9 PUSH1 0x22 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF4 DUP3 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x1BDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C51 PUSH1 0x1D DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5C DUP3 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C7E DUP2 PUSH2 0x1C45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CDF PUSH1 0x25 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEA DUP3 PUSH2 0x1C85 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D0C DUP2 PUSH2 0x1CD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6D PUSH1 0x23 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D78 DUP3 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D9A DUP2 PUSH2 0x1D61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DFB PUSH1 0x26 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E06 DUP3 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E28 DUP2 PUSH2 0x1DEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1E42 PUSH0 DUP4 ADD DUP9 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x1E4F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x1E5C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x1E69 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x1E76 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x168C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E93 PUSH0 DUP4 ADD DUP8 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x1EA0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15CE JUMP JUMPDEST PUSH2 0x1EAD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x1EBA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x15FF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F24 PUSH1 0x18 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2F DUP3 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F51 DUP2 PUSH2 0x1F18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F8C PUSH1 0x1F DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F97 DUP3 PUSH2 0x1F58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FB9 DUP2 PUSH2 0x1F80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x201A PUSH1 0x22 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2025 DUP3 PUSH2 0x1FC0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2047 DUP2 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0x4D DUP8 0x26 AND 0xB4 0xA7 0xD9 CALLDATASIZE 0xA5 DUP13 CREATE 0x2D PUSH10 0xCB34601F86D8E97B1FB3 DUP6 LOG1 0xE9 RETURNDATACOPY EQ MUL 0xAC GAS PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "23593:199:8:-:0;;;23627:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23712:4;22323;3178:431:5;;;;;;;;;;;;;;;;;23724:4:8;23729:6;6553:5;6545;:13;;;;;;:::i;:::-;;6579:7;6569;:17;;;;;;:::i;:::-;;6478:116;;3251:45:5;3282:13;3251:4;:30;;;;:45;;;;:::i;:::-;3243:53;;;;;;3317:51;3351:16;3317:7;:33;;;;:51;;;;:::i;:::-;3306:62;;;;;;3408:4;3392:22;;;;;;3378:36;;;;;;3457:7;3441:25;;;;;;3424:42;;;;;;3494:13;3477:30;;;;;;3542:23;:21;;;:23;;:::i;:::-;3517:48;;;;;;3597:4;3575:27;;;;;;;;;;3178:431;;22284:52:8;23747:32:::2;23753:10;23764:14;23747:5;;;:32;;:::i;:::-;23627:160:::0;;;23593:199;;2895:341:1;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;;;:20;;:::i;:::-;3058:27;;;;3014:216;3157:5;3116:32;3142:5;3116:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1371:66;3200:18;;3176:43;;2895:341;;;;;:::o;3963:180:5:-;4018:7;1929:95;4077:11;;4090:14;;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;13274:548:8:-;13377:1;13358:21;;:7;:21;;;13350:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;13428:49;13457:1;13461:7;13470:6;13428:20;;;:49;;:::i;:::-;13506:6;13490:12;;:22;;;;;;;:::i;:::-;;;;;;;;13683:6;13661:9;:18;13671:7;13661:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;13737:7;13716:37;;13733:1;13716:37;;;13746:6;13716:37;;;;;;:::i;:::-;;;;;;;;13766:48;13794:1;13798:7;13807:6;13766:19;;;:48;;:::i;:::-;13274:548;;:::o;1689:286:1:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;;;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:4;:11;1946:4;1938:13;;;:::i;:::-;1930:22;;:36;1922:45;;1898:70;;;1689:286;;;:::o;3310:202:2:-;3378:20;3486:10;3476:20;;3310:202;;;:::o;16992:125:8:-;;;;:::o;17721:124::-;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:117::-;803:1;800;793:12;817:117;926:1;923;916:12;940:102;981:6;1032:2;1028:7;1023:2;1016:5;1012:14;1008:28;998:38;;940:102;;;:::o;1048:180::-;1096:77;1093:1;1086:88;1193:4;1190:1;1183:15;1217:4;1214:1;1207:15;1234:281;1317:27;1339:4;1317:27;:::i;:::-;1309:6;1305:40;1447:6;1435:10;1432:22;1411:18;1399:10;1396:34;1393:62;1390:88;;;1458:18;;:::i;:::-;1390:88;1498:10;1494:2;1487:22;1277:238;1234:281;;:::o;1521:129::-;1555:6;1582:20;;:::i;:::-;1572:30;;1611:33;1639:4;1631:6;1611:33;:::i;:::-;1521:129;;;:::o;1656:308::-;1718:4;1808:18;1800:6;1797:30;1794:56;;;1830:18;;:::i;:::-;1794:56;1868:29;1890:6;1868:29;:::i;:::-;1860:37;;1952:4;1946;1942:15;1934:23;;1656:308;;;:::o;1970:246::-;2051:1;2061:113;2075:6;2072:1;2069:13;2061:113;;;2160:1;2155:3;2151:11;2145:18;2141:1;2136:3;2132:11;2125:39;2097:2;2094:1;2090:10;2085:15;;2061:113;;;2208:1;2199:6;2194:3;2190:16;2183:27;2032:184;1970:246;;;:::o;2222:434::-;2311:5;2336:66;2352:49;2394:6;2352:49;:::i;:::-;2336:66;:::i;:::-;2327:75;;2425:6;2418:5;2411:21;2463:4;2456:5;2452:16;2501:3;2492:6;2487:3;2483:16;2480:25;2477:112;;;2508:79;;:::i;:::-;2477:112;2598:52;2643:6;2638:3;2633;2598:52;:::i;:::-;2317:339;2222:434;;;;;:::o;2676:355::-;2743:5;2792:3;2785:4;2777:6;2773:17;2769:27;2759:122;;2800:79;;:::i;:::-;2759:122;2910:6;2904:13;2935:90;3021:3;3013:6;3006:4;2998:6;2994:17;2935:90;:::i;:::-;2926:99;;2749:282;2676:355;;;;:::o;3037:1009::-;3145:6;3153;3161;3210:2;3198:9;3189:7;3185:23;3181:32;3178:119;;;3216:79;;:::i;:::-;3178:119;3336:1;3361:64;3417:7;3408:6;3397:9;3393:22;3361:64;:::i;:::-;3351:74;;3307:128;3495:2;3484:9;3480:18;3474:25;3526:18;3518:6;3515:30;3512:117;;;3548:79;;:::i;:::-;3512:117;3653:74;3719:7;3710:6;3699:9;3695:22;3653:74;:::i;:::-;3643:84;;3445:292;3797:2;3786:9;3782:18;3776:25;3828:18;3820:6;3817:30;3814:117;;;3850:79;;:::i;:::-;3814:117;3955:74;4021:7;4012:6;4001:9;3997:22;3955:74;:::i;:::-;3945:84;;3747:292;3037:1009;;;;;:::o;4052:99::-;4104:6;4138:5;4132:12;4122:22;;4052:99;;;:::o;4157:180::-;4205:77;4202:1;4195:88;4302:4;4299:1;4292:15;4326:4;4323:1;4316:15;4343:320;4387:6;4424:1;4418:4;4414:12;4404:22;;4471:1;4465:4;4461:12;4492:18;4482:81;;4548:4;4540:6;4536:17;4526:27;;4482:81;4610:2;4602:6;4599:14;4579:18;4576:38;4573:84;;4629:18;;:::i;:::-;4573:84;4394:269;4343:320;;;:::o;4669:141::-;4718:4;4741:3;4733:11;;4764:3;4761:1;4754:14;4798:4;4795:1;4785:18;4777:26;;4669:141;;;:::o;4816:93::-;4853:6;4900:2;4895;4888:5;4884:14;4880:23;4870:33;;4816:93;;;:::o;4915:107::-;4959:8;5009:5;5003:4;4999:16;4978:37;;4915:107;;;;:::o;5028:393::-;5097:6;5147:1;5135:10;5131:18;5170:97;5200:66;5189:9;5170:97;:::i;:::-;5288:39;5318:8;5307:9;5288:39;:::i;:::-;5276:51;;5360:4;5356:9;5349:5;5345:21;5336:30;;5409:4;5399:8;5395:19;5388:5;5385:30;5375:40;;5104:317;;5028:393;;;;;:::o;5427:60::-;5455:3;5476:5;5469:12;;5427:60;;;:::o;5493:142::-;5543:9;5576:53;5594:34;5603:24;5621:5;5603:24;:::i;:::-;5594:34;:::i;:::-;5576:53;:::i;:::-;5563:66;;5493:142;;;:::o;5641:75::-;5684:3;5705:5;5698:12;;5641:75;;;:::o;5722:269::-;5832:39;5863:7;5832:39;:::i;:::-;5893:91;5942:41;5966:16;5942:41;:::i;:::-;5934:6;5927:4;5921:11;5893:91;:::i;:::-;5887:4;5880:105;5798:193;5722:269;;;:::o;5997:73::-;6042:3;5997:73;:::o;6076:189::-;6153:32;;:::i;:::-;6194:65;6252:6;6244;6238:4;6194:65;:::i;:::-;6129:136;6076:189;;:::o;6271:186::-;6331:120;6348:3;6341:5;6338:14;6331:120;;;6402:39;6439:1;6432:5;6402:39;:::i;:::-;6375:1;6368:5;6364:13;6355:22;;6331:120;;;6271:186;;:::o;6463:543::-;6564:2;6559:3;6556:11;6553:446;;;6598:38;6630:5;6598:38;:::i;:::-;6682:29;6700:10;6682:29;:::i;:::-;6672:8;6668:44;6865:2;6853:10;6850:18;6847:49;;;6886:8;6871:23;;6847:49;6909:80;6965:22;6983:3;6965:22;:::i;:::-;6955:8;6951:37;6938:11;6909:80;:::i;:::-;6568:431;;6553:446;6463:543;;;:::o;7012:117::-;7066:8;7116:5;7110:4;7106:16;7085:37;;7012:117;;;;:::o;7135:169::-;7179:6;7212:51;7260:1;7256:6;7248:5;7245:1;7241:13;7212:51;:::i;:::-;7208:56;7293:4;7287;7283:15;7273:25;;7186:118;7135:169;;;;:::o;7309:295::-;7385:4;7531:29;7556:3;7550:4;7531:29;:::i;:::-;7523:37;;7593:3;7590:1;7586:11;7580:4;7577:21;7569:29;;7309:295;;;;:::o;7609:1395::-;7726:37;7759:3;7726:37;:::i;:::-;7828:18;7820:6;7817:30;7814:56;;;7850:18;;:::i;:::-;7814:56;7894:38;7926:4;7920:11;7894:38;:::i;:::-;7979:67;8039:6;8031;8025:4;7979:67;:::i;:::-;8073:1;8097:4;8084:17;;8129:2;8121:6;8118:14;8146:1;8141:618;;;;8803:1;8820:6;8817:77;;;8869:9;8864:3;8860:19;8854:26;8845:35;;8817:77;8920:67;8980:6;8973:5;8920:67;:::i;:::-;8914:4;8907:81;8776:222;8111:887;;8141:618;8193:4;8189:9;8181:6;8177:22;8227:37;8259:4;8227:37;:::i;:::-;8286:1;8300:208;8314:7;8311:1;8308:14;8300:208;;;8393:9;8388:3;8384:19;8378:26;8370:6;8363:42;8444:1;8436:6;8432:14;8422:24;;8491:2;8480:9;8476:18;8463:31;;8337:4;8334:1;8330:12;8325:17;;8300:208;;;8536:6;8527:7;8524:19;8521:179;;;8594:9;8589:3;8585:19;8579:26;8637:48;8679:4;8671:6;8667:17;8656:9;8637:48;:::i;:::-;8629:6;8622:64;8544:156;8521:179;8746:1;8742;8734:6;8730:14;8726:22;8720:4;8713:36;8148:611;;;8111:887;;7701:1303;;;7609:1395;;:::o;9010:77::-;9047:7;9076:5;9065:16;;9010:77;;;:::o;9093:118::-;9180:24;9198:5;9180:24;:::i;:::-;9175:3;9168:37;9093:118;;:::o;9217:::-;9304:24;9322:5;9304:24;:::i;:::-;9299:3;9292:37;9217:118;;:::o;9341:126::-;9378:7;9418:42;9411:5;9407:54;9396:65;;9341:126;;;:::o;9473:96::-;9510:7;9539:24;9557:5;9539:24;:::i;:::-;9528:35;;9473:96;;;:::o;9575:118::-;9662:24;9680:5;9662:24;:::i;:::-;9657:3;9650:37;9575:118;;:::o;9699:664::-;9904:4;9942:3;9931:9;9927:19;9919:27;;9956:71;10024:1;10013:9;10009:17;10000:6;9956:71;:::i;:::-;10037:72;10105:2;10094:9;10090:18;10081:6;10037:72;:::i;:::-;10119;10187:2;10176:9;10172:18;10163:6;10119:72;:::i;:::-;10201;10269:2;10258:9;10254:18;10245:6;10201:72;:::i;:::-;10283:73;10351:3;10340:9;10336:19;10327:6;10283:73;:::i;:::-;9699:664;;;;;;;;:::o;10369:169::-;10453:11;10487:6;10482:3;10475:19;10527:4;10522:3;10518:14;10503:29;;10369:169;;;;:::o;10544:181::-;10684:33;10680:1;10672:6;10668:14;10661:57;10544:181;:::o;10731:366::-;10873:3;10894:67;10958:2;10953:3;10894:67;:::i;:::-;10887:74;;10970:93;11059:3;10970:93;:::i;:::-;11088:2;11083:3;11079:12;11072:19;;10731:366;;;:::o;11103:419::-;11269:4;11307:2;11296:9;11292:18;11284:26;;11356:9;11350:4;11346:20;11342:1;11331:9;11327:17;11320:47;11384:131;11510:4;11384:131;:::i;:::-;11376:139;;11103:419;;;:::o;11528:180::-;11576:77;11573:1;11566:88;11673:4;11670:1;11663:15;11697:4;11694:1;11687:15;11714:191;11754:3;11773:20;11791:1;11773:20;:::i;:::-;11768:25;;11807:20;11825:1;11807:20;:::i;:::-;11802:25;;11850:1;11847;11843:9;11836:16;;11871:3;11868:1;11865:10;11862:36;;;11878:18;;:::i;:::-;11862:36;11714:191;;;;:::o;11911:222::-;12004:4;12042:2;12031:9;12027:18;12019:26;;12055:71;12123:1;12112:9;12108:17;12099:6;12055:71;:::i;:::-;11911:222;;;;:::o;12139:377::-;12227:3;12255:39;12288:5;12255:39;:::i;:::-;12310:71;12374:6;12369:3;12310:71;:::i;:::-;12303:78;;12390:65;12448:6;12443:3;12436:4;12429:5;12425:16;12390:65;:::i;:::-;12480:29;12502:6;12480:29;:::i;:::-;12475:3;12471:39;12464:46;;12231:285;12139:377;;;;:::o;12522:313::-;12635:4;12673:2;12662:9;12658:18;12650:26;;12722:9;12716:4;12712:20;12708:1;12697:9;12693:17;12686:47;12750:78;12823:4;12814:6;12750:78;:::i;:::-;12742:86;;12522:313;;;;:::o;12841:98::-;12892:6;12926:5;12920:12;12910:22;;12841:98;;;:::o;12945:116::-;12996:4;13019:3;13011:11;;13049:4;13044:3;13040:14;13032:22;;12945:116;;;:::o;13067:154::-;13110:11;13146:29;13170:3;13164:10;13146:29;:::i;:::-;13209:5;13185:29;;13122:99;13067:154;;;:::o;13227:594::-;13311:5;13342:38;13374:5;13342:38;:::i;:::-;13405:5;13432:40;13466:5;13432:40;:::i;:::-;13420:52;;13491:35;13517:8;13491:35;:::i;:::-;13482:44;;13550:2;13542:6;13539:14;13536:278;;;13621:169;13706:66;13676:6;13672:2;13668:15;13665:1;13661:23;13621:169;:::i;:::-;13598:5;13577:227;13568:236;;13536:278;13317:504;;13227:594;;;:::o;23593:199:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_3070": {
									"entryPoint": 1086,
									"id": 3070,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_afterTokenTransfer_2824": {
									"entryPoint": 4039,
									"id": 2824,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_2759": {
									"entryPoint": 2250,
									"id": 2759,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2813": {
									"entryPoint": 4034,
									"id": 2813,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_1085": {
									"entryPoint": 4044,
									"id": 1085,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_domainSeparatorV4_1064": {
									"entryPoint": 3460,
									"id": 1064,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_1101": {
									"entryPoint": 3968,
									"id": 1101,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_2132": {
									"entryPoint": 2243,
									"id": 2132,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_2802": {
									"entryPoint": 2701,
									"id": 2802,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_633": {
									"entryPoint": 4587,
									"id": 633,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_2585": {
									"entryPoint": 2840,
									"id": 2585,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_2900": {
									"entryPoint": 3885,
									"id": 2900,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_2380": {
									"entryPoint": 2113,
									"id": 2380,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_2405": {
									"entryPoint": 989,
									"id": 2405,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_2337": {
									"entryPoint": 1154,
									"id": 2337,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@byteLength_141": {
									"entryPoint": 4944,
									"id": 141,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_2313": {
									"entryPoint": 1078,
									"id": 2313,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_2508": {
									"entryPoint": 1637,
									"id": 2508,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@eip712Domain_1148": {
									"entryPoint": 1240,
									"id": 1148,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@increaseAllowance_2467": {
									"entryPoint": 1100,
									"id": 2467,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_2293": {
									"entryPoint": 845,
									"id": 2293,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_2885": {
									"entryPoint": 3642,
									"id": 2885,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_3060": {
									"entryPoint": 1223,
									"id": 3060,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@permit_3043": {
									"entryPoint": 1788,
									"id": 3043,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_880": {
									"entryPoint": 3993,
									"id": 880,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@symbol_2303": {
									"entryPoint": 1493,
									"id": 2303,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_208": {
									"entryPoint": 3712,
									"id": 208,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_109": {
									"entryPoint": 4193,
									"id": 109,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_924": {
									"entryPoint": 4307,
									"id": 924,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_2323": {
									"entryPoint": 1023,
									"id": 2323,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2438": {
									"entryPoint": 1032,
									"id": 2438,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_2362": {
									"entryPoint": 1754,
									"id": 2362,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_847": {
									"entryPoint": 4371,
									"id": 847,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"abi_decode_t_address": {
									"entryPoint": 5266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 5757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6874,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6779,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7727,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 5714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6403,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6592,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be": {
									"entryPoint": 7920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 7443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77": {
									"entryPoint": 8024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 7055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 7585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd": {
									"entryPoint": 8128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 7301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 6913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 6637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:24829:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:9",
																"statements": []
															},
															"src": "378:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:246:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:9",
														"type": ""
													}
												],
												"src": "539:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:9",
														"type": ""
													}
												],
												"src": "647:377:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:9",
														"type": ""
													}
												],
												"src": "1030:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:9",
														"type": ""
													}
												],
												"src": "1349:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:9",
														"type": ""
													}
												],
												"src": "1676:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:9",
														"type": ""
													}
												],
												"src": "1808:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:9"
															},
															"nodeType": "YulIf",
															"src": "1963:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:9",
														"type": ""
													}
												],
												"src": "1910:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:9",
														"type": ""
													}
												],
												"src": "2038:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:9",
														"type": ""
													}
												],
												"src": "2183:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:9"
															},
															"nodeType": "YulIf",
															"src": "2319:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:9",
														"type": ""
													}
												],
												"src": "2266:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:9",
														"type": ""
													}
												],
												"src": "2394:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:9"
															},
															"nodeType": "YulIf",
															"src": "2632:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:9",
														"type": ""
													}
												],
												"src": "2539:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:9",
														"type": ""
													}
												],
												"src": "3019:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:9",
														"type": ""
													}
												],
												"src": "3115:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:9",
														"type": ""
													}
												],
												"src": "3230:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:9",
														"type": ""
													}
												],
												"src": "3446:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:9",
														"type": ""
													}
												],
												"src": "3570:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:9"
															},
															"nodeType": "YulIf",
															"src": "3908:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:9",
														"type": ""
													}
												],
												"src": "3798:619:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:9",
														"type": ""
													}
												],
												"src": "4423:86:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:9",
														"type": ""
													}
												],
												"src": "4515:112:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:9",
														"type": ""
													}
												],
												"src": "4633:214:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4898:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4908:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4919:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4908:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4880:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4890:7:9",
														"type": ""
													}
												],
												"src": "4853:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5001:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5018:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5041:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5023:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5023:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5011:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5011:37:9"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4989:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4996:3:9",
														"type": ""
													}
												],
												"src": "4936:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5158:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5168:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5180:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5176:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5176:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5168:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5248:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5272:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5257:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5204:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5204:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5130:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5142:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5153:4:9",
														"type": ""
													}
												],
												"src": "5060:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5354:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5400:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5402:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5402:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5375:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5371:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5396:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:32:9"
															},
															"nodeType": "YulIf",
															"src": "5364:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "5493:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5508:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5522:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5512:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5537:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5572:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5583:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5568:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5568:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5592:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5547:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5537:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5324:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5335:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5347:6:9",
														"type": ""
													}
												],
												"src": "5288:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5667:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5677:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5692:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5699:66:9",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5688:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5677:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5649:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5659:7:9",
														"type": ""
													}
												],
												"src": "5623:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5841:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5858:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5880:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nodeType": "YulIdentifier",
																			"src": "5863:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5863:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5851:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5851:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5829:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5836:3:9",
														"type": ""
													}
												],
												"src": "5778:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5964:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5981:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6004:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5986:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5986:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5974:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5974:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5974:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5952:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5959:3:9",
														"type": ""
													}
												],
												"src": "5899:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6097:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6108:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6124:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6118:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6108:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6080:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6090:6:9",
														"type": ""
													}
												],
												"src": "6023:114:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6254:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6271:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6276:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6264:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6264:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6292:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6292:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6226:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6231:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6242:11:9",
														"type": ""
													}
												],
												"src": "6143:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6405:60:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6415:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6423:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6415:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6436:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6448:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6453:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6444:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6444:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6436:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6392:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6400:4:9",
														"type": ""
													}
												],
												"src": "6333:132:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6526:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6543:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6566:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6548:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6548:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6536:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6536:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6536:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6514:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6521:3:9",
														"type": ""
													}
												],
												"src": "6471:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6665:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6709:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6717:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6675:33:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6675:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6675:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6730:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6748:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6753:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6744:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6744:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "6730:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6638:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6646:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "6654:10:9",
														"type": ""
													}
												],
												"src": "6585:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6845:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6855:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6867:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6872:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6863:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6863:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "6855:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6832:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "6840:4:9",
														"type": ""
													}
												],
												"src": "6770:113:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7043:608:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7053:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7115:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7067:47:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7067:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7057:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7130:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7211:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7216:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7137:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7137:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7130:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7232:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7297:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7247:49:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7247:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "7236:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7312:21:9",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "7326:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7316:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7402:224:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7416:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7443:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7437:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7437:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "7420:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7463:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "7514:13:9"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7529:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "7470:43:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7463:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7546:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7609:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "7556:52:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7556:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7546:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7364:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7361:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7361:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7375:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7377:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7386:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7389:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7382:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7382:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7377:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7346:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7348:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7357:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "7352:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7342:284:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7635:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7642:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7022:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7029:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7038:3:9",
														"type": ""
													}
												],
												"src": "6919:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8011:861:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8021:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8033:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8044:3:9",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8029:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8029:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8021:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8100:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8113:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8124:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8109:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8109:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8058:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8058:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8058:69:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8148:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8159:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8144:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8144:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8168:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8174:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8164:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8137:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8137:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8137:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8194:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8266:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8275:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8202:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8202:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8194:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8301:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8312:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8297:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8321:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8327:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8317:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8290:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8290:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8347:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8419:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8428:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8355:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8355:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8347:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8487:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8500:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8511:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8496:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8443:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8443:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8443:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8569:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8582:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8593:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8578:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8578:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8525:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8525:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8525:73:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "8652:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8665:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8676:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8661:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8661:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8608:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8608:73:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8702:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8713:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8698:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8723:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8729:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8719:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8719:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8691:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8691:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8749:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "8851:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8860:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8757:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8757:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8749:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7935:9:9",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "7947:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "7955:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7963:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7971:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7979:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7987:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7995:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8006:4:9",
														"type": ""
													}
												],
												"src": "7657:1215:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8919:77:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8974:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8983:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8986:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8976:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8976:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8976:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8942:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8965:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "8949:15:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8949:22:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8939:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8939:33:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:41:9"
															},
															"nodeType": "YulIf",
															"src": "8929:61:9"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8912:5:9",
														"type": ""
													}
												],
												"src": "8878:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9052:85:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9062:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9084:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9071:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9071:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9062:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9125:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "9100:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9100:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9100:31:9"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9030:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9038:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9046:5:9",
														"type": ""
													}
												],
												"src": "9002:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9186:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9243:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9252:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9255:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9245:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9245:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9245:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9209:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9234:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "9216:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9216:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9206:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9206:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9199:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9199:43:9"
															},
															"nodeType": "YulIf",
															"src": "9196:63:9"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9179:5:9",
														"type": ""
													}
												],
												"src": "9143:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9323:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9333:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9355:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9342:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9342:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9333:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9398:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "9371:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9371:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9371:33:9"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9301:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9309:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9317:5:9",
														"type": ""
													}
												],
												"src": "9271:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9582:1033:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9629:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9631:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9631:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9631:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9603:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9612:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9599:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9599:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9624:3:9",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9595:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9595:33:9"
															},
															"nodeType": "YulIf",
															"src": "9592:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9722:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9737:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9751:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9741:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9766:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9801:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9812:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9797:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9797:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9821:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9776:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9776:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9766:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9849:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9864:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9878:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9868:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9894:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9929:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9940:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9925:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9925:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9949:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9904:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9904:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9894:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9977:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9992:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10006:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9996:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10022:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10057:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10068:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10053:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10053:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10077:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10032:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10032:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10022:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10105:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10120:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10134:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10124:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10150:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10185:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10196:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10181:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10181:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10205:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10160:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10160:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "10150:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10233:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10248:17:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10262:3:9",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10252:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10279:61:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10312:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10323:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10308:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10308:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10332:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "10289:18:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10289:51:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "10279:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10360:119:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10375:17:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10389:3:9",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10379:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10406:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10441:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10452:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10437:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10437:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10461:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "10416:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10416:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "10406:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10489:119:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10504:17:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10518:3:9",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10508:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10535:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10570:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10581:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10566:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10566:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10590:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "10545:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10545:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "10535:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9504:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9515:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9527:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9535:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9543:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9551:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9559:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "9567:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "9575:6:9",
														"type": ""
													}
												],
												"src": "9416:1199:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10704:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10750:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10752:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10752:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10752:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10725:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10734:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10721:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10721:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10746:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10717:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10717:32:9"
															},
															"nodeType": "YulIf",
															"src": "10714:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "10843:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10858:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10872:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10862:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10887:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10922:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10933:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10918:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10918:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10942:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10897:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10897:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10887:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10970:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10985:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10999:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10989:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11015:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11050:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11061:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11046:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11046:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11070:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11025:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11025:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11015:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10666:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10677:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10689:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10697:6:9",
														"type": ""
													}
												],
												"src": "10621:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11129:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11146:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11149:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11139:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11139:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11139:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11243:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11246:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11236:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11236:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11236:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11267:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11270:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11260:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11260:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11260:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "11101:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11338:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11348:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11362:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11368:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11358:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11358:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11348:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11379:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11409:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11415:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11405:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11405:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11383:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11456:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11470:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11484:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11492:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11480:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11480:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11470:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11436:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11429:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11429:26:9"
															},
															"nodeType": "YulIf",
															"src": "11426:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11559:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11573:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11573:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11573:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11523:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11546:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11554:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11543:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11543:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11520:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11520:38:9"
															},
															"nodeType": "YulIf",
															"src": "11517:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11322:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11331:6:9",
														"type": ""
													}
												],
												"src": "11287:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11641:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11658:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11661:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11651:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11651:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11651:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11755:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11758:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11748:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11748:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11779:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11782:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11772:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11772:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11772:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11613:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11843:147:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11853:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11876:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11858:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11858:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11853:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11887:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11910:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11892:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11892:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11887:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11921:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11932:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11935:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11928:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11928:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11921:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11961:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11963:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11963:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11963:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11953:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11956:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11950:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11950:10:9"
															},
															"nodeType": "YulIf",
															"src": "11947:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11830:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11833:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11839:3:9",
														"type": ""
													}
												],
												"src": "11799:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12024:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12041:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12044:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12034:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12034:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12034:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12138:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12141:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12131:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12131:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12131:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12162:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12165:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12155:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12155:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12155:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "11996:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12288:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12310:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12318:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12306:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12306:14:9"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12322:34:9",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12299:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12299:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12299:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12378:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12386:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12374:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12374:15:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12391:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12367:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12367:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12367:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12280:6:9",
														"type": ""
													}
												],
												"src": "12182:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12558:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12568:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12634:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12639:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12575:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12575:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12568:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12740:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "12651:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12651:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12651:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12753:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12764:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12769:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12760:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12760:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12753:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12546:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12554:3:9",
														"type": ""
													}
												],
												"src": "12412:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12955:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12965:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12977:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12988:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12973:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12973:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12965:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13012:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13023:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13008:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13008:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13031:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13037:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13027:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13027:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13001:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13001:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13001:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13057:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13191:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13065:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13065:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13057:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12935:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12950:4:9",
														"type": ""
													}
												],
												"src": "12784:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13447:537:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13457:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13469:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13480:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13465:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13465:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13457:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13538:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13551:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13562:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13547:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13547:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13494:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13494:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13494:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13619:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13632:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13643:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13628:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13628:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13575:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13575:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13575:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13701:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13714:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13725:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13710:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13710:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13657:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13657:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13657:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13783:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13796:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13807:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13792:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13792:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13739:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13739:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13739:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13865:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13878:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13889:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13874:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13874:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13821:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13821:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13821:73:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "13948:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13961:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13972:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13957:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13957:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13904:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13904:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13904:73:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13379:9:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "13391:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13399:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13407:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13415:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13423:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13431:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13442:4:9",
														"type": ""
													}
												],
												"src": "13209:775:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14116:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14126:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14138:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14149:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14134:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14134:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14126:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14206:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14219:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14230:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14215:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14215:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14162:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14162:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14162:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14287:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14300:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14311:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14296:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14296:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14243:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14243:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14243:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14080:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14092:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14100:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14111:4:9",
														"type": ""
													}
												],
												"src": "13990:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14434:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14456:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14464:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14452:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14452:14:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14468:34:9",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14445:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14445:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14445:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14524:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14532:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14520:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14520:15:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14537:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14513:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14513:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14513:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14426:6:9",
														"type": ""
													}
												],
												"src": "14328:223:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14703:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14713:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14779:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14784:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14720:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14720:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14713:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14885:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "14796:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14796:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14796:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14898:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14909:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14914:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14905:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14905:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14898:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14691:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14699:3:9",
														"type": ""
													}
												],
												"src": "14557:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15100:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15110:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15122:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15133:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15118:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15118:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15110:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15157:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15168:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15153:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15153:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15176:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15182:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15172:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15172:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15146:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15146:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15146:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15202:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15336:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15210:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15210:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15202:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15080:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15095:4:9",
														"type": ""
													}
												],
												"src": "14929:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15460:115:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15482:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15490:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15478:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15478:14:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15494:34:9",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15471:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15471:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15471:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15550:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15558:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15546:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15546:15:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15563:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15539:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15539:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15539:29:9"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15452:6:9",
														"type": ""
													}
												],
												"src": "15354:221:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15727:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15737:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15803:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15808:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15744:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15744:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15737:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15909:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "15820:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15820:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15820:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15922:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15933:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15938:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15929:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15929:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15922:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15715:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15723:3:9",
														"type": ""
													}
												],
												"src": "15581:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16124:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16134:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16146:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16157:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16142:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16142:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16134:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16181:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16192:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16177:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16177:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16200:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16206:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16196:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16196:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16170:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16170:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16170:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16226:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16360:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16234:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16234:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16226:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16104:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16119:4:9",
														"type": ""
													}
												],
												"src": "15953:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16484:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16506:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16514:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16502:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16502:14:9"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16518:31:9",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16495:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16495:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16495:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16476:6:9",
														"type": ""
													}
												],
												"src": "16378:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16709:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16719:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16785:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16790:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16726:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16726:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16719:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16891:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "16802:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16802:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16802:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16904:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16915:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16920:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16911:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16911:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16904:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16697:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16705:3:9",
														"type": ""
													}
												],
												"src": "16563:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17106:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17116:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17128:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17139:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17124:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17124:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17116:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17163:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17174:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17159:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17159:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17182:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17188:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17178:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17178:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17152:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17152:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17152:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17208:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17342:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17216:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17216:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17208:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17086:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17101:4:9",
														"type": ""
													}
												],
												"src": "16935:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17466:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17488:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17496:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17484:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17484:14:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17500:34:9",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17477:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17477:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17477:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17556:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17564:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17552:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17552:15:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17569:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17545:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17545:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17545:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17458:6:9",
														"type": ""
													}
												],
												"src": "17360:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17736:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17746:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17812:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17817:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17753:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17753:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17746:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17918:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "17829:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17829:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17829:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17931:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17942:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17947:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17938:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17938:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17931:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17724:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17732:3:9",
														"type": ""
													}
												],
												"src": "17590:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18133:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18143:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18155:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18166:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18151:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18151:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18143:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18190:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18201:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18186:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18186:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18209:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18215:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18205:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18205:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18179:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18179:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18179:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18235:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18369:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18243:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18243:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18235:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18113:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18128:4:9",
														"type": ""
													}
												],
												"src": "17962:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18493:116:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18515:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18523:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18511:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18511:14:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18527:34:9",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18504:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18504:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18504:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18583:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18591:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18579:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18579:15:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18596:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18572:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18572:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18572:30:9"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18485:6:9",
														"type": ""
													}
												],
												"src": "18387:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18761:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18771:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18837:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18842:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18778:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18778:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18771:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18943:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "18854:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18854:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18854:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18956:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18967:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18972:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18963:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18963:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18956:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18749:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18757:3:9",
														"type": ""
													}
												],
												"src": "18615:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19158:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19168:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19180:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19191:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19176:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19176:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19168:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19215:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19226:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19211:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19211:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19234:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19240:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19230:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19230:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19204:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19204:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19204:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19260:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19394:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19268:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19268:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19260:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19138:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19153:4:9",
														"type": ""
													}
												],
												"src": "18987:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19518:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19540:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19548:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19536:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19536:14:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19552:34:9",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19529:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19529:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19529:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19608:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19616:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19604:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19604:15:9"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19621:8:9",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19597:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19597:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19597:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19510:6:9",
														"type": ""
													}
												],
												"src": "19412:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19789:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19799:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19865:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19870:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19806:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19806:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19799:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19971:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "19882:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19882:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19882:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19984:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19995:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20000:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19991:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19991:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19984:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19777:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19785:3:9",
														"type": ""
													}
												],
												"src": "19643:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20186:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20196:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20208:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20219:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20204:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20204:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20196:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20243:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20254:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20239:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20262:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20268:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20258:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20258:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20232:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20232:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20232:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20288:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20422:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20296:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20296:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20288:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20166:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20181:4:9",
														"type": ""
													}
												],
												"src": "20015:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20650:454:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20660:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20672:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20683:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20668:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20668:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20660:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20741:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20754:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20765:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20750:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20750:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20697:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20697:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20697:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20822:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20835:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20846:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20831:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20831:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20778:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20778:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20778:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20904:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20917:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20928:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20913:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20913:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20860:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20860:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20860:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "20986:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20999:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21010:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20995:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20995:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20942:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20942:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20942:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "21068:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21081:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21092:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21077:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21077:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21024:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21024:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21024:73:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20590:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "20602:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20610:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20618:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20626:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20634:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20645:4:9",
														"type": ""
													}
												],
												"src": "20440:664:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21288:367:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21298:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21310:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21321:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21306:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21306:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21298:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21379:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21392:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21403:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21388:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21388:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21335:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21335:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21335:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21456:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21469:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21480:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21465:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21465:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21416:39:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21416:68:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21416:68:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21538:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21551:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21562:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21547:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21547:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21494:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21494:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21494:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "21620:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21633:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21644:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21629:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21629:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21576:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21576:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21576:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21236:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "21248:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21256:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21264:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21272:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21283:4:9",
														"type": ""
													}
												],
												"src": "21110:545:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21689:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21706:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21709:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21699:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21699:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21699:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21803:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21806:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21796:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21796:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21796:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21827:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21830:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21820:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21820:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21820:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "21661:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21953:68:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21975:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21983:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21971:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21971:14:9"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21987:26:9",
																		"type": "",
																		"value": "ECDSA: invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21964:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21964:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21964:50:9"
														}
													]
												},
												"name": "store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21945:6:9",
														"type": ""
													}
												],
												"src": "21847:174:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22173:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22183:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22249:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22254:2:9",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22190:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22190:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22183:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22355:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																	"nodeType": "YulIdentifier",
																	"src": "22266:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22266:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22266:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22368:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22379:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22384:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22375:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22375:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22368:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22161:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22169:3:9",
														"type": ""
													}
												],
												"src": "22027:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22570:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22580:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22592:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22603:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22588:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22588:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22580:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22627:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22638:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22623:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22623:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22646:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22652:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22642:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22642:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22616:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22616:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22616:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22672:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22806:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22680:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22680:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22672:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22550:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22565:4:9",
														"type": ""
													}
												],
												"src": "22399:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22930:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22952:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22960:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22948:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22948:14:9"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22964:33:9",
																		"type": "",
																		"value": "ECDSA: invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22941:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22941:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22941:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22922:6:9",
														"type": ""
													}
												],
												"src": "22824:181:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23157:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23167:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23233:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23238:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23174:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23174:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23167:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23339:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																	"nodeType": "YulIdentifier",
																	"src": "23250:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23250:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23250:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23352:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23363:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23368:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23359:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23359:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23352:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23145:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23153:3:9",
														"type": ""
													}
												],
												"src": "23011:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23554:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23564:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23576:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23587:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23572:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23572:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23564:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23611:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23622:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23607:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23607:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23630:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23636:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23626:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23626:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23600:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23600:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23600:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23656:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23790:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23664:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23664:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23656:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23534:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23549:4:9",
														"type": ""
													}
												],
												"src": "23383:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23914:115:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23936:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23944:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23932:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23932:14:9"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23948:34:9",
																		"type": "",
																		"value": "ECDSA: invalid signature 's' val"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23925:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23925:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23925:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24004:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24012:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24000:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24000:15:9"
																	},
																	{
																		"hexValue": "7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24017:4:9",
																		"type": "",
																		"value": "ue"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23993:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23993:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23993:29:9"
														}
													]
												},
												"name": "store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23906:6:9",
														"type": ""
													}
												],
												"src": "23808:221:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24181:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24191:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24257:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24262:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24198:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24198:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24191:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24363:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																	"nodeType": "YulIdentifier",
																	"src": "24274:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24274:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24274:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24376:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24387:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24392:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24383:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24383:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24376:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24169:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24177:3:9",
														"type": ""
													}
												],
												"src": "24035:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24578:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24588:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24600:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24611:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24596:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24596:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24588:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24635:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24646:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24631:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24631:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24654:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24660:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24650:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24650:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24624:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24624:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24680:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24814:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24688:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24688:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24680:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24558:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24573:4:9",
														"type": ""
													}
												],
												"src": "24407:419:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"962": [
									{
										"length": 32,
										"start": 3590
									}
								],
								"964": [
									{
										"length": 32,
										"start": 3549
									}
								],
								"966": [
									{
										"length": 32,
										"start": 3463
									}
								],
								"968": [
									{
										"length": 32,
										"start": 4080
									}
								],
								"970": [
									{
										"length": 32,
										"start": 4113
									}
								],
								"973": [
									{
										"length": 32,
										"start": 1256
									}
								],
								"976": [
									{
										"length": 32,
										"start": 1308
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31D JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x283 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1CF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x160E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1627 JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1627 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x35C SWAP1 PUSH2 0x1930 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x388 SWAP1 PUSH2 0x1930 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3E7 PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F4 DUP2 DUP6 DUP6 PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x412 PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x41F DUP6 DUP3 DUP6 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x42A DUP6 DUP6 DUP6 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x447 PUSH2 0xD84 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x456 PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x477 DUP2 DUP6 DUP6 PUSH2 0x468 DUP6 DUP10 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4D1 DUP3 PUSH2 0xE3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x515 PUSH1 0x5 PUSH32 0x0 PUSH2 0xE80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x549 PUSH1 0x6 PUSH32 0x0 PUSH2 0xE80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x568 JUMPI PUSH2 0x567 PUSH2 0x19C0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x596 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5E4 SWAP1 PUSH2 0x1930 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x610 SWAP1 PUSH2 0x1930 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x65B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x632 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x65B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x63E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x66F PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x67C DUP3 DUP7 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP1 PUSH2 0x1A5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CE DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6E4 PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6F1 DUP2 DUP6 DUP6 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x741 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x738 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x76F DUP13 PUSH2 0xF2D JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x785 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x7A7 DUP3 PUSH2 0xF80 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7B6 DUP3 DUP8 DUP8 DUP8 PUSH2 0xF99 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82A JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x835 DUP11 DUP11 DUP11 PUSH2 0x8CA JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA80 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA98 DUP5 DUP5 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB12 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFB SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB11 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x8CA JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7D SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x1D83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFF DUP4 DUP4 DUP4 PUSH2 0xFC2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC79 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD6B SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD7E DUP5 DUP5 DUP5 PUSH2 0xFC7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDFF JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xE2C JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xE37 JUMP JUMPDEST PUSH2 0xE34 PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0xE9C JUMPI PUSH2 0xE95 DUP4 PUSH2 0x1061 JUMP JUMPDEST SWAP1 POP PUSH2 0xF27 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xEA8 SWAP1 PUSH2 0x1930 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xED4 SWAP1 PUSH2 0x1930 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEF6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF92 PUSH2 0xF8C PUSH2 0xD84 JUMP JUMPDEST DUP4 PUSH2 0x10D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0xFA8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1113 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xFB5 DUP2 PUSH2 0x11EB JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1046 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x106D DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x108B JUMPI PUSH2 0x108A PUSH2 0x19C0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10BD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH0 SHR GT ISZERO PUSH2 0x114B JUMPI PUSH0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x11E2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x116E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x118E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11DA JUMPI PUSH0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x11E2 JUMP JUMPDEST DUP1 PUSH0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11FE JUMPI PUSH2 0x11FD PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1211 JUMPI PUSH2 0x1210 PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x134D JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x122B JUMPI PUSH2 0x122A PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x123E JUMPI PUSH2 0x123D PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x127E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1275 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1292 JUMPI PUSH2 0x1291 PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12A5 JUMPI PUSH2 0x12A4 PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12F9 JUMPI PUSH2 0x12F8 PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x130C JUMPI PUSH2 0x130B PUSH2 0x1EC3 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1343 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1395 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13BA JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13FA DUP3 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x1404 DUP2 DUP6 PUSH2 0x13A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1414 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x141D DUP2 PUSH2 0x13E0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1440 DUP2 DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1475 DUP3 PUSH2 0x144C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1485 DUP2 PUSH2 0x146B JUMP JUMPDEST DUP2 EQ PUSH2 0x148F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A0 DUP2 PUSH2 0x147C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B8 DUP2 PUSH2 0x14A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x14C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14D3 DUP2 PUSH2 0x14AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x1448 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14FC DUP6 DUP3 DUP7 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x150D DUP6 DUP3 DUP7 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x152B DUP2 PUSH2 0x1517 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1544 PUSH0 DUP4 ADD DUP5 PUSH2 0x1522 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1553 DUP2 PUSH2 0x14A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x156C PUSH0 DUP4 ADD DUP5 PUSH2 0x154A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1589 JUMPI PUSH2 0x1588 PUSH2 0x1448 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1596 DUP7 DUP3 DUP8 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15A7 DUP7 DUP3 DUP8 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15B8 DUP7 DUP3 DUP8 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D7 DUP2 PUSH2 0x15C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x15CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1608 DUP2 PUSH2 0x15F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1621 PUSH0 DUP4 ADD DUP5 PUSH2 0x15FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x163C JUMPI PUSH2 0x163B PUSH2 0x1448 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1649 DUP5 DUP3 DUP6 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1686 DUP2 PUSH2 0x1652 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1695 DUP2 PUSH2 0x146B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CD DUP2 PUSH2 0x14A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16DE DUP4 DUP4 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1700 DUP3 PUSH2 0x169B JUMP JUMPDEST PUSH2 0x170A DUP2 DUP6 PUSH2 0x16A5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1715 DUP4 PUSH2 0x16B5 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1745 JUMPI DUP2 MLOAD PUSH2 0x172C DUP9 DUP3 PUSH2 0x16D3 JUMP JUMPDEST SWAP8 POP PUSH2 0x1737 DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1718 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1765 PUSH0 DUP4 ADD DUP11 PUSH2 0x167D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1777 DUP2 DUP10 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x178B DUP2 DUP9 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x179A PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x17A7 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x17B4 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x15FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x17C6 DUP2 DUP5 PUSH2 0x16F6 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x17DD DUP2 PUSH2 0x15C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x17E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F8 DUP2 PUSH2 0x17D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1807 DUP2 PUSH2 0x15F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1811 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1822 DUP2 PUSH2 0x17FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1843 JUMPI PUSH2 0x1842 PUSH2 0x1448 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1850 DUP11 DUP3 DUP12 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1861 DUP11 DUP3 DUP12 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1872 DUP11 DUP3 DUP12 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1883 DUP11 DUP3 DUP12 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1894 DUP11 DUP3 DUP12 ADD PUSH2 0x17EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x18A5 DUP11 DUP3 DUP12 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x18B6 DUP11 DUP3 DUP12 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18DB JUMPI PUSH2 0x18DA PUSH2 0x1448 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18E8 DUP6 DUP3 DUP7 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18F9 DUP6 DUP3 DUP7 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1947 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x1903 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1997 DUP3 PUSH2 0x14A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A2 DUP4 PUSH2 0x14A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19BA JUMPI PUSH2 0x19B9 PUSH2 0x1960 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A47 PUSH1 0x25 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A52 DUP3 PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A74 DUP2 PUSH2 0x1A3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1A8E PUSH0 DUP4 ADD DUP10 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x1A9B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x1AA8 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x1AB5 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x1AC2 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x1ACF PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x154A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AED PUSH0 DUP4 ADD DUP6 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x1AFA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x168C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5B PUSH1 0x24 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B66 DUP3 PUSH2 0x1B01 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B88 DUP2 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BE9 PUSH1 0x22 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF4 DUP3 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x1BDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C51 PUSH1 0x1D DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5C DUP3 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C7E DUP2 PUSH2 0x1C45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CDF PUSH1 0x25 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEA DUP3 PUSH2 0x1C85 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D0C DUP2 PUSH2 0x1CD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6D PUSH1 0x23 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D78 DUP3 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D9A DUP2 PUSH2 0x1D61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DFB PUSH1 0x26 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E06 DUP3 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E28 DUP2 PUSH2 0x1DEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1E42 PUSH0 DUP4 ADD DUP9 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x1E4F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x1E5C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x1E69 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x1E76 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x168C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E93 PUSH0 DUP4 ADD DUP8 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x1EA0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15CE JUMP JUMPDEST PUSH2 0x1EAD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x1EBA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x15FF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F24 PUSH1 0x18 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2F DUP3 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F51 DUP2 PUSH2 0x1F18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F8C PUSH1 0x1F DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F97 DUP3 PUSH2 0x1F58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FB9 DUP2 PUSH2 0x1F80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x201A PUSH1 0x22 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2025 DUP3 PUSH2 0x1FC0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2047 DUP2 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0x4D DUP8 0x26 AND 0xB4 0xA7 0xD9 CALLDATASIZE 0xA5 DUP13 CREATE 0x2D PUSH10 0xCB34601F86D8E97B1FB3 DUP6 LOG1 0xE9 RETURNDATACOPY EQ MUL 0xAC GAS PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "23593:199:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6664:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9015:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7784:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9796:295;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7626:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23439:114;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10500:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7955:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23164:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5021:633:5;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;6883:104:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11241:436;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8288:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22402:696;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8544:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6664:100;6718:13;6751:5;6744:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6664:100;:::o;9015:201::-;9098:4;9115:13;9131:12;:10;:12::i;:::-;9115:28;;9154:32;9163:5;9170:7;9179:6;9154:8;:32::i;:::-;9204:4;9197:11;;;9015:201;;;;:::o;7784:108::-;7845:7;7872:12;;7865:19;;7784:108;:::o;9796:295::-;9927:4;9944:15;9962:12;:10;:12::i;:::-;9944:30;;9985:38;10001:4;10007:7;10016:6;9985:15;:38::i;:::-;10034:27;10044:4;10050:2;10054:6;10034:9;:27::i;:::-;10079:4;10072:11;;;9796:295;;;;;:::o;7626:93::-;7684:5;7709:2;7702:9;;7626:93;:::o;23439:114::-;23498:7;23525:20;:18;:20::i;:::-;23518:27;;23439:114;:::o;10500:238::-;10588:4;10605:13;10621:12;:10;:12::i;:::-;10605:28;;10644:64;10653:5;10660:7;10697:10;10669:25;10679:5;10686:7;10669:9;:25::i;:::-;:38;;;;:::i;:::-;10644:8;:64::i;:::-;10726:4;10719:11;;;10500:238;;;;:::o;7955:127::-;8029:7;8056:9;:18;8066:7;8056:18;;;;;;;;;;;;;;;;8049:25;;7955:127;;;:::o;23164:145::-;23255:7;23282:19;23295:5;23282:12;:19::i;:::-;23275:26;;23164:145;;;:::o;5021:633:5:-;5136:13;5163:18;5195:21;5230:15;5259:25;5298:12;5324:27;5427:41;5454:13;5427:5;:26;;:41;;;;:::i;:::-;5482:47;5512:16;5482:8;:29;;:47;;;;:::i;:::-;5543:13;5578:4;5605:1;5597:10;;5635:1;5621:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5376:271;;;;;;;;;;;;;;;;;;;;;5021:633;;;;;;;:::o;6883:104:8:-;6939:13;6972:7;6965:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6883:104;:::o;11241:436::-;11334:4;11351:13;11367:12;:10;:12::i;:::-;11351:28;;11390:24;11417:25;11427:5;11434:7;11417:9;:25::i;:::-;11390:52;;11481:15;11461:16;:35;;11453:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;11574:60;11583:5;11590:7;11618:15;11599:16;:34;11574:8;:60::i;:::-;11665:4;11658:11;;;;11241:436;;;;:::o;8288:193::-;8367:4;8384:13;8400:12;:10;:12::i;:::-;8384:28;;8423;8433:5;8440:2;8444:6;8423:9;:28::i;:::-;8469:4;8462:11;;;8288:193;;;;:::o;22402:696::-;22632:8;22614:15;:26;22610:99;;;22688:8;22664:33;;;;;;;;;;;:::i;:::-;;;;;;;;22610:99;22721:18;21715:95;22781:5;22788:7;22797:5;22804:16;22814:5;22804:9;:16::i;:::-;22822:8;22752:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;22742:90;;;;;;22721:111;;22845:12;22860:28;22877:10;22860:16;:28::i;:::-;22845:43;;22901:14;22918:28;22932:4;22938:1;22941;22944;22918:13;:28::i;:::-;22901:45;;22971:5;22961:15;;:6;:15;;;22957:90;;23021:6;23029:5;23000:35;;;;;;;;;;;;:::i;:::-;;;;;;;;22957:90;23059:31;23068:5;23075:7;23084:5;23059:8;:31::i;:::-;22599:499;;;22402:696;;;;;;;:::o;8544:151::-;8633:7;8660:11;:18;8672:5;8660:18;;;;;;;;;;;;;;;:27;8679:7;8660:27;;;;;;;;;;;;;;;;8653:34;;8544:151;;;;:::o;683:98::-;736:7;763:10;756:17;;683:98;:::o;15268:380::-;15421:1;15404:19;;:5;:19;;;15396:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;15502:1;15483:21;;:7;:21;;;15475:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;15586:6;15556:11;:18;15568:5;15556:18;;;;;;;;;;;;;;;:27;15575:7;15556:27;;;;;;;;;;;;;;;:36;;;;15624:7;15608:32;;15617:5;15608:32;;;15633:6;15608:32;;;;;;:::i;:::-;;;;;;;;15268:380;;;:::o;15939:453::-;16074:24;16101:25;16111:5;16118:7;16101:9;:25::i;:::-;16074:52;;16161:17;16141:16;:37;16137:248;;16223:6;16203:16;:26;;16195:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;16307:51;16316:5;16323:7;16351:6;16332:16;:25;16307:8;:51::i;:::-;16137:248;16063:329;15939:453;;;:::o;12147:840::-;12294:1;12278:18;;:4;:18;;;12270:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;12371:1;12357:16;;:2;:16;;;12349:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;12426:38;12447:4;12453:2;12457:6;12426:20;:38::i;:::-;12477:19;12499:9;:15;12509:4;12499:15;;;;;;;;;;;;;;;;12477:37;;12548:6;12533:11;:21;;12525:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;12665:6;12651:11;:20;12633:9;:15;12643:4;12633:15;;;;;;;;;;;;;;;:38;;;;12868:6;12851:9;:13;12861:2;12851:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;12918:2;12903:26;;12912:4;12903:26;;;12922:6;12903:26;;;;;;:::i;:::-;;;;;;;;12942:37;12962:4;12968:2;12972:6;12942:19;:37::i;:::-;12259:728;12147:840;;;:::o;3695:262:5:-;3748:7;3788:11;3771:28;;3779:4;3771:28;;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;3857:22;3850:29;;;;3767:184;3917:23;:21;:23::i;:::-;3910:30;;3695:262;;:::o;20508:109:8:-;20568:7;20595;:14;20603:5;20595:14;;;;;;;;;;;;;;;;20588:21;;20508:109;;;:::o;3367:268:1:-;3461:13;1371:66;3519:18;;3509:5;3490:47;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:268;;;;;:::o;20738:402:8:-;20798:7;21105;:14;21113:5;21105:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;21098:23;;20738:402;;;:::o;4768:165:5:-;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;4871:21;:55::i;:::-;4864:62;;4768:165;;;:::o;6598:232:4:-;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;:::-;6814:9;6807:16;;;;6598:232;;;;;;:::o;16992:125:8:-;;;;:::o;17721:124::-;;;;:::o;3963:180:5:-;4018:7;1929:95;4077:11;4090:14;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;2059:405:1:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2143:30;;2261:17;2292:2;2281:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2261:34;;2383:3;2378;2371:16;2423:4;2416;2411:3;2407:14;2400:28;2454:3;2447:10;;;;2059:405;;;:::o;8336:397:4:-;8429:12;8536:4;8530:11;8566:10;8561:3;8554:23;8613:15;8606:4;8601:3;8597:14;8590:39;8665:10;8658:4;8653:3;8649:14;8642:34;8712:4;8707:3;8697:20;8689:28;;8505:222;8336:397;;;;:::o;5009:1456::-;5097:7;5106:12;6021:66;6016:1;6008:10;;:79;6004:161;;;6119:1;6123:30;6103:51;;;;;;6004:161;6259:14;6276:24;6286:4;6292:1;6295;6298;6276:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:41;;6332:1;6314:20;;:6;:20;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;6437:20;6421:37;;;;;5009:1456;;;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;2536:245:1:-;2597:7;2616:14;2669:4;2660;2633:33;;:40;2616:57;;2696:2;2687:6;:11;2683:69;;;2721:20;;;;;;;;;;;;;;2683:69;2768:6;2761:13;;;2536:245;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:149::-;5659:7;5699:66;5692:5;5688:78;5677:89;;5623:149;;;:::o;5778:115::-;5863:23;5880:5;5863:23;:::i;:::-;5858:3;5851:36;5778:115;;:::o;5899:118::-;5986:24;6004:5;5986:24;:::i;:::-;5981:3;5974:37;5899:118;;:::o;6023:114::-;6090:6;6124:5;6118:12;6108:22;;6023:114;;;:::o;6143:184::-;6242:11;6276:6;6271:3;6264:19;6316:4;6311:3;6307:14;6292:29;;6143:184;;;;:::o;6333:132::-;6400:4;6423:3;6415:11;;6453:4;6448:3;6444:14;6436:22;;6333:132;;;:::o;6471:108::-;6548:24;6566:5;6548:24;:::i;:::-;6543:3;6536:37;6471:108;;:::o;6585:179::-;6654:10;6675:46;6717:3;6709:6;6675:46;:::i;:::-;6753:4;6748:3;6744:14;6730:28;;6585:179;;;;:::o;6770:113::-;6840:4;6872;6867:3;6863:14;6855:22;;6770:113;;;:::o;6919:732::-;7038:3;7067:54;7115:5;7067:54;:::i;:::-;7137:86;7216:6;7211:3;7137:86;:::i;:::-;7130:93;;7247:56;7297:5;7247:56;:::i;:::-;7326:7;7357:1;7342:284;7367:6;7364:1;7361:13;7342:284;;;7443:6;7437:13;7470:63;7529:3;7514:13;7470:63;:::i;:::-;7463:70;;7556:60;7609:6;7556:60;:::i;:::-;7546:70;;7402:224;7389:1;7386;7382:9;7377:14;;7342:284;;;7346:14;7642:3;7635:10;;7043:608;;;6919:732;;;;:::o;7657:1215::-;8006:4;8044:3;8033:9;8029:19;8021:27;;8058:69;8124:1;8113:9;8109:17;8100:6;8058:69;:::i;:::-;8174:9;8168:4;8164:20;8159:2;8148:9;8144:18;8137:48;8202:78;8275:4;8266:6;8202:78;:::i;:::-;8194:86;;8327:9;8321:4;8317:20;8312:2;8301:9;8297:18;8290:48;8355:78;8428:4;8419:6;8355:78;:::i;:::-;8347:86;;8443:72;8511:2;8500:9;8496:18;8487:6;8443:72;:::i;:::-;8525:73;8593:3;8582:9;8578:19;8569:6;8525:73;:::i;:::-;8608;8676:3;8665:9;8661:19;8652:6;8608:73;:::i;:::-;8729:9;8723:4;8719:20;8713:3;8702:9;8698:19;8691:49;8757:108;8860:4;8851:6;8757:108;:::i;:::-;8749:116;;7657:1215;;;;;;;;;;:::o;8878:118::-;8949:22;8965:5;8949:22;:::i;:::-;8942:5;8939:33;8929:61;;8986:1;8983;8976:12;8929:61;8878:118;:::o;9002:135::-;9046:5;9084:6;9071:20;9062:29;;9100:31;9125:5;9100:31;:::i;:::-;9002:135;;;;:::o;9143:122::-;9216:24;9234:5;9216:24;:::i;:::-;9209:5;9206:35;9196:63;;9255:1;9252;9245:12;9196:63;9143:122;:::o;9271:139::-;9317:5;9355:6;9342:20;9333:29;;9371:33;9398:5;9371:33;:::i;:::-;9271:139;;;;:::o;9416:1199::-;9527:6;9535;9543;9551;9559;9567;9575;9624:3;9612:9;9603:7;9599:23;9595:33;9592:120;;;9631:79;;:::i;:::-;9592:120;9751:1;9776:53;9821:7;9812:6;9801:9;9797:22;9776:53;:::i;:::-;9766:63;;9722:117;9878:2;9904:53;9949:7;9940:6;9929:9;9925:22;9904:53;:::i;:::-;9894:63;;9849:118;10006:2;10032:53;10077:7;10068:6;10057:9;10053:22;10032:53;:::i;:::-;10022:63;;9977:118;10134:2;10160:53;10205:7;10196:6;10185:9;10181:22;10160:53;:::i;:::-;10150:63;;10105:118;10262:3;10289:51;10332:7;10323:6;10312:9;10308:22;10289:51;:::i;:::-;10279:61;;10233:117;10389:3;10416:53;10461:7;10452:6;10441:9;10437:22;10416:53;:::i;:::-;10406:63;;10360:119;10518:3;10545:53;10590:7;10581:6;10570:9;10566:22;10545:53;:::i;:::-;10535:63;;10489:119;9416:1199;;;;;;;;;;:::o;10621:474::-;10689:6;10697;10746:2;10734:9;10725:7;10721:23;10717:32;10714:119;;;10752:79;;:::i;:::-;10714:119;10872:1;10897:53;10942:7;10933:6;10922:9;10918:22;10897:53;:::i;:::-;10887:63;;10843:117;10999:2;11025:53;11070:7;11061:6;11050:9;11046:22;11025:53;:::i;:::-;11015:63;;10970:118;10621:474;;;;;:::o;11101:180::-;11149:77;11146:1;11139:88;11246:4;11243:1;11236:15;11270:4;11267:1;11260:15;11287:320;11331:6;11368:1;11362:4;11358:12;11348:22;;11415:1;11409:4;11405:12;11436:18;11426:81;;11492:4;11484:6;11480:17;11470:27;;11426:81;11554:2;11546:6;11543:14;11523:18;11520:38;11517:84;;11573:18;;:::i;:::-;11517:84;11338:269;11287:320;;;:::o;11613:180::-;11661:77;11658:1;11651:88;11758:4;11755:1;11748:15;11782:4;11779:1;11772:15;11799:191;11839:3;11858:20;11876:1;11858:20;:::i;:::-;11853:25;;11892:20;11910:1;11892:20;:::i;:::-;11887:25;;11935:1;11932;11928:9;11921:16;;11956:3;11953:1;11950:10;11947:36;;;11963:18;;:::i;:::-;11947:36;11799:191;;;;:::o;11996:180::-;12044:77;12041:1;12034:88;12141:4;12138:1;12131:15;12165:4;12162:1;12155:15;12182:224;12322:34;12318:1;12310:6;12306:14;12299:58;12391:7;12386:2;12378:6;12374:15;12367:32;12182:224;:::o;12412:366::-;12554:3;12575:67;12639:2;12634:3;12575:67;:::i;:::-;12568:74;;12651:93;12740:3;12651:93;:::i;:::-;12769:2;12764:3;12760:12;12753:19;;12412:366;;;:::o;12784:419::-;12950:4;12988:2;12977:9;12973:18;12965:26;;13037:9;13031:4;13027:20;13023:1;13012:9;13008:17;13001:47;13065:131;13191:4;13065:131;:::i;:::-;13057:139;;12784:419;;;:::o;13209:775::-;13442:4;13480:3;13469:9;13465:19;13457:27;;13494:71;13562:1;13551:9;13547:17;13538:6;13494:71;:::i;:::-;13575:72;13643:2;13632:9;13628:18;13619:6;13575:72;:::i;:::-;13657;13725:2;13714:9;13710:18;13701:6;13657:72;:::i;:::-;13739;13807:2;13796:9;13792:18;13783:6;13739:72;:::i;:::-;13821:73;13889:3;13878:9;13874:19;13865:6;13821:73;:::i;:::-;13904;13972:3;13961:9;13957:19;13948:6;13904:73;:::i;:::-;13209:775;;;;;;;;;:::o;13990:332::-;14111:4;14149:2;14138:9;14134:18;14126:26;;14162:71;14230:1;14219:9;14215:17;14206:6;14162:71;:::i;:::-;14243:72;14311:2;14300:9;14296:18;14287:6;14243:72;:::i;:::-;13990:332;;;;;:::o;14328:223::-;14468:34;14464:1;14456:6;14452:14;14445:58;14537:6;14532:2;14524:6;14520:15;14513:31;14328:223;:::o;14557:366::-;14699:3;14720:67;14784:2;14779:3;14720:67;:::i;:::-;14713:74;;14796:93;14885:3;14796:93;:::i;:::-;14914:2;14909:3;14905:12;14898:19;;14557:366;;;:::o;14929:419::-;15095:4;15133:2;15122:9;15118:18;15110:26;;15182:9;15176:4;15172:20;15168:1;15157:9;15153:17;15146:47;15210:131;15336:4;15210:131;:::i;:::-;15202:139;;14929:419;;;:::o;15354:221::-;15494:34;15490:1;15482:6;15478:14;15471:58;15563:4;15558:2;15550:6;15546:15;15539:29;15354:221;:::o;15581:366::-;15723:3;15744:67;15808:2;15803:3;15744:67;:::i;:::-;15737:74;;15820:93;15909:3;15820:93;:::i;:::-;15938:2;15933:3;15929:12;15922:19;;15581:366;;;:::o;15953:419::-;16119:4;16157:2;16146:9;16142:18;16134:26;;16206:9;16200:4;16196:20;16192:1;16181:9;16177:17;16170:47;16234:131;16360:4;16234:131;:::i;:::-;16226:139;;15953:419;;;:::o;16378:179::-;16518:31;16514:1;16506:6;16502:14;16495:55;16378:179;:::o;16563:366::-;16705:3;16726:67;16790:2;16785:3;16726:67;:::i;:::-;16719:74;;16802:93;16891:3;16802:93;:::i;:::-;16920:2;16915:3;16911:12;16904:19;;16563:366;;;:::o;16935:419::-;17101:4;17139:2;17128:9;17124:18;17116:26;;17188:9;17182:4;17178:20;17174:1;17163:9;17159:17;17152:47;17216:131;17342:4;17216:131;:::i;:::-;17208:139;;16935:419;;;:::o;17360:224::-;17500:34;17496:1;17488:6;17484:14;17477:58;17569:7;17564:2;17556:6;17552:15;17545:32;17360:224;:::o;17590:366::-;17732:3;17753:67;17817:2;17812:3;17753:67;:::i;:::-;17746:74;;17829:93;17918:3;17829:93;:::i;:::-;17947:2;17942:3;17938:12;17931:19;;17590:366;;;:::o;17962:419::-;18128:4;18166:2;18155:9;18151:18;18143:26;;18215:9;18209:4;18205:20;18201:1;18190:9;18186:17;18179:47;18243:131;18369:4;18243:131;:::i;:::-;18235:139;;17962:419;;;:::o;18387:222::-;18527:34;18523:1;18515:6;18511:14;18504:58;18596:5;18591:2;18583:6;18579:15;18572:30;18387:222;:::o;18615:366::-;18757:3;18778:67;18842:2;18837:3;18778:67;:::i;:::-;18771:74;;18854:93;18943:3;18854:93;:::i;:::-;18972:2;18967:3;18963:12;18956:19;;18615:366;;;:::o;18987:419::-;19153:4;19191:2;19180:9;19176:18;19168:26;;19240:9;19234:4;19230:20;19226:1;19215:9;19211:17;19204:47;19268:131;19394:4;19268:131;:::i;:::-;19260:139;;18987:419;;;:::o;19412:225::-;19552:34;19548:1;19540:6;19536:14;19529:58;19621:8;19616:2;19608:6;19604:15;19597:33;19412:225;:::o;19643:366::-;19785:3;19806:67;19870:2;19865:3;19806:67;:::i;:::-;19799:74;;19882:93;19971:3;19882:93;:::i;:::-;20000:2;19995:3;19991:12;19984:19;;19643:366;;;:::o;20015:419::-;20181:4;20219:2;20208:9;20204:18;20196:26;;20268:9;20262:4;20258:20;20254:1;20243:9;20239:17;20232:47;20296:131;20422:4;20296:131;:::i;:::-;20288:139;;20015:419;;;:::o;20440:664::-;20645:4;20683:3;20672:9;20668:19;20660:27;;20697:71;20765:1;20754:9;20750:17;20741:6;20697:71;:::i;:::-;20778:72;20846:2;20835:9;20831:18;20822:6;20778:72;:::i;:::-;20860;20928:2;20917:9;20913:18;20904:6;20860:72;:::i;:::-;20942;21010:2;20999:9;20995:18;20986:6;20942:72;:::i;:::-;21024:73;21092:3;21081:9;21077:19;21068:6;21024:73;:::i;:::-;20440:664;;;;;;;;:::o;21110:545::-;21283:4;21321:3;21310:9;21306:19;21298:27;;21335:71;21403:1;21392:9;21388:17;21379:6;21335:71;:::i;:::-;21416:68;21480:2;21469:9;21465:18;21456:6;21416:68;:::i;:::-;21494:72;21562:2;21551:9;21547:18;21538:6;21494:72;:::i;:::-;21576;21644:2;21633:9;21629:18;21620:6;21576:72;:::i;:::-;21110:545;;;;;;;:::o;21661:180::-;21709:77;21706:1;21699:88;21806:4;21803:1;21796:15;21830:4;21827:1;21820:15;21847:174;21987:26;21983:1;21975:6;21971:14;21964:50;21847:174;:::o;22027:366::-;22169:3;22190:67;22254:2;22249:3;22190:67;:::i;:::-;22183:74;;22266:93;22355:3;22266:93;:::i;:::-;22384:2;22379:3;22375:12;22368:19;;22027:366;;;:::o;22399:419::-;22565:4;22603:2;22592:9;22588:18;22580:26;;22652:9;22646:4;22642:20;22638:1;22627:9;22623:17;22616:47;22680:131;22806:4;22680:131;:::i;:::-;22672:139;;22399:419;;;:::o;22824:181::-;22964:33;22960:1;22952:6;22948:14;22941:57;22824:181;:::o;23011:366::-;23153:3;23174:67;23238:2;23233:3;23174:67;:::i;:::-;23167:74;;23250:93;23339:3;23250:93;:::i;:::-;23368:2;23363:3;23359:12;23352:19;;23011:366;;;:::o;23383:419::-;23549:4;23587:2;23576:9;23572:18;23564:26;;23636:9;23630:4;23626:20;23622:1;23611:9;23607:17;23600:47;23664:131;23790:4;23664:131;:::i;:::-;23656:139;;23383:419;;;:::o;23808:221::-;23948:34;23944:1;23936:6;23932:14;23925:58;24017:4;24012:2;24004:6;24000:15;23993:29;23808:221;:::o;24035:366::-;24177:3;24198:67;24262:2;24257:3;24198:67;:::i;:::-;24191:74;;24274:93;24363:3;24274:93;:::i;:::-;24392:2;24387:3;24383:12;24376:19;;24035:366;;;:::o;24407:419::-;24573:4;24611:2;24600:9;24596:18;24588:26;;24660:9;24654:4;24650:20;24646:1;24635:9;24631:17;24624:47;24688:131;24814:4;24688:131;:::i;:::-;24680:139;;24407:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1664800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"decimals()": "383",
								"decreaseAllowance(address,uint256)": "infinite",
								"eip712Domain()": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2916",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 23627,
									"end": 23787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 23712,
									"end": 23716,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 22323,
									"end": 22327,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "PUSH",
									"source": 5,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 23724,
									"end": 23728,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 23729,
									"end": 23735,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6545,
									"end": 6550,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 6545,
									"end": 6558,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6545,
									"end": 6558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6545,
									"end": 6558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 6545,
									"end": 6558,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6545,
									"end": 6558,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6545,
									"end": 6558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 6545,
									"end": 6558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6545,
									"end": 6558,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 6545,
									"end": 6558,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6545,
									"end": 6558,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6579,
									"end": 6586,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6569,
									"end": 6576,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 6569,
									"end": 6586,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6569,
									"end": 6586,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6569,
									"end": 6586,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 6569,
									"end": 6586,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6569,
									"end": 6586,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6569,
									"end": 6586,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 6569,
									"end": 6586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6569,
									"end": 6586,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 6569,
									"end": 6586,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6569,
									"end": 6586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6478,
									"end": 6594,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6478,
									"end": 6594,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3296,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 3282,
									"end": 3295,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 3251,
									"end": 3255,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3251,
									"end": 3281,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 3251,
									"end": 3281,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3251,
									"end": 3281,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3251,
									"end": 3281,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3251,
									"end": 3296,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3251,
									"end": 3296,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3251,
									"end": 3296,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3251,
									"end": 3296,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3251,
									"end": 3296,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3251,
									"end": 3296,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 3251,
									"end": 3296,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3296,
									"name": "PUSH",
									"source": 5,
									"value": "120"
								},
								{
									"begin": 3243,
									"end": 3296,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3296,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3296,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3296,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3296,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3317,
									"end": 3368,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 3351,
									"end": 3367,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 3317,
									"end": 3324,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3317,
									"end": 3350,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 3317,
									"end": 3350,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3317,
									"end": 3350,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3317,
									"end": 3350,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3317,
									"end": 3368,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3317,
									"end": 3368,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3317,
									"end": 3368,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3317,
									"end": 3368,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3317,
									"end": 3368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3317,
									"end": 3368,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 3317,
									"end": 3368,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3306,
									"end": 3368,
									"name": "PUSH",
									"source": 5,
									"value": "140"
								},
								{
									"begin": 3306,
									"end": 3368,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3306,
									"end": 3368,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3306,
									"end": 3368,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3306,
									"end": 3368,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3306,
									"end": 3368,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3408,
									"end": 3412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3392,
									"end": 3414,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3392,
									"end": 3414,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3392,
									"end": 3414,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3392,
									"end": 3414,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3392,
									"end": 3414,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3392,
									"end": 3414,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 3378,
									"end": 3414,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 3378,
									"end": 3414,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3378,
									"end": 3414,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3378,
									"end": 3414,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3378,
									"end": 3414,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3378,
									"end": 3414,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3457,
									"end": 3464,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3441,
									"end": 3466,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3441,
									"end": 3466,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3441,
									"end": 3466,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3441,
									"end": 3466,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3441,
									"end": 3466,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3441,
									"end": 3466,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 3424,
									"end": 3466,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 3424,
									"end": 3466,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3424,
									"end": 3466,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3424,
									"end": 3466,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3424,
									"end": 3466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3424,
									"end": 3466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3494,
									"end": 3507,
									"name": "CHAINID",
									"source": 5
								},
								{
									"begin": 3477,
									"end": 3507,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 3477,
									"end": 3507,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3477,
									"end": 3507,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3477,
									"end": 3507,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3477,
									"end": 3507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3477,
									"end": 3507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3542,
									"end": 3565,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 3542,
									"end": 3563,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 3542,
									"end": 3563,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3563,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3542,
									"end": 3565,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3565,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3542,
									"end": 3565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3542,
									"end": 3565,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 3542,
									"end": 3565,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3517,
									"end": 3565,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 3517,
									"end": 3565,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3517,
									"end": 3565,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3517,
									"end": 3565,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3517,
									"end": 3565,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3517,
									"end": 3565,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3597,
									"end": 3601,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 3575,
									"end": 3602,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3575,
									"end": 3602,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3575,
									"end": 3602,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 3575,
									"end": 3602,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3575,
									"end": 3602,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3575,
									"end": 3602,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3575,
									"end": 3602,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3575,
									"end": 3602,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3575,
									"end": 3602,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3575,
									"end": 3602,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3609,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 22284,
									"end": 22336,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 23747,
									"end": 23779,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 23753,
									"end": 23763,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 23764,
									"end": 23778,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 23747,
									"end": 23752,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 23747,
									"end": 23752,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 23747,
									"end": 23752,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 23747,
									"end": 23779,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 23747,
									"end": 23779,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 23747,
									"end": 23779,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 23747,
									"end": 23779,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 23747,
									"end": 23779,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 23627,
									"end": 23787,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2991,
									"end": 3002,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3040,
									"end": 3042,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3024,
									"end": 3029,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3018,
									"end": 3037,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3018,
									"end": 3042,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3014,
									"end": 3230,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3014,
									"end": 3230,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3014,
									"end": 3230,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3065,
									"end": 3085,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 3079,
									"end": 3084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3065,
									"end": 3078,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 3065,
									"end": 3078,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3065,
									"end": 3078,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3065,
									"end": 3085,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3065,
									"end": 3085,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3065,
									"end": 3085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3065,
									"end": 3085,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 3065,
									"end": 3085,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3058,
									"end": 3085,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3058,
									"end": 3085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3058,
									"end": 3085,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 3058,
									"end": 3085,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3014,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3014,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3157,
									"end": 3162,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3148,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 3142,
									"end": 3147,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3141,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 3116,
									"end": 3141,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3116,
									"end": 3141,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3148,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3116,
									"end": 3148,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3148,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3148,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 3116,
									"end": 3148,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3116,
									"end": 3154,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 3116,
									"end": 3162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1371,
									"end": 1437,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3176,
									"end": 3219,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3176,
									"end": 3219,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3236,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3963,
									"end": 4143,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 3963,
									"end": 4143,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4018,
									"end": 4025,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 2024,
									"name": "PUSH",
									"source": 5,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4077,
									"end": 4088,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 4077,
									"end": 4088,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4090,
									"end": 4104,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 4090,
									"end": 4104,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4106,
									"end": 4119,
									"name": "CHAINID",
									"source": 5
								},
								{
									"begin": 4129,
									"end": 4133,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 4054,
									"end": 4135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4044,
									"end": 4136,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4044,
									"end": 4136,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4044,
									"end": 4136,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4044,
									"end": 4136,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4044,
									"end": 4136,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4044,
									"end": 4136,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 4037,
									"end": 4136,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4037,
									"end": 4136,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3963,
									"end": 4143,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3963,
									"end": 4143,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 13274,
									"end": 13822,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 13274,
									"end": 13822,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 13377,
									"end": 13378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 13358,
									"end": 13379,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13358,
									"end": 13379,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 13358,
									"end": 13365,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 13358,
									"end": 13379,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13358,
									"end": 13379,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 13358,
									"end": 13379,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 13350,
									"end": 13415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 13350,
									"end": 13415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 13428,
									"end": 13477,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 13457,
									"end": 13458,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 13461,
									"end": 13468,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 13470,
									"end": 13476,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 13428,
									"end": 13448,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 13428,
									"end": 13448,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 13428,
									"end": 13448,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 13428,
									"end": 13477,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 13428,
									"end": 13477,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 13428,
									"end": 13477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 13428,
									"end": 13477,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 13428,
									"end": 13477,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 13506,
									"end": 13512,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13502,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 13490,
									"end": 13502,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 13490,
									"end": 13512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 13490,
									"end": 13512,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 13683,
									"end": 13689,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13670,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 13671,
									"end": 13678,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13679,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 13661,
									"end": 13689,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13689,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13689,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13689,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13689,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13689,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13689,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13689,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13689,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13689,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 13661,
									"end": 13689,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 13737,
									"end": 13744,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 13733,
									"end": 13734,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "PUSH",
									"source": 8,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 13746,
									"end": 13752,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 13716,
									"end": 13753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 13716,
									"end": 13753,
									"name": "LOG3",
									"source": 8
								},
								{
									"begin": 13766,
									"end": 13814,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 13794,
									"end": 13795,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 13798,
									"end": 13805,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 13807,
									"end": 13813,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 13766,
									"end": 13785,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 13766,
									"end": 13785,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 13766,
									"end": 13785,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 13766,
									"end": 13814,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 13766,
									"end": 13814,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 13766,
									"end": 13814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 13766,
									"end": 13814,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 13766,
									"end": 13814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 13274,
									"end": 13822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 13274,
									"end": 13822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 13274,
									"end": 13822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1689,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1689,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1754,
									"end": 1765,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1777,
									"end": 1794,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1803,
									"end": 1806,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1777,
									"end": 1807,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1777,
									"end": 1807,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1835,
									"end": 1837,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1821,
									"end": 1825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1832,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1837,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1817,
									"end": 1889,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1817,
									"end": 1889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1817,
									"end": 1889,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1874,
									"end": 1877,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "PUSH",
									"source": 1,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1860,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1817,
									"end": 1889,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1817,
									"end": 1889,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 1959,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 1966,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1938,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1938,
									"end": 1951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1938,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1938,
									"end": 1951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1938,
									"end": 1951,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1938,
									"end": 1951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 1952,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1930,
									"end": 1952,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 1966,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1922,
									"end": 1967,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 1968,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 1968,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 1968,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1689,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1689,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1689,
									"end": 1975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1689,
									"end": 1975,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3310,
									"end": 3512,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 3310,
									"end": 3512,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3378,
									"end": 3398,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3486,
									"end": 3496,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3476,
									"end": 3496,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3476,
									"end": 3496,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3310,
									"end": 3512,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3310,
									"end": 3512,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3310,
									"end": 3512,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3310,
									"end": 3512,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 16992,
									"end": 17117,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 16992,
									"end": 17117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 16992,
									"end": 17117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 16992,
									"end": 17117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 16992,
									"end": 17117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 16992,
									"end": 17117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 17721,
									"end": 17845,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 17721,
									"end": 17845,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 17721,
									"end": 17845,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 17721,
									"end": 17845,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 17721,
									"end": 17845,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 17721,
									"end": 17845,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 694,
									"end": 811,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 694,
									"end": 811,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 803,
									"end": 804,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 801,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 793,
									"end": 805,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 817,
									"end": 934,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 817,
									"end": 934,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 926,
									"end": 927,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 923,
									"end": 924,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 916,
									"end": 928,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 940,
									"end": 1042,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 940,
									"end": 1042,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 981,
									"end": 987,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1028,
									"end": 1035,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1016,
									"end": 1021,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1012,
									"end": 1026,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1008,
									"end": 1036,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 998,
									"end": 1036,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 998,
									"end": 1036,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 940,
									"end": 1042,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 940,
									"end": 1042,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 940,
									"end": 1042,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 940,
									"end": 1042,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1048,
									"end": 1228,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1048,
									"end": 1228,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1096,
									"end": 1173,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1093,
									"end": 1094,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1086,
									"end": 1174,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1197,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1190,
									"end": 1191,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1183,
									"end": 1198,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1217,
									"end": 1221,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1214,
									"end": 1215,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 1222,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1234,
									"end": 1515,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1234,
									"end": 1515,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1317,
									"end": 1344,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 1339,
									"end": 1343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1317,
									"end": 1344,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1317,
									"end": 1344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1317,
									"end": 1344,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 1317,
									"end": 1344,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1345,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1447,
									"end": 1453,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1435,
									"end": 1445,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1432,
									"end": 1454,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1429,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1399,
									"end": 1409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1396,
									"end": 1430,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1393,
									"end": 1455,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1478,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 1390,
									"end": 1478,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1476,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 1458,
									"end": 1476,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1458,
									"end": 1476,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1476,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 1458,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1478,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 1390,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1494,
									"end": 1496,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1487,
									"end": 1509,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1277,
									"end": 1515,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1234,
									"end": 1515,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1234,
									"end": 1515,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1234,
									"end": 1515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1561,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1582,
									"end": 1602,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 1582,
									"end": 1602,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1582,
									"end": 1602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1602,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 1582,
									"end": 1602,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1572,
									"end": 1602,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1572,
									"end": 1602,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1611,
									"end": 1644,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 1639,
									"end": 1643,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1631,
									"end": 1637,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1611,
									"end": 1644,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1611,
									"end": 1644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1611,
									"end": 1644,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 1611,
									"end": 1644,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1656,
									"end": 1964,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1656,
									"end": 1964,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1718,
									"end": 1722,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1826,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1797,
									"end": 1827,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1794,
									"end": 1850,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1794,
									"end": 1850,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 1794,
									"end": 1850,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1830,
									"end": 1848,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 1830,
									"end": 1848,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1830,
									"end": 1848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1830,
									"end": 1848,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 1830,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1794,
									"end": 1850,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 1794,
									"end": 1850,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1868,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1868,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1868,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1868,
									"end": 1897,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 1868,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1897,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1897,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1952,
									"end": 1956,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 1957,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1934,
									"end": 1957,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1934,
									"end": 1957,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1656,
									"end": 1964,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1656,
									"end": 1964,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1656,
									"end": 1964,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1656,
									"end": 1964,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1970,
									"end": 2216,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 1970,
									"end": 2216,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2051,
									"end": 2052,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2072,
									"end": 2073,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2160,
									"end": 2161,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2162,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2145,
									"end": 2163,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2142,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2136,
									"end": 2139,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2143,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2125,
									"end": 2164,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2097,
									"end": 2099,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2095,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2090,
									"end": 2100,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2085,
									"end": 2100,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2085,
									"end": 2100,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2208,
									"end": 2209,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2205,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2194,
									"end": 2197,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2183,
									"end": 2210,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2032,
									"end": 2216,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1970,
									"end": 2216,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1970,
									"end": 2216,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1970,
									"end": 2216,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1970,
									"end": 2216,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2311,
									"end": 2316,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2336,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 2352,
									"end": 2401,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 2394,
									"end": 2400,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2352,
									"end": 2401,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2352,
									"end": 2401,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2352,
									"end": 2401,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 2352,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2336,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2336,
									"end": 2402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2336,
									"end": 2402,
									"name": "tag",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 2336,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2327,
									"end": 2402,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2327,
									"end": 2402,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2425,
									"end": 2431,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2423,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2411,
									"end": 2432,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2463,
									"end": 2467,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2456,
									"end": 2461,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2468,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2501,
									"end": 2504,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2492,
									"end": 2498,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2487,
									"end": 2490,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2483,
									"end": 2499,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2480,
									"end": 2505,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2477,
									"end": 2589,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2477,
									"end": 2589,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 2477,
									"end": 2589,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2587,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 2508,
									"end": 2587,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2508,
									"end": 2587,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2587,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 2508,
									"end": 2587,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2477,
									"end": 2589,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 2477,
									"end": 2589,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2598,
									"end": 2650,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 2643,
									"end": 2649,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2638,
									"end": 2641,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2633,
									"end": 2636,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2598,
									"end": 2650,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2598,
									"end": 2650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2598,
									"end": 2650,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 2598,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2317,
									"end": 2656,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2222,
									"end": 2656,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2676,
									"end": 3031,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2676,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2743,
									"end": 2748,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2792,
									"end": 2795,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2785,
									"end": 2789,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2777,
									"end": 2783,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2773,
									"end": 2790,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2769,
									"end": 2796,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2759,
									"end": 2881,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 2759,
									"end": 2881,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2800,
									"end": 2879,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 2800,
									"end": 2879,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2800,
									"end": 2879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2800,
									"end": 2879,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 2800,
									"end": 2879,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2759,
									"end": 2881,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 2759,
									"end": 2881,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2904,
									"end": 2917,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2935,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 3021,
									"end": 3024,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3019,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3006,
									"end": 3010,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2998,
									"end": 3004,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2994,
									"end": 3011,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2935,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2935,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2935,
									"end": 3025,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 2935,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3025,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3025,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2749,
									"end": 3031,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2676,
									"end": 3031,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2676,
									"end": 3031,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2676,
									"end": 3031,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2676,
									"end": 3031,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2676,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3153,
									"end": 3159,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3161,
									"end": 3167,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3198,
									"end": 3207,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3189,
									"end": 3196,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3185,
									"end": 3208,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3181,
									"end": 3213,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 3216,
									"end": 3295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3336,
									"end": 3337,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3361,
									"end": 3425,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 3417,
									"end": 3424,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3408,
									"end": 3414,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3397,
									"end": 3406,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3393,
									"end": 3415,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3361,
									"end": 3425,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3361,
									"end": 3425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3361,
									"end": 3425,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 3361,
									"end": 3425,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3351,
									"end": 3425,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3351,
									"end": 3425,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3307,
									"end": 3435,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3495,
									"end": 3497,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3484,
									"end": 3493,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3480,
									"end": 3498,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3474,
									"end": 3499,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3526,
									"end": 3544,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3518,
									"end": 3524,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3515,
									"end": 3545,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3512,
									"end": 3629,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3512,
									"end": 3629,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 3512,
									"end": 3629,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3548,
									"end": 3627,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 3548,
									"end": 3627,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3548,
									"end": 3627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3548,
									"end": 3627,
									"name": "tag",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 3548,
									"end": 3627,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3512,
									"end": 3629,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 3512,
									"end": 3629,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3653,
									"end": 3727,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 3719,
									"end": 3726,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3710,
									"end": 3716,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3699,
									"end": 3708,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3695,
									"end": 3717,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3653,
									"end": 3727,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 3653,
									"end": 3727,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3653,
									"end": 3727,
									"name": "tag",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 3653,
									"end": 3727,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3643,
									"end": 3727,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3643,
									"end": 3727,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3445,
									"end": 3737,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3797,
									"end": 3799,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3786,
									"end": 3795,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3782,
									"end": 3800,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3776,
									"end": 3801,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3828,
									"end": 3846,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3820,
									"end": 3826,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3817,
									"end": 3847,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3931,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 3814,
									"end": 3931,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3850,
									"end": 3929,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 3850,
									"end": 3929,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3850,
									"end": 3929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3850,
									"end": 3929,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 3850,
									"end": 3929,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3931,
									"name": "tag",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 3814,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 4021,
									"end": 4028,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4012,
									"end": 4018,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4001,
									"end": 4010,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3997,
									"end": 4019,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 3955,
									"end": 4029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "tag",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3945,
									"end": 4029,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3945,
									"end": 4029,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3747,
									"end": 4039,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3037,
									"end": 4046,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4138,
									"end": 4143,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4132,
									"end": 4144,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4122,
									"end": 4144,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4122,
									"end": 4144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4052,
									"end": 4151,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4157,
									"end": 4337,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 4157,
									"end": 4337,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4205,
									"end": 4282,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4202,
									"end": 4203,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4195,
									"end": 4283,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4302,
									"end": 4306,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 4299,
									"end": 4300,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 4292,
									"end": 4307,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4326,
									"end": 4330,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4323,
									"end": 4324,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4316,
									"end": 4331,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4387,
									"end": 4393,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4424,
									"end": 4425,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 4418,
									"end": 4422,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4414,
									"end": 4426,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4471,
									"end": 4472,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4465,
									"end": 4469,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4461,
									"end": 4473,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4492,
									"end": 4510,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4548,
									"end": 4552,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 4540,
									"end": 4546,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4536,
									"end": 4553,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4526,
									"end": 4553,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4526,
									"end": 4553,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "tag",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4610,
									"end": 4612,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4602,
									"end": 4608,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4599,
									"end": 4613,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4579,
									"end": 4597,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4576,
									"end": 4614,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 4629,
									"end": 4647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "tag",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "tag",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4394,
									"end": 4663,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4343,
									"end": 4663,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4718,
									"end": 4722,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4733,
									"end": 4744,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4733,
									"end": 4744,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4764,
									"end": 4767,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4761,
									"end": 4762,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4754,
									"end": 4768,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4798,
									"end": 4802,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4795,
									"end": 4796,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4803,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 4777,
									"end": 4803,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4777,
									"end": 4803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4669,
									"end": 4810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4900,
									"end": 4902,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4895,
									"end": 4897,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4888,
									"end": 4893,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 4898,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4880,
									"end": 4903,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4870,
									"end": 4903,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4870,
									"end": 4903,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4816,
									"end": 4909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4959,
									"end": 4967,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5009,
									"end": 5014,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5003,
									"end": 5007,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4999,
									"end": 5015,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4978,
									"end": 5015,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4978,
									"end": 5015,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4915,
									"end": 5022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5097,
									"end": 5103,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5147,
									"end": 5148,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 5135,
									"end": 5145,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5131,
									"end": 5149,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "162"
								},
								{
									"begin": 5200,
									"end": 5266,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5189,
									"end": 5198,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 5170,
									"end": 5267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "tag",
									"source": 9,
									"value": "162"
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 5318,
									"end": 5326,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5307,
									"end": 5316,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 5288,
									"end": 5327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "tag",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5276,
									"end": 5327,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 5276,
									"end": 5327,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5360,
									"end": 5364,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5356,
									"end": 5365,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5349,
									"end": 5354,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5345,
									"end": 5366,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5409,
									"end": 5413,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5407,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5395,
									"end": 5414,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5388,
									"end": 5393,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5385,
									"end": 5415,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 5375,
									"end": 5415,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5375,
									"end": 5415,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5104,
									"end": 5421,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5104,
									"end": 5421,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 5421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5455,
									"end": 5458,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5476,
									"end": 5481,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5469,
									"end": 5481,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5469,
									"end": 5481,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5427,
									"end": 5487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5543,
									"end": 5552,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 5621,
									"end": 5626,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 5603,
									"end": 5627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "tag",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 5594,
									"end": 5628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "tag",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 5576,
									"end": 5629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "tag",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5493,
									"end": 5635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5684,
									"end": 5687,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5705,
									"end": 5710,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5698,
									"end": 5710,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5698,
									"end": 5710,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5641,
									"end": 5716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 5863,
									"end": 5870,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 5832,
									"end": 5871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "tag",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 5966,
									"end": 5982,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 5942,
									"end": 5983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "tag",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5934,
									"end": 5940,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5927,
									"end": 5931,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5921,
									"end": 5932,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 5893,
									"end": 5984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "tag",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5887,
									"end": 5891,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5880,
									"end": 5985,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5798,
									"end": 5991,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5722,
									"end": 5991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6042,
									"end": 6045,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5997,
									"end": 6070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 6153,
									"end": 6185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "tag",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 6252,
									"end": 6258,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6244,
									"end": 6250,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6238,
									"end": 6242,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 6194,
									"end": 6259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "tag",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6129,
									"end": 6265,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6076,
									"end": 6265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "tag",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6348,
									"end": 6351,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6341,
									"end": 6346,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6338,
									"end": 6352,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 6439,
									"end": 6440,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6432,
									"end": 6437,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 6402,
									"end": 6441,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "tag",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6375,
									"end": 6376,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6368,
									"end": 6373,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6364,
									"end": 6377,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6355,
									"end": 6377,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6355,
									"end": 6377,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "tag",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6271,
									"end": 6457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6564,
									"end": 6566,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6559,
									"end": 6562,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6556,
									"end": 6567,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 6630,
									"end": 6635,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 6598,
									"end": 6636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "tag",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 6700,
									"end": 6710,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 6682,
									"end": 6711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "tag",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6672,
									"end": 6680,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6668,
									"end": 6712,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6865,
									"end": 6867,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6853,
									"end": 6863,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6850,
									"end": 6868,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6886,
									"end": 6894,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6871,
									"end": 6894,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6871,
									"end": 6894,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "tag",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "188"
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 6983,
									"end": 6986,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 6965,
									"end": 6987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "tag",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6955,
									"end": 6963,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6951,
									"end": 6988,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6938,
									"end": 6949,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 6909,
									"end": 6989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "tag",
									"source": 9,
									"value": "188"
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6568,
									"end": 6999,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6568,
									"end": 6999,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "tag",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6463,
									"end": 7006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7066,
									"end": 7074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7116,
									"end": 7121,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7110,
									"end": 7114,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7106,
									"end": 7122,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 7085,
									"end": 7122,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7085,
									"end": 7122,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7012,
									"end": 7129,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7179,
									"end": 7185,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 7260,
									"end": 7261,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7256,
									"end": 7262,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7248,
									"end": 7253,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7245,
									"end": 7246,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 7241,
									"end": 7254,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 7212,
									"end": 7263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "tag",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7208,
									"end": 7264,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7293,
									"end": 7297,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7287,
									"end": 7291,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7283,
									"end": 7298,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7273,
									"end": 7298,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7273,
									"end": 7298,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7186,
									"end": 7304,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7135,
									"end": 7304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7385,
									"end": 7389,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 7556,
									"end": 7559,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7550,
									"end": 7554,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 7531,
									"end": 7560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "tag",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7523,
									"end": 7560,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7523,
									"end": 7560,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7593,
									"end": 7596,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7590,
									"end": 7591,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 7586,
									"end": 7597,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7580,
									"end": 7584,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7577,
									"end": 7598,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 7569,
									"end": 7598,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7569,
									"end": 7598,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7309,
									"end": 7604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 7759,
									"end": 7762,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 7726,
									"end": 7763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "tag",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7828,
									"end": 7846,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7820,
									"end": 7826,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7817,
									"end": 7847,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 7850,
									"end": 7868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "tag",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "tag",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 7926,
									"end": 7930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7920,
									"end": 7931,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 7894,
									"end": 7932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "tag",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 8039,
									"end": 8045,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8031,
									"end": 8037,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8025,
									"end": 8029,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 7979,
									"end": 8046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "tag",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8073,
									"end": 8074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8097,
									"end": 8101,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8084,
									"end": 8101,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8084,
									"end": 8101,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8129,
									"end": 8131,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8121,
									"end": 8127,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8118,
									"end": 8132,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8146,
									"end": 8147,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8803,
									"end": 8804,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8820,
									"end": 8826,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8869,
									"end": 8878,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8864,
									"end": 8867,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 8860,
									"end": 8879,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8854,
									"end": 8880,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8845,
									"end": 8880,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8845,
									"end": 8880,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "tag",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "204"
								},
								{
									"begin": 8980,
									"end": 8986,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8973,
									"end": 8978,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 8920,
									"end": 8987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "tag",
									"source": 9,
									"value": "204"
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8914,
									"end": 8918,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8907,
									"end": 8988,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8776,
									"end": 8998,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "tag",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8193,
									"end": 8197,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8189,
									"end": 8198,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 8181,
									"end": 8187,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8177,
									"end": 8199,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 8259,
									"end": 8263,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 8227,
									"end": 8264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "tag",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8286,
									"end": 8287,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "tag",
									"source": 9,
									"value": "206"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8314,
									"end": 8321,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8311,
									"end": 8312,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8308,
									"end": 8322,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8393,
									"end": 8402,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8388,
									"end": 8391,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8384,
									"end": 8403,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8378,
									"end": 8404,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8370,
									"end": 8376,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8363,
									"end": 8405,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8444,
									"end": 8445,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8436,
									"end": 8442,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8432,
									"end": 8446,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8422,
									"end": 8446,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8422,
									"end": 8446,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8491,
									"end": 8493,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8480,
									"end": 8489,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8476,
									"end": 8494,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8463,
									"end": 8494,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 8463,
									"end": 8494,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8337,
									"end": 8341,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8334,
									"end": 8335,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8330,
									"end": 8342,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8325,
									"end": 8342,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8325,
									"end": 8342,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "206"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "tag",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8536,
									"end": 8542,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8527,
									"end": 8534,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8524,
									"end": 8543,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "209"
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8594,
									"end": 8603,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8589,
									"end": 8592,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8585,
									"end": 8604,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8579,
									"end": 8605,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "210"
								},
								{
									"begin": 8679,
									"end": 8683,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8671,
									"end": 8677,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8667,
									"end": 8684,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8656,
									"end": 8665,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 8637,
									"end": 8685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "tag",
									"source": 9,
									"value": "210"
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8629,
									"end": 8635,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8622,
									"end": 8686,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8544,
									"end": 8700,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "tag",
									"source": 9,
									"value": "209"
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8746,
									"end": 8747,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8742,
									"end": 8743,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8734,
									"end": 8740,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8730,
									"end": 8744,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 8726,
									"end": 8748,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8720,
									"end": 8724,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8713,
									"end": 8749,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "tag",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7609,
									"end": 9004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9010,
									"end": 9087,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 9010,
									"end": 9087,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9047,
									"end": 9054,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9076,
									"end": 9081,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9065,
									"end": 9081,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9065,
									"end": 9081,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9010,
									"end": 9087,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9010,
									"end": 9087,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9010,
									"end": 9087,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9010,
									"end": 9087,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9093,
									"end": 9211,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 9093,
									"end": 9211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9180,
									"end": 9204,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "213"
								},
								{
									"begin": 9198,
									"end": 9203,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9180,
									"end": 9204,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 9180,
									"end": 9204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9180,
									"end": 9204,
									"name": "tag",
									"source": 9,
									"value": "213"
								},
								{
									"begin": 9180,
									"end": 9204,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9175,
									"end": 9178,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9168,
									"end": 9205,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9093,
									"end": 9211,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9093,
									"end": 9211,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9093,
									"end": 9211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9217,
									"end": 9335,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 9217,
									"end": 9335,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9304,
									"end": 9328,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "215"
								},
								{
									"begin": 9322,
									"end": 9327,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9304,
									"end": 9328,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 9304,
									"end": 9328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9304,
									"end": 9328,
									"name": "tag",
									"source": 9,
									"value": "215"
								},
								{
									"begin": 9304,
									"end": 9328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9299,
									"end": 9302,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9292,
									"end": 9329,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9217,
									"end": 9335,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9217,
									"end": 9335,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9217,
									"end": 9335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9341,
									"end": 9467,
									"name": "tag",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 9341,
									"end": 9467,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9378,
									"end": 9385,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9418,
									"end": 9460,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9411,
									"end": 9416,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9407,
									"end": 9461,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 9396,
									"end": 9461,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9396,
									"end": 9461,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9341,
									"end": 9467,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9341,
									"end": 9467,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9341,
									"end": 9467,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9341,
									"end": 9467,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9473,
									"end": 9569,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 9473,
									"end": 9569,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9510,
									"end": 9517,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9539,
									"end": 9563,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 9557,
									"end": 9562,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9539,
									"end": 9563,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 9539,
									"end": 9563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9539,
									"end": 9563,
									"name": "tag",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 9539,
									"end": 9563,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9528,
									"end": 9563,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9528,
									"end": 9563,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9473,
									"end": 9569,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9473,
									"end": 9569,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9473,
									"end": 9569,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9473,
									"end": 9569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9575,
									"end": 9693,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 9575,
									"end": 9693,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9662,
									"end": 9686,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "220"
								},
								{
									"begin": 9680,
									"end": 9685,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9662,
									"end": 9686,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 9662,
									"end": 9686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9662,
									"end": 9686,
									"name": "tag",
									"source": 9,
									"value": "220"
								},
								{
									"begin": 9662,
									"end": 9686,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9657,
									"end": 9660,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9650,
									"end": 9687,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9575,
									"end": 9693,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9575,
									"end": 9693,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9575,
									"end": 9693,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9699,
									"end": 10363,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 9699,
									"end": 10363,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9904,
									"end": 9908,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9942,
									"end": 9945,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 9931,
									"end": 9940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9927,
									"end": 9946,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9919,
									"end": 9946,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9919,
									"end": 9946,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9956,
									"end": 10027,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "222"
								},
								{
									"begin": 10024,
									"end": 10025,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10013,
									"end": 10022,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10009,
									"end": 10026,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10000,
									"end": 10006,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 9956,
									"end": 10027,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 9956,
									"end": 10027,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9956,
									"end": 10027,
									"name": "tag",
									"source": 9,
									"value": "222"
								},
								{
									"begin": 9956,
									"end": 10027,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10037,
									"end": 10109,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "223"
								},
								{
									"begin": 10105,
									"end": 10107,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10094,
									"end": 10103,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10090,
									"end": 10108,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10081,
									"end": 10087,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 10037,
									"end": 10109,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 10037,
									"end": 10109,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10037,
									"end": 10109,
									"name": "tag",
									"source": 9,
									"value": "223"
								},
								{
									"begin": 10037,
									"end": 10109,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10119,
									"end": 10191,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "224"
								},
								{
									"begin": 10187,
									"end": 10189,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 10176,
									"end": 10185,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10172,
									"end": 10190,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10163,
									"end": 10169,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 10119,
									"end": 10191,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 10119,
									"end": 10191,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10119,
									"end": 10191,
									"name": "tag",
									"source": 9,
									"value": "224"
								},
								{
									"begin": 10119,
									"end": 10191,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10201,
									"end": 10273,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "225"
								},
								{
									"begin": 10269,
									"end": 10271,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 10258,
									"end": 10267,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10245,
									"end": 10251,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10201,
									"end": 10273,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 10201,
									"end": 10273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10201,
									"end": 10273,
									"name": "tag",
									"source": 9,
									"value": "225"
								},
								{
									"begin": 10201,
									"end": 10273,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10283,
									"end": 10356,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "226"
								},
								{
									"begin": 10351,
									"end": 10354,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 10340,
									"end": 10349,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10336,
									"end": 10355,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10327,
									"end": 10333,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10283,
									"end": 10356,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 10283,
									"end": 10356,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10283,
									"end": 10356,
									"name": "tag",
									"source": 9,
									"value": "226"
								},
								{
									"begin": 10283,
									"end": 10356,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9699,
									"end": 10363,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 9699,
									"end": 10363,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 9699,
									"end": 10363,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9699,
									"end": 10363,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9699,
									"end": 10363,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9699,
									"end": 10363,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9699,
									"end": 10363,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9699,
									"end": 10363,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9699,
									"end": 10363,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10369,
									"end": 10538,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 10369,
									"end": 10538,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10453,
									"end": 10464,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10487,
									"end": 10493,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10482,
									"end": 10485,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10475,
									"end": 10494,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10527,
									"end": 10531,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10522,
									"end": 10525,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10518,
									"end": 10532,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10503,
									"end": 10532,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10503,
									"end": 10532,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10369,
									"end": 10538,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10369,
									"end": 10538,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10369,
									"end": 10538,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10369,
									"end": 10538,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10369,
									"end": 10538,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10544,
									"end": 10725,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 10544,
									"end": 10725,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10684,
									"end": 10717,
									"name": "PUSH",
									"source": 9,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 10680,
									"end": 10681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10672,
									"end": 10678,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10668,
									"end": 10682,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10661,
									"end": 10718,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10544,
									"end": 10725,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10544,
									"end": 10725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10731,
									"end": 11097,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 10731,
									"end": 11097,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10873,
									"end": 10876,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10894,
									"end": 10961,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "230"
								},
								{
									"begin": 10958,
									"end": 10960,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 10953,
									"end": 10956,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10894,
									"end": 10961,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 10894,
									"end": 10961,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10894,
									"end": 10961,
									"name": "tag",
									"source": 9,
									"value": "230"
								},
								{
									"begin": 10894,
									"end": 10961,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10887,
									"end": 10961,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10887,
									"end": 10961,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10970,
									"end": 11063,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "231"
								},
								{
									"begin": 11059,
									"end": 11062,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10970,
									"end": 11063,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 10970,
									"end": 11063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10970,
									"end": 11063,
									"name": "tag",
									"source": 9,
									"value": "231"
								},
								{
									"begin": 10970,
									"end": 11063,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11088,
									"end": 11090,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 11083,
									"end": 11086,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11079,
									"end": 11091,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 11072,
									"end": 11091,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11072,
									"end": 11091,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10731,
									"end": 11097,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10731,
									"end": 11097,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10731,
									"end": 11097,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10731,
									"end": 11097,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11103,
									"end": 11522,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 11103,
									"end": 11522,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11269,
									"end": 11273,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11307,
									"end": 11309,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 11296,
									"end": 11305,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11292,
									"end": 11310,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 11284,
									"end": 11310,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11284,
									"end": 11310,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11356,
									"end": 11365,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11350,
									"end": 11354,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11346,
									"end": 11366,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 11342,
									"end": 11343,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11331,
									"end": 11340,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11327,
									"end": 11344,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 11320,
									"end": 11367,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 11384,
									"end": 11515,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "233"
								},
								{
									"begin": 11510,
									"end": 11514,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11384,
									"end": 11515,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 11384,
									"end": 11515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11384,
									"end": 11515,
									"name": "tag",
									"source": 9,
									"value": "233"
								},
								{
									"begin": 11384,
									"end": 11515,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11376,
									"end": 11515,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11376,
									"end": 11515,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11103,
									"end": 11522,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11103,
									"end": 11522,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11103,
									"end": 11522,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11103,
									"end": 11522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11528,
									"end": 11708,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 11528,
									"end": 11708,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11576,
									"end": 11653,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11573,
									"end": 11574,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11566,
									"end": 11654,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 11673,
									"end": 11677,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 11670,
									"end": 11671,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 11663,
									"end": 11678,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 11697,
									"end": 11701,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 11694,
									"end": 11695,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11687,
									"end": 11702,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 11714,
									"end": 11905,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 11714,
									"end": 11905,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11754,
									"end": 11757,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11773,
									"end": 11793,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "236"
								},
								{
									"begin": 11791,
									"end": 11792,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11773,
									"end": 11793,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 11773,
									"end": 11793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11773,
									"end": 11793,
									"name": "tag",
									"source": 9,
									"value": "236"
								},
								{
									"begin": 11773,
									"end": 11793,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11768,
									"end": 11793,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11768,
									"end": 11793,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11807,
									"end": 11827,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "237"
								},
								{
									"begin": 11825,
									"end": 11826,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11807,
									"end": 11827,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 11807,
									"end": 11827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11807,
									"end": 11827,
									"name": "tag",
									"source": 9,
									"value": "237"
								},
								{
									"begin": 11807,
									"end": 11827,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11802,
									"end": 11827,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11802,
									"end": 11827,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11850,
									"end": 11851,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11847,
									"end": 11848,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11843,
									"end": 11852,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 11836,
									"end": 11852,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11836,
									"end": 11852,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11871,
									"end": 11874,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 11868,
									"end": 11869,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11865,
									"end": 11875,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 11862,
									"end": 11898,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11862,
									"end": 11898,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "238"
								},
								{
									"begin": 11862,
									"end": 11898,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11878,
									"end": 11896,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "239"
								},
								{
									"begin": 11878,
									"end": 11896,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 11878,
									"end": 11896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11878,
									"end": 11896,
									"name": "tag",
									"source": 9,
									"value": "239"
								},
								{
									"begin": 11878,
									"end": 11896,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11862,
									"end": 11898,
									"name": "tag",
									"source": 9,
									"value": "238"
								},
								{
									"begin": 11862,
									"end": 11898,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11714,
									"end": 11905,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11714,
									"end": 11905,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11714,
									"end": 11905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11714,
									"end": 11905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11714,
									"end": 11905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11911,
									"end": 12133,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 11911,
									"end": 12133,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12004,
									"end": 12008,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12042,
									"end": 12044,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 12031,
									"end": 12040,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12027,
									"end": 12045,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12019,
									"end": 12045,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12019,
									"end": 12045,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12055,
									"end": 12126,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "241"
								},
								{
									"begin": 12123,
									"end": 12124,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12112,
									"end": 12121,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12108,
									"end": 12125,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12099,
									"end": 12105,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12055,
									"end": 12126,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 12055,
									"end": 12126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12055,
									"end": 12126,
									"name": "tag",
									"source": 9,
									"value": "241"
								},
								{
									"begin": 12055,
									"end": 12126,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11911,
									"end": 12133,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11911,
									"end": 12133,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11911,
									"end": 12133,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11911,
									"end": 12133,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11911,
									"end": 12133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12139,
									"end": 12516,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 12139,
									"end": 12516,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12227,
									"end": 12230,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12255,
									"end": 12294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "243"
								},
								{
									"begin": 12288,
									"end": 12293,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12255,
									"end": 12294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 12255,
									"end": 12294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12255,
									"end": 12294,
									"name": "tag",
									"source": 9,
									"value": "243"
								},
								{
									"begin": 12255,
									"end": 12294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12310,
									"end": 12381,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "244"
								},
								{
									"begin": 12374,
									"end": 12380,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12369,
									"end": 12372,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 12310,
									"end": 12381,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 12310,
									"end": 12381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12310,
									"end": 12381,
									"name": "tag",
									"source": 9,
									"value": "244"
								},
								{
									"begin": 12310,
									"end": 12381,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12303,
									"end": 12381,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 12303,
									"end": 12381,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12390,
									"end": 12455,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "245"
								},
								{
									"begin": 12448,
									"end": 12454,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12443,
									"end": 12446,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 12436,
									"end": 12440,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 12429,
									"end": 12434,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 12425,
									"end": 12441,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12390,
									"end": 12455,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 12390,
									"end": 12455,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12390,
									"end": 12455,
									"name": "tag",
									"source": 9,
									"value": "245"
								},
								{
									"begin": 12390,
									"end": 12455,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12480,
									"end": 12509,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "246"
								},
								{
									"begin": 12502,
									"end": 12508,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12480,
									"end": 12509,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 12480,
									"end": 12509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12480,
									"end": 12509,
									"name": "tag",
									"source": 9,
									"value": "246"
								},
								{
									"begin": 12480,
									"end": 12509,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12475,
									"end": 12478,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12471,
									"end": 12510,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12464,
									"end": 12510,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12464,
									"end": 12510,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12231,
									"end": 12516,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12139,
									"end": 12516,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12139,
									"end": 12516,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12139,
									"end": 12516,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12139,
									"end": 12516,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12139,
									"end": 12516,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12522,
									"end": 12835,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 12522,
									"end": 12835,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12635,
									"end": 12639,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12673,
									"end": 12675,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 12662,
									"end": 12671,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12658,
									"end": 12676,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12650,
									"end": 12676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12650,
									"end": 12676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12722,
									"end": 12731,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12716,
									"end": 12720,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12712,
									"end": 12732,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 12708,
									"end": 12709,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12697,
									"end": 12706,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12693,
									"end": 12710,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12686,
									"end": 12733,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 12750,
									"end": 12828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "248"
								},
								{
									"begin": 12823,
									"end": 12827,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12814,
									"end": 12820,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12750,
									"end": 12828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 12750,
									"end": 12828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12750,
									"end": 12828,
									"name": "tag",
									"source": 9,
									"value": "248"
								},
								{
									"begin": 12750,
									"end": 12828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12742,
									"end": 12828,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12742,
									"end": 12828,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12522,
									"end": 12835,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12522,
									"end": 12835,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12522,
									"end": 12835,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12522,
									"end": 12835,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12522,
									"end": 12835,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12841,
									"end": 12939,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 12841,
									"end": 12939,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12892,
									"end": 12898,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12926,
									"end": 12931,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12920,
									"end": 12932,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 12910,
									"end": 12932,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12910,
									"end": 12932,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12841,
									"end": 12939,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12841,
									"end": 12939,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12841,
									"end": 12939,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12841,
									"end": 12939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12945,
									"end": 13061,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 12945,
									"end": 13061,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12996,
									"end": 13000,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13019,
									"end": 13022,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 13011,
									"end": 13022,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13011,
									"end": 13022,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13049,
									"end": 13053,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 13044,
									"end": 13047,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13040,
									"end": 13054,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13032,
									"end": 13054,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13032,
									"end": 13054,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12945,
									"end": 13061,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12945,
									"end": 13061,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12945,
									"end": 13061,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12945,
									"end": 13061,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13067,
									"end": 13221,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 13067,
									"end": 13221,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13110,
									"end": 13121,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13146,
									"end": 13175,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "252"
								},
								{
									"begin": 13170,
									"end": 13173,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13164,
									"end": 13174,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 13146,
									"end": 13175,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 13146,
									"end": 13175,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13146,
									"end": 13175,
									"name": "tag",
									"source": 9,
									"value": "252"
								},
								{
									"begin": 13146,
									"end": 13175,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13209,
									"end": 13214,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 13185,
									"end": 13214,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 13185,
									"end": 13214,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13122,
									"end": 13221,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13067,
									"end": 13221,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 13067,
									"end": 13221,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13067,
									"end": 13221,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13067,
									"end": 13221,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13227,
									"end": 13821,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 13227,
									"end": 13821,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13311,
									"end": 13316,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13342,
									"end": 13380,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "254"
								},
								{
									"begin": 13374,
									"end": 13379,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13342,
									"end": 13380,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 13342,
									"end": 13380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13342,
									"end": 13380,
									"name": "tag",
									"source": 9,
									"value": "254"
								},
								{
									"begin": 13342,
									"end": 13380,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13405,
									"end": 13410,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13432,
									"end": 13472,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "255"
								},
								{
									"begin": 13466,
									"end": 13471,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 13432,
									"end": 13472,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 13432,
									"end": 13472,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13432,
									"end": 13472,
									"name": "tag",
									"source": 9,
									"value": "255"
								},
								{
									"begin": 13432,
									"end": 13472,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13420,
									"end": 13472,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13420,
									"end": 13472,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13491,
									"end": 13526,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "256"
								},
								{
									"begin": 13517,
									"end": 13525,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 13491,
									"end": 13526,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 13491,
									"end": 13526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13491,
									"end": 13526,
									"name": "tag",
									"source": 9,
									"value": "256"
								},
								{
									"begin": 13491,
									"end": 13526,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13482,
									"end": 13526,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 13482,
									"end": 13526,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13550,
									"end": 13552,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 13542,
									"end": 13548,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13539,
									"end": 13553,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 13536,
									"end": 13814,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 13536,
									"end": 13814,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "257"
								},
								{
									"begin": 13536,
									"end": 13814,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 13621,
									"end": 13790,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "258"
								},
								{
									"begin": 13706,
									"end": 13772,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13676,
									"end": 13682,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 13672,
									"end": 13674,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 13668,
									"end": 13683,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 13665,
									"end": 13666,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 13661,
									"end": 13684,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 13621,
									"end": 13790,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 13621,
									"end": 13790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13621,
									"end": 13790,
									"name": "tag",
									"source": 9,
									"value": "258"
								},
								{
									"begin": 13621,
									"end": 13790,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13598,
									"end": 13603,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 13577,
									"end": 13804,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 13568,
									"end": 13804,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 13568,
									"end": 13804,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13536,
									"end": 13814,
									"name": "tag",
									"source": 9,
									"value": "257"
								},
								{
									"begin": 13536,
									"end": 13814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13317,
									"end": 13821,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13317,
									"end": 13821,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13227,
									"end": 13821,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 13227,
									"end": 13821,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13227,
									"end": 13821,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13227,
									"end": 13821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "976"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "973"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "970"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "968"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "966"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "964"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "962"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 23593,
									"end": 23792,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a04d872616b4a7d936a58cf02d69cb34601f86d8e97b1fb385a1e93e1402ac5a64736f6c63430008140033",
									".code": [
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "A457C2D7"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "A457C2D7"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "D505ACCF"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "7ECEBE00"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "84B0196E"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "3644E515"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "39509351"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23792,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6664,
											"end": 6764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6664,
											"end": 6764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 9015,
											"end": 9216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 9015,
											"end": 9216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 9015,
											"end": 9216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 7784,
											"end": 7892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 7784,
											"end": 7892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 9796,
											"end": 10091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 9796,
											"end": 10091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 9796,
											"end": 10091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 7626,
											"end": 7719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 7626,
											"end": 7719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 23439,
											"end": 23553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 23439,
											"end": 23553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 10500,
											"end": 10738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 10500,
											"end": 10738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 10500,
											"end": 10738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 7955,
											"end": 8082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 7955,
											"end": 8082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 7955,
											"end": 8082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 23164,
											"end": 23309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 23164,
											"end": 23309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 23164,
											"end": 23309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 5021,
											"end": 5654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5021,
											"end": 5654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 6883,
											"end": 6987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6883,
											"end": 6987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 11241,
											"end": 11677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 11241,
											"end": 11677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 11241,
											"end": 11677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 8288,
											"end": 8481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 8288,
											"end": 8481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 8288,
											"end": 8481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 22402,
											"end": 23098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 22402,
											"end": 23098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 8544,
											"end": 8695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 8544,
											"end": 8695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8544,
											"end": 8695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6718,
											"end": 6731,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6751,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 6744,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 6744,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9098,
											"end": 9102,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9115,
											"end": 9128,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9131,
											"end": 9143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 9131,
											"end": 9141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 9131,
											"end": 9143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9131,
											"end": 9143,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 9131,
											"end": 9143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 9163,
											"end": 9168,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9170,
											"end": 9177,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9179,
											"end": 9185,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 9154,
											"end": 9186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9204,
											"end": 9208,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9197,
											"end": 9208,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9197,
											"end": 9208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9197,
											"end": 9208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7872,
											"end": 7884,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7872,
											"end": 7884,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7865,
											"end": 7884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7865,
											"end": 7884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9927,
											"end": 9931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9944,
											"end": 9959,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9962,
											"end": 9974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 9962,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 9962,
											"end": 9974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9962,
											"end": 9974,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 9962,
											"end": 9974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 9974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 9974,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 10023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10001,
											"end": 10005,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10014,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10022,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 9985,
											"end": 10023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 10023,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9985,
											"end": 10023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10034,
											"end": 10061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 10044,
											"end": 10048,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10050,
											"end": 10052,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10054,
											"end": 10060,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10034,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 10034,
											"end": 10061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10034,
											"end": 10061,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 10034,
											"end": 10061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10079,
											"end": 10083,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10072,
											"end": 10083,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10072,
											"end": 10083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10072,
											"end": 10083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 10091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7684,
											"end": 7689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7709,
											"end": 7711,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 7702,
											"end": 7711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23498,
											"end": 23505,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23525,
											"end": 23545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 23525,
											"end": 23543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 23525,
											"end": 23545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23525,
											"end": 23545,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 23525,
											"end": 23545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23518,
											"end": 23545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23518,
											"end": 23545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10605,
											"end": 10618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10621,
											"end": 10633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 10621,
											"end": 10633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10621,
											"end": 10633,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 10621,
											"end": 10633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10644,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 10653,
											"end": 10658,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10697,
											"end": 10707,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10669,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 10679,
											"end": 10684,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10686,
											"end": 10693,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10669,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 10669,
											"end": 10694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10669,
											"end": 10694,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 10669,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10669,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 10669,
											"end": 10707,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10669,
											"end": 10707,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10669,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 10669,
											"end": 10707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10669,
											"end": 10707,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 10669,
											"end": 10707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10644,
											"end": 10652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 10644,
											"end": 10708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10644,
											"end": 10708,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 10644,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10726,
											"end": 10730,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10719,
											"end": 10730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10719,
											"end": 10730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10719,
											"end": 10730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8029,
											"end": 8036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8065,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8066,
											"end": 8073,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8049,
											"end": 8074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8049,
											"end": 8074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7955,
											"end": 8082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23255,
											"end": 23262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23282,
											"end": 23301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 23295,
											"end": 23300,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23282,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 23282,
											"end": 23301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23282,
											"end": 23301,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 23282,
											"end": 23301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23275,
											"end": 23301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23275,
											"end": 23301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5149,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5181,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5298,
											"end": 5310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5324,
											"end": 5351,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5427,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5454,
											"end": 5467,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5427,
											"end": 5432,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "973"
										},
										{
											"begin": 5427,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5427,
											"end": 5453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5468,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5468,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5468,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5427,
											"end": 5468,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5468,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5427,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5512,
											"end": 5528,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5482,
											"end": 5490,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "976"
										},
										{
											"begin": 5482,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5482,
											"end": 5511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5529,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5482,
											"end": 5529,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5529,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5482,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5556,
											"name": "CHAINID",
											"source": 5
										},
										{
											"begin": 5578,
											"end": 5582,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5606,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5621,
											"end": 5637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "PUSH",
											"source": 5,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6939,
											"end": 6952,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 6965,
											"end": 6979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 6965,
											"end": 6979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11334,
											"end": 11338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11351,
											"end": 11364,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 11367,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 11367,
											"end": 11379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11351,
											"end": 11379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11351,
											"end": 11379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11390,
											"end": 11414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 11427,
											"end": 11432,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11434,
											"end": 11441,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11417,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 11417,
											"end": 11442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11417,
											"end": 11442,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 11417,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11390,
											"end": 11442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11390,
											"end": 11442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11481,
											"end": 11496,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11461,
											"end": 11477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11461,
											"end": 11496,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11461,
											"end": 11496,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 11453,
											"end": 11538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 11453,
											"end": 11538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 11583,
											"end": 11588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11590,
											"end": 11597,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11618,
											"end": 11633,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11599,
											"end": 11615,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11599,
											"end": 11633,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 11574,
											"end": 11634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11634,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 11574,
											"end": 11634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11665,
											"end": 11669,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 11658,
											"end": 11669,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11658,
											"end": 11669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11658,
											"end": 11669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11658,
											"end": 11669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8384,
											"end": 8397,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8400,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 8400,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 8400,
											"end": 8412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8400,
											"end": 8412,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 8400,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8384,
											"end": 8412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8384,
											"end": 8412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8423,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 8433,
											"end": 8438,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 8442,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8444,
											"end": 8450,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8423,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 8423,
											"end": 8451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8423,
											"end": 8451,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 8423,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8469,
											"end": 8473,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8462,
											"end": 8473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8462,
											"end": 8473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8462,
											"end": 8473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22632,
											"end": 22640,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22614,
											"end": 22629,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 22614,
											"end": 22640,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 22610,
											"end": 22709,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22610,
											"end": 22709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 22610,
											"end": 22709,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22688,
											"end": 22696,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "PUSH",
											"source": 8,
											"value": "6279130200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 22664,
											"end": 22697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22664,
											"end": 22697,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22610,
											"end": 22709,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 22610,
											"end": 22709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22721,
											"end": 22739,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21715,
											"end": 21810,
											"name": "PUSH",
											"source": 8,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 22781,
											"end": 22786,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 22788,
											"end": 22795,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 22797,
											"end": 22802,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 22804,
											"end": 22820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 22814,
											"end": 22819,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 22804,
											"end": 22813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 22804,
											"end": 22820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22804,
											"end": 22820,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 22804,
											"end": 22820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22822,
											"end": 22830,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 22752,
											"end": 22831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22752,
											"end": 22831,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22742,
											"end": 22832,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22742,
											"end": 22832,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22742,
											"end": 22832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22742,
											"end": 22832,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22742,
											"end": 22832,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22742,
											"end": 22832,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 22721,
											"end": 22832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22721,
											"end": 22832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22845,
											"end": 22857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22860,
											"end": 22888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 22877,
											"end": 22887,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22860,
											"end": 22876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 22860,
											"end": 22888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22860,
											"end": 22888,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 22860,
											"end": 22888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22845,
											"end": 22888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22845,
											"end": 22888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22901,
											"end": 22915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22918,
											"end": 22946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 22932,
											"end": 22936,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22938,
											"end": 22939,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 22941,
											"end": 22942,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 22944,
											"end": 22945,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 22918,
											"end": 22931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 22918,
											"end": 22946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22918,
											"end": 22946,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 22918,
											"end": 22946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22901,
											"end": 22946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22901,
											"end": 22946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22971,
											"end": 22976,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 22961,
											"end": 22976,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22961,
											"end": 22976,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22961,
											"end": 22967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22961,
											"end": 22976,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22961,
											"end": 22976,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22961,
											"end": 22976,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 22957,
											"end": 23047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 22957,
											"end": 23047,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23029,
											"end": 23034,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "PUSH",
											"source": 8,
											"value": "4B800E4600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 23000,
											"end": 23035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23035,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22957,
											"end": 23047,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 22957,
											"end": 23047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23059,
											"end": 23090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 23068,
											"end": 23073,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 23075,
											"end": 23082,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 23084,
											"end": 23089,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 23059,
											"end": 23067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 23059,
											"end": 23090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23059,
											"end": 23090,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 23059,
											"end": 23090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22599,
											"end": 23098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22599,
											"end": 23098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22599,
											"end": 23098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22402,
											"end": 23098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8633,
											"end": 8640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8660,
											"end": 8671,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8672,
											"end": 8677,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8679,
											"end": 8686,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8653,
											"end": 8687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8653,
											"end": 8687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 683,
											"end": 781,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 683,
											"end": 781,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 736,
											"end": 743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 773,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 756,
											"end": 773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 756,
											"end": 773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 683,
											"end": 781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15268,
											"end": 15648,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 15268,
											"end": 15648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15421,
											"end": 15422,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15404,
											"end": 15423,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15404,
											"end": 15423,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15404,
											"end": 15409,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15404,
											"end": 15423,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15404,
											"end": 15423,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15404,
											"end": 15423,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 15396,
											"end": 15464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 15396,
											"end": 15464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15502,
											"end": 15503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15483,
											"end": 15504,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15483,
											"end": 15504,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15504,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15483,
											"end": 15504,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15504,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 15475,
											"end": 15543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 15475,
											"end": 15543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15586,
											"end": 15592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15567,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15568,
											"end": 15573,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15575,
											"end": 15582,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15556,
											"end": 15583,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15592,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 15556,
											"end": 15592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15624,
											"end": 15631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15617,
											"end": 15622,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "PUSH",
											"source": 8,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15633,
											"end": 15639,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 15608,
											"end": 15640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15640,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 15268,
											"end": 15648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15268,
											"end": 15648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15268,
											"end": 15648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15268,
											"end": 15648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15939,
											"end": 16392,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 15939,
											"end": 16392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16074,
											"end": 16098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16101,
											"end": 16126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 16111,
											"end": 16116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16118,
											"end": 16125,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16101,
											"end": 16110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 16101,
											"end": 16126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16101,
											"end": 16126,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 16101,
											"end": 16126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16074,
											"end": 16126,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16074,
											"end": 16126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16161,
											"end": 16178,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16141,
											"end": 16157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16141,
											"end": 16178,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 16137,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 16137,
											"end": 16385,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16223,
											"end": 16229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16203,
											"end": 16219,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16203,
											"end": 16229,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16203,
											"end": 16229,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 16195,
											"end": 16263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 16195,
											"end": 16263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 16316,
											"end": 16321,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16323,
											"end": 16330,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16351,
											"end": 16357,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16332,
											"end": 16348,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16332,
											"end": 16357,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 16307,
											"end": 16358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16358,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 16307,
											"end": 16358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16137,
											"end": 16385,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 16137,
											"end": 16385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16063,
											"end": 16392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15939,
											"end": 16392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15939,
											"end": 16392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15939,
											"end": 16392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15939,
											"end": 16392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12147,
											"end": 12987,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 12147,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12294,
											"end": 12295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12278,
											"end": 12296,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12278,
											"end": 12296,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12278,
											"end": 12282,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12278,
											"end": 12296,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12278,
											"end": 12296,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12278,
											"end": 12296,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 12270,
											"end": 12338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 12270,
											"end": 12338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12371,
											"end": 12372,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12357,
											"end": 12373,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12357,
											"end": 12373,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12357,
											"end": 12359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12357,
											"end": 12373,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12357,
											"end": 12373,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12357,
											"end": 12373,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 12349,
											"end": 12413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 12349,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12426,
											"end": 12464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 12447,
											"end": 12451,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12453,
											"end": 12455,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12457,
											"end": 12463,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12426,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 12426,
											"end": 12464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12426,
											"end": 12464,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 12426,
											"end": 12464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12477,
											"end": 12496,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12499,
											"end": 12508,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12509,
											"end": 12513,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12514,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12477,
											"end": 12514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12477,
											"end": 12514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12548,
											"end": 12554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12544,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 12525,
											"end": 12597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 12525,
											"end": 12597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12671,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12651,
											"end": 12662,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12651,
											"end": 12671,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12642,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12643,
											"end": 12647,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12633,
											"end": 12648,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12671,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12671,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12868,
											"end": 12874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12861,
											"end": 12863,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12851,
											"end": 12874,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12874,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12874,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12874,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12874,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12874,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12851,
											"end": 12874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12918,
											"end": 12920,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12912,
											"end": 12916,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12922,
											"end": 12928,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 12903,
											"end": 12929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12903,
											"end": 12929,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 12942,
											"end": 12979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 12962,
											"end": 12966,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 12970,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12972,
											"end": 12978,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12942,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 12942,
											"end": 12979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12942,
											"end": 12979,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 12942,
											"end": 12979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12259,
											"end": 12987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12147,
											"end": 12987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12147,
											"end": 12987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12147,
											"end": 12987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12147,
											"end": 12987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3957,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3695,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3799,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "966"
										},
										{
											"begin": 3771,
											"end": 3799,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 3799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3779,
											"end": 3783,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3799,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 3799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3799,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3834,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3771,
											"end": 3834,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3834,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "964"
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "CHAINID",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3834,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3834,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3771,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3951,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3767,
											"end": 3951,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 3879,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "962"
										},
										{
											"begin": 3850,
											"end": 3879,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3850,
											"end": 3879,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3951,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3767,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3917,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3917,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3917,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3917,
											"end": 3940,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3917,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3910,
											"end": 3940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3910,
											"end": 3940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3957,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3695,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 20508,
											"end": 20617,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 20508,
											"end": 20617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20568,
											"end": 20575,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20595,
											"end": 20602,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20603,
											"end": 20608,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 20595,
											"end": 20609,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 20588,
											"end": 20609,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20588,
											"end": 20609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20508,
											"end": 20617,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20508,
											"end": 20617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20508,
											"end": 20617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20508,
											"end": 20617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3635,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3367,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1371,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3537,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3486,
											"end": 3629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3569,
											"end": 3574,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3560,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3575,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3560,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 3553,
											"end": 3575,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3629,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3486,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3606,
											"end": 3618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3606,
											"end": 3618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3635,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 3367,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20738,
											"end": 21140,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 20738,
											"end": 21140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20798,
											"end": 20805,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21105,
											"end": 21112,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21113,
											"end": 21118,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21105,
											"end": 21121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21121,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21121,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21121,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21121,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 21105,
											"end": 21121,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21121,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 21098,
											"end": 21121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21098,
											"end": 21121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20738,
											"end": 21140,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20738,
											"end": 21140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20738,
											"end": 21140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20738,
											"end": 21140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4768,
											"end": 4933,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4768,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4871,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 4893,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4893,
											"end": 4913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4913,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4893,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4915,
											"end": 4925,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4871,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4926,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 4871,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4933,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6830,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 6598,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6683,
											"end": 6690,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6703,
											"end": 6720,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6722,
											"end": 6740,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6761,
											"end": 6762,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 6765,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6767,
											"end": 6768,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 6744,
											"end": 6769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6769,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 6744,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6702,
											"end": 6769,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6702,
											"end": 6769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6702,
											"end": 6769,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6702,
											"end": 6769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 6791,
											"end": 6796,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 6779,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6797,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 6779,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6814,
											"end": 6823,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6807,
											"end": 6823,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6807,
											"end": 6823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6807,
											"end": 6823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6807,
											"end": 6823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6830,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6830,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16992,
											"end": 17117,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 16992,
											"end": 17117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16992,
											"end": 17117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16992,
											"end": 17117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16992,
											"end": 17117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16992,
											"end": 17117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17721,
											"end": 17845,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 17721,
											"end": 17845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17721,
											"end": 17845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17721,
											"end": 17845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17721,
											"end": 17845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17721,
											"end": 17845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4143,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3963,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 2024,
											"name": "PUSH",
											"source": 5,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 4077,
											"end": 4088,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "968"
										},
										{
											"begin": 4090,
											"end": 4104,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "970"
										},
										{
											"begin": 4106,
											"end": 4119,
											"name": "CHAINID",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 4054,
											"end": 4135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4136,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4136,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4136,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 4136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 4136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3963,
											"end": 4143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3963,
											"end": 4143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2464,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2059,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2143,
											"end": 2154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2168,
											"end": 2172,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2157,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2281,
											"end": 2295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2386,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2427,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2411,
											"end": 2414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2454,
											"end": 2457,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8733,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8336,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8429,
											"end": 8441,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8536,
											"end": 8540,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8530,
											"end": 8541,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8566,
											"end": 8576,
											"name": "PUSH",
											"source": 4,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8561,
											"end": 8564,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8554,
											"end": 8577,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8613,
											"end": 8628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8601,
											"end": 8604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8611,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8665,
											"end": 8675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8658,
											"end": 8662,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 8653,
											"end": 8656,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8649,
											"end": 8663,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8676,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8712,
											"end": 8716,
											"name": "PUSH",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 8707,
											"end": 8710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8697,
											"end": 8717,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8689,
											"end": 8717,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8689,
											"end": 8717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8727,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8733,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8733,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5118,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6087,
											"name": "PUSH",
											"source": 4,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6016,
											"end": 6017,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6018,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6087,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6119,
											"end": 6120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6153,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6259,
											"end": 6273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6286,
											"end": 6290,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6293,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6296,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6298,
											"end": 6299,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 6276,
											"end": 6300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6259,
											"end": 6300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6259,
											"end": 6300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6332,
											"end": 6333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6366,
											"end": 6367,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6399,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6437,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 647,
											"end": 667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 638,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 638,
											"end": 643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 638,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 638,
											"end": 667,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 634,
											"end": 1075,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 683,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 634,
											"end": 1075,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 743,
											"end": 772,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 734,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 734,
											"end": 739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 734,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 734,
											"end": 772,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 788,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 788,
											"end": 822,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 852,
											"end": 887,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 843,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 843,
											"end": 848,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 843,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 843,
											"end": 887,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 903,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 944,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 974,
											"end": 1004,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 965,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 965,
											"end": 970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 965,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 1020,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 570,
											"end": 1081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 2781,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2536,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2616,
											"end": 2630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2673,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2666,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2698,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2683,
											"end": 2752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "PUSH",
											"source": 1,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2683,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 5041,
											"end": 5046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 5023,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5048,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5270,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5257,
											"end": 5274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5254,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 5204,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5398,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5375,
											"end": 5382,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5371,
											"end": 5394,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5367,
											"end": 5399,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5402,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 5592,
											"end": 5599,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 5547,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5493,
											"end": 5610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5659,
											"end": 5666,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5765,
											"name": "PUSH",
											"source": 9,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5692,
											"end": 5697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 5880,
											"end": 5885,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 5863,
											"end": 5886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5858,
											"end": 5861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5887,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 5893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6004,
											"end": 6009,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 5986,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 5984,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6090,
											"end": 6096,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6242,
											"end": 6253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6271,
											"end": 6274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6307,
											"end": 6321,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6458,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6333,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6566,
											"end": 6571,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 6548,
											"end": 6572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6543,
											"end": 6546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6536,
											"end": 6573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6471,
											"end": 6579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6654,
											"end": 6664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 6717,
											"end": 6720,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 6675,
											"end": 6721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6744,
											"end": 6758,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6585,
											"end": 6764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6876,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6867,
											"end": 6870,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6863,
											"end": 6877,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7038,
											"end": 7041,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 7067,
											"end": 7121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 7216,
											"end": 7222,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7214,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7137,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 7297,
											"end": 7302,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 7247,
											"end": 7303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7326,
											"end": 7333,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7373,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7361,
											"end": 7374,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7443,
											"end": 7449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7437,
											"end": 7450,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 7529,
											"end": 7532,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7514,
											"end": 7527,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 7470,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 7556,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7402,
											"end": 7626,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7346,
											"end": 7360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7642,
											"end": 7645,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6919,
											"end": 7651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8010,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8047,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8033,
											"end": 8042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8029,
											"end": 8048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 8124,
											"end": 8125,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8122,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8109,
											"end": 8126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8100,
											"end": 8106,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 8058,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8184,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8137,
											"end": 8185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 8275,
											"end": 8279,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8266,
											"end": 8272,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 8202,
											"end": 8280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8317,
											"end": 8337,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8314,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8301,
											"end": 8310,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8297,
											"end": 8315,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8290,
											"end": 8338,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 8428,
											"end": 8432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 8355,
											"end": 8433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8500,
											"end": 8509,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8496,
											"end": 8514,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8487,
											"end": 8493,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 8443,
											"end": 8515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 8593,
											"end": 8596,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8582,
											"end": 8591,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 8525,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 8676,
											"end": 8679,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8665,
											"end": 8674,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8661,
											"end": 8680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8658,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 8608,
											"end": 8681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8738,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8723,
											"end": 8727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 8739,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8713,
											"end": 8716,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 8702,
											"end": 8711,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 8717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8691,
											"end": 8740,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8851,
											"end": 8857,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 8757,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 8872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8996,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 8878,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8949,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 8965,
											"end": 8970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8949,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 8949,
											"end": 8971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8949,
											"end": 8971,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 8949,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 8947,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8939,
											"end": 8972,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 8929,
											"end": 8990,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 8987,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 8984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8976,
											"end": 8988,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8990,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 8929,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9002,
											"end": 9137,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 9002,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9071,
											"end": 9091,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9062,
											"end": 9091,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9062,
											"end": 9091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9100,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 9125,
											"end": 9130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9100,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 9100,
											"end": 9131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9100,
											"end": 9131,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 9100,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9002,
											"end": 9137,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9002,
											"end": 9137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9002,
											"end": 9137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9002,
											"end": 9137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9002,
											"end": 9137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9265,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 9143,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9216,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 9234,
											"end": 9239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9216,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 9216,
											"end": 9240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9216,
											"end": 9240,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 9216,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9209,
											"end": 9214,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 9196,
											"end": 9259,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9256,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9252,
											"end": 9253,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9245,
											"end": 9257,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9259,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 9196,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9317,
											"end": 9322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9355,
											"end": 9361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9342,
											"end": 9362,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9333,
											"end": 9362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9333,
											"end": 9362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 9398,
											"end": 9403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 9371,
											"end": 9404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9271,
											"end": 9410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9527,
											"end": 9533,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9535,
											"end": 9541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9543,
											"end": 9549,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9551,
											"end": 9557,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9559,
											"end": 9565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9567,
											"end": 9573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9581,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9627,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 9612,
											"end": 9621,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9603,
											"end": 9610,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9599,
											"end": 9622,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9628,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9592,
											"end": 9712,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9592,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 9592,
											"end": 9712,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9631,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 9631,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 9631,
											"end": 9710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9631,
											"end": 9710,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 9631,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9592,
											"end": 9712,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 9592,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9751,
											"end": 9752,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 9821,
											"end": 9828,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9812,
											"end": 9818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9810,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 9797,
											"end": 9819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9776,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 9776,
											"end": 9829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9776,
											"end": 9829,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 9776,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9766,
											"end": 9829,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 9766,
											"end": 9829,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9839,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 9880,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9904,
											"end": 9957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 9949,
											"end": 9956,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9940,
											"end": 9946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9929,
											"end": 9938,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 9925,
											"end": 9947,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9904,
											"end": 9957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 9904,
											"end": 9957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9904,
											"end": 9957,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 9904,
											"end": 9957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9894,
											"end": 9957,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 9894,
											"end": 9957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9849,
											"end": 9967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10006,
											"end": 10008,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10032,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 10077,
											"end": 10084,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 10068,
											"end": 10074,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10057,
											"end": 10066,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 10053,
											"end": 10075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10032,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 10032,
											"end": 10085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10032,
											"end": 10085,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 10032,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10085,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10136,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10160,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 10205,
											"end": 10212,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 10181,
											"end": 10203,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10160,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 10160,
											"end": 10213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10160,
											"end": 10213,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 10160,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10150,
											"end": 10213,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 10150,
											"end": 10213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10105,
											"end": 10223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10262,
											"end": 10265,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 10289,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 10332,
											"end": 10339,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 10323,
											"end": 10329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10312,
											"end": 10321,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 10308,
											"end": 10330,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10289,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 10289,
											"end": 10340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10289,
											"end": 10340,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 10289,
											"end": 10340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10279,
											"end": 10340,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10279,
											"end": 10340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10233,
											"end": 10350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10389,
											"end": 10392,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 10416,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 10461,
											"end": 10468,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 10452,
											"end": 10458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10441,
											"end": 10450,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 10437,
											"end": 10459,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 10416,
											"end": 10469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10469,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 10416,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10406,
											"end": 10469,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10406,
											"end": 10469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10360,
											"end": 10479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10518,
											"end": 10521,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 10545,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 10590,
											"end": 10597,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 10581,
											"end": 10587,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10579,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 10566,
											"end": 10588,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 10545,
											"end": 10598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 10598,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 10545,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10535,
											"end": 10598,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10535,
											"end": 10598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10489,
											"end": 10608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 10615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10697,
											"end": 10703,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10748,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10734,
											"end": 10743,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10725,
											"end": 10732,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10721,
											"end": 10744,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10717,
											"end": 10749,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10714,
											"end": 10833,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10714,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 10714,
											"end": 10833,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10752,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 10752,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 10752,
											"end": 10831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10752,
											"end": 10831,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 10752,
											"end": 10831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10714,
											"end": 10833,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 10714,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10872,
											"end": 10873,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10897,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 10942,
											"end": 10949,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10933,
											"end": 10939,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10922,
											"end": 10931,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10940,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10897,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 10897,
											"end": 10950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10897,
											"end": 10950,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 10897,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10887,
											"end": 10950,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10887,
											"end": 10950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10843,
											"end": 10960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10999,
											"end": 11001,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11025,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 11070,
											"end": 11077,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11061,
											"end": 11067,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11059,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11046,
											"end": 11068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11025,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 11025,
											"end": 11078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11025,
											"end": 11078,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 11025,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11015,
											"end": 11078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11015,
											"end": 11078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10621,
											"end": 11095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11101,
											"end": 11281,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 11101,
											"end": 11281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11226,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11146,
											"end": 11147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11139,
											"end": 11227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11250,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 11243,
											"end": 11244,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11236,
											"end": 11251,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11270,
											"end": 11274,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11267,
											"end": 11268,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11287,
											"end": 11607,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 11287,
											"end": 11607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11331,
											"end": 11337,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11368,
											"end": 11369,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11362,
											"end": 11366,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11358,
											"end": 11370,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11370,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11415,
											"end": 11416,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11409,
											"end": 11413,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11405,
											"end": 11417,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11436,
											"end": 11454,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11426,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 11426,
											"end": 11507,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11492,
											"end": 11496,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 11484,
											"end": 11490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11497,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11470,
											"end": 11497,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11470,
											"end": 11497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11426,
											"end": 11507,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 11426,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11554,
											"end": 11556,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11546,
											"end": 11552,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11543,
											"end": 11557,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11520,
											"end": 11558,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11517,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 11517,
											"end": 11601,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 11573,
											"end": 11591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 11573,
											"end": 11591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11591,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 11573,
											"end": 11591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11517,
											"end": 11601,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 11517,
											"end": 11601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11338,
											"end": 11607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11287,
											"end": 11607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11287,
											"end": 11607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11287,
											"end": 11607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11287,
											"end": 11607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11613,
											"end": 11793,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 11613,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11661,
											"end": 11738,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11658,
											"end": 11659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11651,
											"end": 11739,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11758,
											"end": 11762,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 11755,
											"end": 11756,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11748,
											"end": 11763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11782,
											"end": 11786,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11779,
											"end": 11780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11772,
											"end": 11787,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11990,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 11799,
											"end": 11990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11839,
											"end": 11842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11858,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 11876,
											"end": 11877,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11858,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 11858,
											"end": 11878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11858,
											"end": 11878,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 11858,
											"end": 11878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11853,
											"end": 11878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11853,
											"end": 11878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11892,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 11910,
											"end": 11911,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11892,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 11892,
											"end": 11912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11892,
											"end": 11912,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 11892,
											"end": 11912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11887,
											"end": 11912,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11887,
											"end": 11912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11935,
											"end": 11936,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11932,
											"end": 11933,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11928,
											"end": 11937,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11921,
											"end": 11937,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11921,
											"end": 11937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11956,
											"end": 11959,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11953,
											"end": 11954,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11950,
											"end": 11960,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11947,
											"end": 11983,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11947,
											"end": 11983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 11947,
											"end": 11983,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11963,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 11963,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 11963,
											"end": 11981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11963,
											"end": 11981,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 11963,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11947,
											"end": 11983,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 11947,
											"end": 11983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11990,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11990,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11990,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11990,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11996,
											"end": 12176,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 11996,
											"end": 12176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12044,
											"end": 12121,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12041,
											"end": 12042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12034,
											"end": 12122,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12141,
											"end": 12145,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 12138,
											"end": 12139,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12131,
											"end": 12146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12165,
											"end": 12169,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12162,
											"end": 12163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12155,
											"end": 12170,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12182,
											"end": 12406,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 12182,
											"end": 12406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12322,
											"end": 12356,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 12318,
											"end": 12319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12310,
											"end": 12316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12320,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12357,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12391,
											"end": 12398,
											"name": "PUSH",
											"source": 9,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12386,
											"end": 12388,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12378,
											"end": 12384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12374,
											"end": 12389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12367,
											"end": 12399,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12182,
											"end": 12406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12182,
											"end": 12406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12412,
											"end": 12778,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 12412,
											"end": 12778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12554,
											"end": 12557,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12575,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 12639,
											"end": 12641,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 12634,
											"end": 12637,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12575,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 12575,
											"end": 12642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12575,
											"end": 12642,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 12575,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12568,
											"end": 12642,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12568,
											"end": 12642,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12651,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 12740,
											"end": 12743,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12651,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 12651,
											"end": 12744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12651,
											"end": 12744,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 12651,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12769,
											"end": 12771,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12764,
											"end": 12767,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12772,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12753,
											"end": 12772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12753,
											"end": 12772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12412,
											"end": 12778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12412,
											"end": 12778,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12412,
											"end": 12778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12412,
											"end": 12778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12784,
											"end": 13203,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 12784,
											"end": 13203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12950,
											"end": 12954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12988,
											"end": 12990,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12977,
											"end": 12986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12973,
											"end": 12991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12965,
											"end": 12991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12965,
											"end": 12991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13037,
											"end": 13046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13031,
											"end": 13035,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13027,
											"end": 13047,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13023,
											"end": 13024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13012,
											"end": 13021,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13008,
											"end": 13025,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13001,
											"end": 13048,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 13191,
											"end": 13195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 13065,
											"end": 13196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13196,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 13065,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13057,
											"end": 13196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13057,
											"end": 13196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12784,
											"end": 13203,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12784,
											"end": 13203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12784,
											"end": 13203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12784,
											"end": 13203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13984,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 13209,
											"end": 13984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13442,
											"end": 13446,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13480,
											"end": 13483,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 13469,
											"end": 13478,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13465,
											"end": 13484,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13457,
											"end": 13484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13457,
											"end": 13484,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13494,
											"end": 13565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 13562,
											"end": 13563,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13551,
											"end": 13560,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13564,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13538,
											"end": 13544,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 13494,
											"end": 13565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 13494,
											"end": 13565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13494,
											"end": 13565,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 13494,
											"end": 13565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13575,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 13643,
											"end": 13645,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13632,
											"end": 13641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13628,
											"end": 13646,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13619,
											"end": 13625,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13575,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 13575,
											"end": 13647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13575,
											"end": 13647,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 13575,
											"end": 13647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 13725,
											"end": 13727,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13714,
											"end": 13723,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13710,
											"end": 13728,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13707,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 13657,
											"end": 13729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13729,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 13657,
											"end": 13729,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13739,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 13807,
											"end": 13809,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13796,
											"end": 13805,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13792,
											"end": 13810,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13783,
											"end": 13789,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13739,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 13739,
											"end": 13811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13739,
											"end": 13811,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 13739,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13821,
											"end": 13894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 13889,
											"end": 13892,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 13878,
											"end": 13887,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13874,
											"end": 13893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13865,
											"end": 13871,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13821,
											"end": 13894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 13821,
											"end": 13894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13821,
											"end": 13894,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 13821,
											"end": 13894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13904,
											"end": 13977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 13972,
											"end": 13975,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 13961,
											"end": 13970,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13957,
											"end": 13976,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13948,
											"end": 13954,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13904,
											"end": 13977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 13904,
											"end": 13977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13904,
											"end": 13977,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 13904,
											"end": 13977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13984,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13984,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14322,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 13990,
											"end": 14322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14111,
											"end": 14115,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14149,
											"end": 14151,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14138,
											"end": 14147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14126,
											"end": 14152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14126,
											"end": 14152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14162,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 14230,
											"end": 14231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14219,
											"end": 14228,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14215,
											"end": 14232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14206,
											"end": 14212,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14162,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 14162,
											"end": 14233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14162,
											"end": 14233,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 14162,
											"end": 14233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14243,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 14311,
											"end": 14313,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14300,
											"end": 14309,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14296,
											"end": 14314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14287,
											"end": 14293,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14243,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 14243,
											"end": 14315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14243,
											"end": 14315,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 14243,
											"end": 14315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14322,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14322,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14328,
											"end": 14551,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 14328,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14468,
											"end": 14502,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 14464,
											"end": 14465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14456,
											"end": 14462,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14452,
											"end": 14466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14503,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14537,
											"end": 14543,
											"name": "PUSH",
											"source": 9,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14532,
											"end": 14534,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14524,
											"end": 14530,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14520,
											"end": 14535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14513,
											"end": 14544,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14328,
											"end": 14551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14328,
											"end": 14551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14557,
											"end": 14923,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 14557,
											"end": 14923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14699,
											"end": 14702,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14720,
											"end": 14787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 14784,
											"end": 14786,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14779,
											"end": 14782,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14720,
											"end": 14787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 14720,
											"end": 14787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14720,
											"end": 14787,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 14720,
											"end": 14787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14713,
											"end": 14787,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14713,
											"end": 14787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14796,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 14885,
											"end": 14888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14796,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 14796,
											"end": 14889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14796,
											"end": 14889,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 14796,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14914,
											"end": 14916,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14909,
											"end": 14912,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14905,
											"end": 14917,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14898,
											"end": 14917,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14898,
											"end": 14917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14557,
											"end": 14923,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14557,
											"end": 14923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14557,
											"end": 14923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14557,
											"end": 14923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14929,
											"end": 15348,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 14929,
											"end": 15348,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15095,
											"end": 15099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15133,
											"end": 15135,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15122,
											"end": 15131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15110,
											"end": 15136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15110,
											"end": 15136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15182,
											"end": 15191,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15176,
											"end": 15180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15172,
											"end": 15192,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15168,
											"end": 15169,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15157,
											"end": 15166,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15153,
											"end": 15170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15146,
											"end": 15193,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 15336,
											"end": 15340,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 15210,
											"end": 15341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15341,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 15210,
											"end": 15341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15202,
											"end": 15341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15202,
											"end": 15341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14929,
											"end": 15348,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14929,
											"end": 15348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14929,
											"end": 15348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14929,
											"end": 15348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15354,
											"end": 15575,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 15354,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15494,
											"end": 15528,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 15490,
											"end": 15491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15482,
											"end": 15488,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15478,
											"end": 15492,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15471,
											"end": 15529,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15563,
											"end": 15567,
											"name": "PUSH",
											"source": 9,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15558,
											"end": 15560,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15550,
											"end": 15556,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15546,
											"end": 15561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15539,
											"end": 15568,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15354,
											"end": 15575,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15354,
											"end": 15575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15581,
											"end": 15947,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 15581,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15723,
											"end": 15726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15744,
											"end": 15811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 15808,
											"end": 15810,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 15803,
											"end": 15806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15744,
											"end": 15811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 15744,
											"end": 15811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15744,
											"end": 15811,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 15744,
											"end": 15811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15737,
											"end": 15811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15737,
											"end": 15811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15820,
											"end": 15913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 15909,
											"end": 15912,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15820,
											"end": 15913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 15820,
											"end": 15913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15820,
											"end": 15913,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 15820,
											"end": 15913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15938,
											"end": 15940,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15933,
											"end": 15936,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15929,
											"end": 15941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15922,
											"end": 15941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15922,
											"end": 15941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15581,
											"end": 15947,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15581,
											"end": 15947,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15581,
											"end": 15947,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15581,
											"end": 15947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15953,
											"end": 16372,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 15953,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16119,
											"end": 16123,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16157,
											"end": 16159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16142,
											"end": 16160,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16134,
											"end": 16160,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16134,
											"end": 16160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16206,
											"end": 16215,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16200,
											"end": 16204,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16196,
											"end": 16216,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16192,
											"end": 16193,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16181,
											"end": 16190,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16170,
											"end": 16217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16234,
											"end": 16365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 16360,
											"end": 16364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16234,
											"end": 16365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 16234,
											"end": 16365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16234,
											"end": 16365,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 16234,
											"end": 16365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 16365,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 16365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15953,
											"end": 16372,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15953,
											"end": 16372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15953,
											"end": 16372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15953,
											"end": 16372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16378,
											"end": 16557,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 16378,
											"end": 16557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16518,
											"end": 16549,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 16514,
											"end": 16515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16506,
											"end": 16512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16502,
											"end": 16516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16495,
											"end": 16550,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16378,
											"end": 16557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16378,
											"end": 16557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16563,
											"end": 16929,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 16563,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16705,
											"end": 16708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16726,
											"end": 16793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 16790,
											"end": 16792,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 16785,
											"end": 16788,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16726,
											"end": 16793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 16726,
											"end": 16793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16726,
											"end": 16793,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 16726,
											"end": 16793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16719,
											"end": 16793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16719,
											"end": 16793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 16895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 16891,
											"end": 16894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 16895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 16802,
											"end": 16895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 16895,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 16802,
											"end": 16895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16920,
											"end": 16922,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16915,
											"end": 16918,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16911,
											"end": 16923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16904,
											"end": 16923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16904,
											"end": 16923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16563,
											"end": 16929,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16563,
											"end": 16929,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16563,
											"end": 16929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16563,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16935,
											"end": 17354,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 16935,
											"end": 17354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17101,
											"end": 17105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17139,
											"end": 17141,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17128,
											"end": 17137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17124,
											"end": 17142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17116,
											"end": 17142,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17116,
											"end": 17142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17188,
											"end": 17197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17182,
											"end": 17186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17178,
											"end": 17198,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17174,
											"end": 17175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17163,
											"end": 17172,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17159,
											"end": 17176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17152,
											"end": 17199,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17216,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 17342,
											"end": 17346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17216,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 17216,
											"end": 17347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17216,
											"end": 17347,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 17216,
											"end": 17347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17208,
											"end": 17347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17208,
											"end": 17347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16935,
											"end": 17354,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16935,
											"end": 17354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16935,
											"end": 17354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16935,
											"end": 17354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17360,
											"end": 17584,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 17360,
											"end": 17584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17500,
											"end": 17534,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 17496,
											"end": 17497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17488,
											"end": 17494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17484,
											"end": 17498,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17477,
											"end": 17535,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17569,
											"end": 17576,
											"name": "PUSH",
											"source": 9,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17564,
											"end": 17566,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17556,
											"end": 17562,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17552,
											"end": 17567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17545,
											"end": 17577,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17360,
											"end": 17584,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17360,
											"end": 17584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17590,
											"end": 17956,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 17590,
											"end": 17956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17732,
											"end": 17735,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17753,
											"end": 17820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 17817,
											"end": 17819,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 17812,
											"end": 17815,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17753,
											"end": 17820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 17753,
											"end": 17820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17753,
											"end": 17820,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 17753,
											"end": 17820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17746,
											"end": 17820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17746,
											"end": 17820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17829,
											"end": 17922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 17918,
											"end": 17921,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17829,
											"end": 17922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 17829,
											"end": 17922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17829,
											"end": 17922,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 17829,
											"end": 17922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17947,
											"end": 17949,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17942,
											"end": 17945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17938,
											"end": 17950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17931,
											"end": 17950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17931,
											"end": 17950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17590,
											"end": 17956,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17590,
											"end": 17956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17590,
											"end": 17956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17590,
											"end": 17956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17962,
											"end": 18381,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 17962,
											"end": 18381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18128,
											"end": 18132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18166,
											"end": 18168,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18155,
											"end": 18164,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18151,
											"end": 18169,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18143,
											"end": 18169,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18143,
											"end": 18169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18215,
											"end": 18224,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18209,
											"end": 18213,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18205,
											"end": 18225,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18201,
											"end": 18202,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18190,
											"end": 18199,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18186,
											"end": 18203,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18179,
											"end": 18226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18243,
											"end": 18374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 18369,
											"end": 18373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18243,
											"end": 18374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 18243,
											"end": 18374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18243,
											"end": 18374,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 18243,
											"end": 18374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18235,
											"end": 18374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18235,
											"end": 18374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17962,
											"end": 18381,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17962,
											"end": 18381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17962,
											"end": 18381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17962,
											"end": 18381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18387,
											"end": 18609,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 18387,
											"end": 18609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18527,
											"end": 18561,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 18523,
											"end": 18524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18515,
											"end": 18521,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18511,
											"end": 18525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18504,
											"end": 18562,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18596,
											"end": 18601,
											"name": "PUSH",
											"source": 9,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18591,
											"end": 18593,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18583,
											"end": 18589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18579,
											"end": 18594,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18572,
											"end": 18602,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18387,
											"end": 18609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18387,
											"end": 18609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18615,
											"end": 18981,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 18615,
											"end": 18981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18757,
											"end": 18760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18778,
											"end": 18845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 18842,
											"end": 18844,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 18837,
											"end": 18840,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18778,
											"end": 18845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 18778,
											"end": 18845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18778,
											"end": 18845,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 18778,
											"end": 18845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18771,
											"end": 18845,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18771,
											"end": 18845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18854,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 18943,
											"end": 18946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18854,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 18854,
											"end": 18947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18854,
											"end": 18947,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 18854,
											"end": 18947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18972,
											"end": 18974,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18967,
											"end": 18970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18963,
											"end": 18975,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18956,
											"end": 18975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18956,
											"end": 18975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18615,
											"end": 18981,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18615,
											"end": 18981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18615,
											"end": 18981,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18615,
											"end": 18981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18987,
											"end": 19406,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 18987,
											"end": 19406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19153,
											"end": 19157,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19191,
											"end": 19193,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19180,
											"end": 19189,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19176,
											"end": 19194,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19168,
											"end": 19194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19168,
											"end": 19194,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19240,
											"end": 19249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19234,
											"end": 19238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19230,
											"end": 19250,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19226,
											"end": 19227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19215,
											"end": 19224,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19211,
											"end": 19228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19204,
											"end": 19251,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19268,
											"end": 19399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 19394,
											"end": 19398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19268,
											"end": 19399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 19268,
											"end": 19399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19268,
											"end": 19399,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 19268,
											"end": 19399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19260,
											"end": 19399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19260,
											"end": 19399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18987,
											"end": 19406,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18987,
											"end": 19406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18987,
											"end": 19406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18987,
											"end": 19406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19412,
											"end": 19637,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 19412,
											"end": 19637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19552,
											"end": 19586,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 19548,
											"end": 19549,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19540,
											"end": 19546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19536,
											"end": 19550,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19529,
											"end": 19587,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19621,
											"end": 19629,
											"name": "PUSH",
											"source": 9,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19616,
											"end": 19618,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19608,
											"end": 19614,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19604,
											"end": 19619,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19597,
											"end": 19630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19412,
											"end": 19637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19412,
											"end": 19637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19643,
											"end": 20009,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 19643,
											"end": 20009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19785,
											"end": 19788,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19806,
											"end": 19873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 19870,
											"end": 19872,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 19865,
											"end": 19868,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19806,
											"end": 19873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 19806,
											"end": 19873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19806,
											"end": 19873,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 19806,
											"end": 19873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19799,
											"end": 19873,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19799,
											"end": 19873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19882,
											"end": 19975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 19971,
											"end": 19974,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19882,
											"end": 19975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 19882,
											"end": 19975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19882,
											"end": 19975,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 19882,
											"end": 19975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20000,
											"end": 20002,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19995,
											"end": 19998,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19991,
											"end": 20003,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19984,
											"end": 20003,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19984,
											"end": 20003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19643,
											"end": 20009,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19643,
											"end": 20009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19643,
											"end": 20009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19643,
											"end": 20009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20015,
											"end": 20434,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 20015,
											"end": 20434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20181,
											"end": 20185,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20219,
											"end": 20221,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20208,
											"end": 20217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20204,
											"end": 20222,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20196,
											"end": 20222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20196,
											"end": 20222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20268,
											"end": 20277,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20262,
											"end": 20266,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20258,
											"end": 20278,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20254,
											"end": 20255,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20243,
											"end": 20252,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20256,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20232,
											"end": 20279,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20296,
											"end": 20427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 20422,
											"end": 20426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20296,
											"end": 20427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 20296,
											"end": 20427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20296,
											"end": 20427,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 20296,
											"end": 20427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20288,
											"end": 20427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20288,
											"end": 20427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20015,
											"end": 20434,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20015,
											"end": 20434,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20015,
											"end": 20434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20015,
											"end": 20434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20440,
											"end": 21104,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 20440,
											"end": 21104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20645,
											"end": 20649,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20683,
											"end": 20686,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 20672,
											"end": 20681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20668,
											"end": 20687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20660,
											"end": 20687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20660,
											"end": 20687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20697,
											"end": 20768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 20765,
											"end": 20766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20754,
											"end": 20763,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20750,
											"end": 20767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20741,
											"end": 20747,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 20697,
											"end": 20768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 20697,
											"end": 20768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20697,
											"end": 20768,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 20697,
											"end": 20768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20778,
											"end": 20850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 20846,
											"end": 20848,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20835,
											"end": 20844,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20831,
											"end": 20849,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20822,
											"end": 20828,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 20778,
											"end": 20850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 20778,
											"end": 20850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20778,
											"end": 20850,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 20778,
											"end": 20850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20860,
											"end": 20932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 20928,
											"end": 20930,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20917,
											"end": 20926,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20913,
											"end": 20931,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20904,
											"end": 20910,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 20860,
											"end": 20932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 20860,
											"end": 20932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20860,
											"end": 20932,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 20860,
											"end": 20932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20942,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 21010,
											"end": 21012,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 20999,
											"end": 21008,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20995,
											"end": 21013,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20986,
											"end": 20992,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20942,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 20942,
											"end": 21014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20942,
											"end": 21014,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 20942,
											"end": 21014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21024,
											"end": 21097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 21092,
											"end": 21095,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 21081,
											"end": 21090,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21077,
											"end": 21096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21068,
											"end": 21074,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 21024,
											"end": 21097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 21024,
											"end": 21097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21024,
											"end": 21097,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 21024,
											"end": 21097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20440,
											"end": 21104,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 20440,
											"end": 21104,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 20440,
											"end": 21104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20440,
											"end": 21104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20440,
											"end": 21104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20440,
											"end": 21104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20440,
											"end": 21104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20440,
											"end": 21104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20440,
											"end": 21104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21655,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 21110,
											"end": 21655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21283,
											"end": 21287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21321,
											"end": 21324,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 21310,
											"end": 21319,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21306,
											"end": 21325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21298,
											"end": 21325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21298,
											"end": 21325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21335,
											"end": 21406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 21403,
											"end": 21404,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21392,
											"end": 21401,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21388,
											"end": 21405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21379,
											"end": 21385,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 21335,
											"end": 21406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 21335,
											"end": 21406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21335,
											"end": 21406,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 21335,
											"end": 21406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21416,
											"end": 21484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 21480,
											"end": 21482,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21469,
											"end": 21478,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21465,
											"end": 21483,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21456,
											"end": 21462,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 21416,
											"end": 21484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 21416,
											"end": 21484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21416,
											"end": 21484,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 21416,
											"end": 21484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21494,
											"end": 21566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 21562,
											"end": 21564,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21551,
											"end": 21560,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21547,
											"end": 21565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 21494,
											"end": 21566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 21494,
											"end": 21566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21494,
											"end": 21566,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 21494,
											"end": 21566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21576,
											"end": 21648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 21644,
											"end": 21646,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 21633,
											"end": 21642,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21629,
											"end": 21647,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21620,
											"end": 21626,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 21576,
											"end": 21648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 21576,
											"end": 21648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21576,
											"end": 21648,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 21576,
											"end": 21648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21655,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21655,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21661,
											"end": 21841,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 21661,
											"end": 21841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21709,
											"end": 21786,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21706,
											"end": 21707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21699,
											"end": 21787,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21806,
											"end": 21810,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 21803,
											"end": 21804,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 21796,
											"end": 21811,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21830,
											"end": 21834,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 21827,
											"end": 21828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21820,
											"end": 21835,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 21847,
											"end": 22021,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 21847,
											"end": 22021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21987,
											"end": 22013,
											"name": "PUSH",
											"source": 9,
											"value": "45434453413A20696E76616C6964207369676E61747572650000000000000000"
										},
										{
											"begin": 21983,
											"end": 21984,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21975,
											"end": 21981,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21971,
											"end": 21985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21964,
											"end": 22014,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21847,
											"end": 22021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21847,
											"end": 22021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22027,
											"end": 22393,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 22027,
											"end": 22393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22169,
											"end": 22172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22190,
											"end": 22257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 22254,
											"end": 22256,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 22249,
											"end": 22252,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22190,
											"end": 22257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 22190,
											"end": 22257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22190,
											"end": 22257,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 22190,
											"end": 22257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22183,
											"end": 22257,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22183,
											"end": 22257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22266,
											"end": 22359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 22355,
											"end": 22358,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22266,
											"end": 22359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 22266,
											"end": 22359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22266,
											"end": 22359,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 22266,
											"end": 22359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22384,
											"end": 22386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22379,
											"end": 22382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22375,
											"end": 22387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22368,
											"end": 22387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22368,
											"end": 22387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22027,
											"end": 22393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22027,
											"end": 22393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22027,
											"end": 22393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22027,
											"end": 22393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22399,
											"end": 22818,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 22399,
											"end": 22818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22565,
											"end": 22569,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22603,
											"end": 22605,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22592,
											"end": 22601,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22588,
											"end": 22606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22580,
											"end": 22606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22580,
											"end": 22606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22652,
											"end": 22661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22646,
											"end": 22650,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22642,
											"end": 22662,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22638,
											"end": 22639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22627,
											"end": 22636,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22623,
											"end": 22640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22616,
											"end": 22663,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22680,
											"end": 22811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 22806,
											"end": 22810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22680,
											"end": 22811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 22680,
											"end": 22811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22680,
											"end": 22811,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 22680,
											"end": 22811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22672,
											"end": 22811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22672,
											"end": 22811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22399,
											"end": 22818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22399,
											"end": 22818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22399,
											"end": 22818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22399,
											"end": 22818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22824,
											"end": 23005,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 22824,
											"end": 23005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22964,
											"end": 22997,
											"name": "PUSH",
											"source": 9,
											"value": "45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
										},
										{
											"begin": 22960,
											"end": 22961,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22952,
											"end": 22958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22948,
											"end": 22962,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22941,
											"end": 22998,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22824,
											"end": 23005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22824,
											"end": 23005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23011,
											"end": 23377,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 23011,
											"end": 23377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23153,
											"end": 23156,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23174,
											"end": 23241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 23238,
											"end": 23240,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 23233,
											"end": 23236,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23174,
											"end": 23241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 23174,
											"end": 23241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23174,
											"end": 23241,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 23174,
											"end": 23241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23167,
											"end": 23241,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23167,
											"end": 23241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23250,
											"end": 23343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 23339,
											"end": 23342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23250,
											"end": 23343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 23250,
											"end": 23343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23250,
											"end": 23343,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 23250,
											"end": 23343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23368,
											"end": 23370,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23363,
											"end": 23366,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23359,
											"end": 23371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23352,
											"end": 23371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23352,
											"end": 23371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23011,
											"end": 23377,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23011,
											"end": 23377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23011,
											"end": 23377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23011,
											"end": 23377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23383,
											"end": 23802,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 23383,
											"end": 23802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23549,
											"end": 23553,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23587,
											"end": 23589,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23576,
											"end": 23585,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23572,
											"end": 23590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23564,
											"end": 23590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23564,
											"end": 23590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23636,
											"end": 23645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23630,
											"end": 23634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23626,
											"end": 23646,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23622,
											"end": 23623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23611,
											"end": 23620,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23607,
											"end": 23624,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23600,
											"end": 23647,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23664,
											"end": 23795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 23790,
											"end": 23794,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23664,
											"end": 23795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 23664,
											"end": 23795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23664,
											"end": 23795,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 23664,
											"end": 23795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23656,
											"end": 23795,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23656,
											"end": 23795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23383,
											"end": 23802,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23383,
											"end": 23802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23383,
											"end": 23802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23383,
											"end": 23802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23808,
											"end": 24029,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 23808,
											"end": 24029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23948,
											"end": 23982,
											"name": "PUSH",
											"source": 9,
											"value": "45434453413A20696E76616C6964207369676E6174757265202773272076616C"
										},
										{
											"begin": 23944,
											"end": 23945,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23936,
											"end": 23942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23932,
											"end": 23946,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23925,
											"end": 23983,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24017,
											"end": 24021,
											"name": "PUSH",
											"source": 9,
											"value": "7565000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24012,
											"end": 24014,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24004,
											"end": 24010,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24000,
											"end": 24015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23993,
											"end": 24022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23808,
											"end": 24029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23808,
											"end": 24029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24035,
											"end": 24401,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 24035,
											"end": 24401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24177,
											"end": 24180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24198,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 24262,
											"end": 24264,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 24257,
											"end": 24260,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24198,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 24198,
											"end": 24265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24198,
											"end": 24265,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 24198,
											"end": 24265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24191,
											"end": 24265,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24191,
											"end": 24265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24274,
											"end": 24367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 24363,
											"end": 24366,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24274,
											"end": 24367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 24274,
											"end": 24367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24274,
											"end": 24367,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 24274,
											"end": 24367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24392,
											"end": 24394,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24387,
											"end": 24390,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24383,
											"end": 24395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24376,
											"end": 24395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24376,
											"end": 24395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24035,
											"end": 24401,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24035,
											"end": 24401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24035,
											"end": 24401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24035,
											"end": 24401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24407,
											"end": 24826,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 24407,
											"end": 24826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24573,
											"end": 24577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24611,
											"end": 24613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24600,
											"end": 24609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24596,
											"end": 24614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24588,
											"end": 24614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24588,
											"end": 24614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24660,
											"end": 24669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24654,
											"end": 24658,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24650,
											"end": 24670,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24646,
											"end": 24647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24635,
											"end": 24644,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24631,
											"end": 24648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24624,
											"end": 24671,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24688,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 24814,
											"end": 24818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24688,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 24688,
											"end": 24819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24688,
											"end": 24819,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 24688,
											"end": 24819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24680,
											"end": 24819,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24680,
											"end": 24819,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24407,
											"end": 24826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24407,
											"end": 24826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24407,
											"end": 24826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24407,
											"end": 24826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"saleIDO\\ZNS.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"eip712Domain()": "84b0196e",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSuperNum\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"saleIDO\\\\ZNS.sol\":\"ZNS\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"saleIDO\\\\ZNS.sol\":{\"keccak256\":\"0x3ce4d0d564fe15c7065f7bee8030f8d0f8d970bf59f1fba030c4cc10cc95dc91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e1fef31997a7406e34a751531e9239b46e19823552731f2a91f39592db1d154\",\"dweb:/ipfs/QmZ63PqUfcFFDrnoUZE77vCiJn2TtsECeQdywhhWdc1tBn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2254,
								"contract": "saleIDO\\ZNS.sol:ZNS",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2260,
								"contract": "saleIDO\\ZNS.sol:ZNS",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2262,
								"contract": "saleIDO\\ZNS.sol:ZNS",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2264,
								"contract": "saleIDO\\ZNS.sol:ZNS",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2266,
								"contract": "saleIDO\\ZNS.sol:ZNS",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 978,
								"contract": "saleIDO\\ZNS.sol:ZNS",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 980,
								"contract": "saleIDO\\ZNS.sol:ZNS",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 2872,
								"contract": "saleIDO\\ZNS.sol:ZNS",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							24
						]
					},
					"id": 25,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "IERC5267",
							"nameLocation": "142:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "157:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 4,
									"name": "EIP712DomainChanged",
									"nameLocation": "252:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:2:0"
									},
									"src": "246:28:0"
								},
								{
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "280:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "434:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "516:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "509:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 7,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "509:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "550:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "536:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "568:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 11,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "611:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "640:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "632:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "679:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "671:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 17,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "714:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "697:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 19,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "697:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 20,
													"nodeType": "ArrayTypeName",
													"src": "697:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:239:0"
									},
									"scope": 24,
									"src": "425:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 25,
							"src": "132:605:0",
							"usedErrors": [],
							"usedEvents": [
								4
							]
						}
					],
					"src": "107:631:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							29
						],
						"ShortStrings": [
							240
						],
						"StorageSlot": [
							350
						]
					},
					"id": 241,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 26,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 241,
							"sourceUnit": 351,
							"src": "131:27:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 29,
							"name": "ShortString",
							"nameLocation": "333:11:1",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "328:28:1",
							"underlyingType": {
								"id": 28,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "348:7:1",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 30,
								"nodeType": "StructuredDocumentation",
								"src": "358:876:1",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240
							],
							"name": "ShortStrings",
							"nameLocation": "1243:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 33,
									"mutability": "constant",
									"name": "_FALLBACK_SENTINEL",
									"nameLocation": "1350:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "1325:112:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 31,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1325:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 32,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1371:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 37,
									"name": "StringTooLong",
									"nameLocation": "1450:13:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1471:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1464:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 34,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1464:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:12:1"
									},
									"src": "1444:32:1"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 39,
									"name": "InvalidShortString",
									"nameLocation": "1487:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1505:2:1"
									},
									"src": "1481:27:1"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1767:208:1",
										"statements": [
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1790:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 82,
														"src": "1777:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 48,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1777:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"arguments": [
														{
															"id": 52,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1803:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1797:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 50,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1797:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1777:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 55,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "1821:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1826:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1821:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1835:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1821:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 64,
												"nodeType": "IfStatement",
												"src": "1817:72:1",
												"trueBody": {
													"id": 63,
													"nodeType": "Block",
													"src": "1839:50:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 60,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "1874:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 59,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "1860:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 62,
															"nodeType": "RevertStatement",
															"src": "1853:25:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 73,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 49,
																						"src": "1946:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 72,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1938:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 71,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1938:7:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 74,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1938:13:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 70,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1930:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 69,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1930:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 75,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1930:22:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 76,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 49,
																			"src": "1955:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1960:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1955:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1930:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1922:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 67,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1922:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1922:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 65,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1905:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$29_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1917:4:1",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1905:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$29_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 47,
												"id": 81,
												"nodeType": "Return",
												"src": "1898:70:1"
											}
										]
									},
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "1514:170:1",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1698:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1726:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1712:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 41,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1712:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:19:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1754:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 45,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 44,
														"name": "ShortString",
														"nameLocations": [
															"1754:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 29,
														"src": "1754:11:1"
													},
													"referencedDeclaration": 29,
													"src": "1754:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:13:1"
									},
									"scope": 240,
									"src": "1689:286:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "2133:331:1",
										"statements": [
											{
												"assignments": [
													93
												],
												"declarations": [
													{
														"constant": false,
														"id": 93,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2151:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 108,
														"src": "2143:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 92,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2143:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 97,
												"initialValue": {
													"arguments": [
														{
															"id": 95,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "2168:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																"typeString": "ShortString"
															}
														],
														"id": 94,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "2157:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$29_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2143:30:1"
											},
											{
												"assignments": [
													99
												],
												"declarations": [
													{
														"constant": false,
														"id": 99,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2275:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 108,
														"src": "2261:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 98,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2261:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 104,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2292:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2281:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 100,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2285:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2281:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2261:34:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2357:81:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "2378:3:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2383:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2371:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:16:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2371:16:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "2411:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2416:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2407:14:1"
																	},
																	{
																		"name": "sstr",
																		"nodeType": "YulIdentifier",
																		"src": "2423:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2400:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2400:28:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 93,
														"isOffset": false,
														"isSlot": false,
														"src": "2383:3:1",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "2423:4:1",
														"valueSize": 1
													},
													{
														"declaration": 99,
														"isOffset": false,
														"isSlot": false,
														"src": "2378:3:1",
														"valueSize": 1
													},
													{
														"declaration": 99,
														"isOffset": false,
														"isSlot": false,
														"src": "2411:3:1",
														"valueSize": 1
													}
												],
												"id": 105,
												"nodeType": "InlineAssembly",
												"src": "2348:90:1"
											},
											{
												"expression": {
													"id": 106,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 99,
													"src": "2454:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 91,
												"id": 107,
												"nodeType": "Return",
												"src": "2447:10:1"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "1981:73:1",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2068:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2089:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2077:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 86,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 85,
														"name": "ShortString",
														"nameLocations": [
															"2077:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 29,
														"src": "2077:11:1"
													},
													"referencedDeclaration": 29,
													"src": "2077:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:18:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2118:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 89,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2118:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:15:1"
									},
									"scope": 240,
									"src": "2059:405:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "2606:175:1",
										"statements": [
											{
												"assignments": [
													119
												],
												"declarations": [
													{
														"constant": false,
														"id": 119,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2624:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 140,
														"src": "2616:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 118,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2616:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 129,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 124,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "2660:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 122,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "2641:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$29_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2653:6:1",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2641:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$29_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2641:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2633:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 120,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2633:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2633:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2669:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2633:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2616:57:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 130,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "2687:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2696:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2687:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "IfStatement",
												"src": "2683:69:1",
												"trueBody": {
													"id": 136,
													"nodeType": "Block",
													"src": "2700:52:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 133,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "2721:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2721:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 135,
															"nodeType": "RevertStatement",
															"src": "2714:27:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 138,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 119,
													"src": "2768:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 117,
												"id": 139,
												"nodeType": "Return",
												"src": "2761:13:1"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "2470:61:1",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2545:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2568:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2556:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 112,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 111,
														"name": "ShortString",
														"nameLocations": [
															"2556:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 29,
														"src": "2556:11:1"
													},
													"referencedDeclaration": 29,
													"src": "2556:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2555:18:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2597:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2596:9:1"
									},
									"scope": 240,
									"src": "2536:245:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "3004:232:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 154,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "3024:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 152,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3018:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3018:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3031:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3018:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3040:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3018:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 178,
													"nodeType": "Block",
													"src": "3102:128:1",
													"statements": [
														{
															"expression": {
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 167,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 146,
																				"src": "3142:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 164,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 350,
																				"src": "3116:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$350_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3128:13:1",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 327,
																			"src": "3116:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$258_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3116:32:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$258_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 169,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3149:5:1",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 257,
																	"src": "3116:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 170,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "3157:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3116:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 172,
															"nodeType": "ExpressionStatement",
															"src": "3116:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 175,
																		"name": "_FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "3200:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 173,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "3183:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$29_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3195:4:1",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3183:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$29_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3183:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 151,
															"id": 177,
															"nodeType": "Return",
															"src": "3176:43:1"
														}
													]
												},
												"id": 179,
												"nodeType": "IfStatement",
												"src": "3014:216:1",
												"trueBody": {
													"id": 163,
													"nodeType": "Block",
													"src": "3044:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 160,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "3079:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 159,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "3065:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$29_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3065:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 151,
															"id": 162,
															"nodeType": "Return",
															"src": "3058:27:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2787:103:1",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2904:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2944:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2930:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 143,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2930:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2966:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2951:20:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 145,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2951:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2929:43:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2991:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 149,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 148,
														"name": "ShortString",
														"nameLocations": [
															"2991:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 29,
														"src": "2991:11:1"
													},
													"referencedDeclaration": 29,
													"src": "2991:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2990:13:1"
									},
									"scope": 240,
									"src": "2895:341:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "3476:159:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 194,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "3509:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 192,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "3490:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$29_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3502:6:1",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3490:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$29_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3490:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 196,
														"name": "_FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3519:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3490:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 205,
													"nodeType": "Block",
													"src": "3592:37:1",
													"statements": [
														{
															"expression": {
																"id": 203,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "3613:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 191,
															"id": 204,
															"nodeType": "Return",
															"src": "3606:12:1"
														}
													]
												},
												"id": 206,
												"nodeType": "IfStatement",
												"src": "3486:143:1",
												"trueBody": {
													"id": 202,
													"nodeType": "Block",
													"src": "3539:47:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 199,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "3569:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 198,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "3560:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$29_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3560:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 191,
															"id": 201,
															"nodeType": "Return",
															"src": "3553:22:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "3242:120:1",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3376:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3409:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "3397:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ShortString",
														"nameLocations": [
															"3397:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 29,
														"src": "3397:11:1"
													},
													"referencedDeclaration": 29,
													"src": "3397:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3431:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "3416:20:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3416:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3396:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "3461:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 189,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3461:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3460:15:1"
									},
									"scope": 240,
									"src": "3367:268:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "4108:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 221,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "4141:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 219,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "4122:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$29_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4134:6:1",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4122:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$29_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4122:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 223,
														"name": "_FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "4151:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4122:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 236,
													"nodeType": "Block",
													"src": "4226:51:1",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 232,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "4253:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4247:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 230,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4247:5:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4247:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4260:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4247:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 218,
															"id": 235,
															"nodeType": "Return",
															"src": "4240:26:1"
														}
													]
												},
												"id": 237,
												"nodeType": "IfStatement",
												"src": "4118:159:1",
												"trueBody": {
													"id": 229,
													"nodeType": "Block",
													"src": "4171:49:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 226,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 212,
																		"src": "4203:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 225,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4192:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$29_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4192:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 218,
															"id": 228,
															"nodeType": "Return",
															"src": "4185:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3641:357:1",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4012:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "4035:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 211,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 210,
														"name": "ShortString",
														"nameLocations": [
															"4035:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 29,
														"src": "4035:11:1"
													},
													"referencedDeclaration": 29,
													"src": "4035:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4069:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "4054:20:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 213,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4054:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4034:41:1"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "4099:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4099:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4098:9:1"
									},
									"scope": 240,
									"src": "4003:280:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 241,
							"src": "1235:3050:1",
							"usedErrors": [
								37,
								39
							],
							"usedEvents": []
						}
					],
					"src": "106:4180:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							350
						]
					},
					"id": 351,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 242,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "193:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 243,
								"nodeType": "StructuredDocumentation",
								"src": "218:1201:2",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 350,
							"linearizedBaseContracts": [
								350
							],
							"name": "StorageSlot",
							"nameLocation": "1428:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 246,
									"members": [
										{
											"constant": false,
											"id": 245,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1483:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 246,
											"src": "1475:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 244,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1475:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1453:11:2",
									"nodeType": "StructDefinition",
									"scope": 350,
									"src": "1446:49:2",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 249,
									"members": [
										{
											"constant": false,
											"id": 248,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1535:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 249,
											"src": "1530:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 247,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1530:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1508:11:2",
									"nodeType": "StructDefinition",
									"scope": 350,
									"src": "1501:46:2",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 252,
									"members": [
										{
											"constant": false,
											"id": 251,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1590:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 252,
											"src": "1582:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 250,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1582:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1560:11:2",
									"nodeType": "StructDefinition",
									"scope": 350,
									"src": "1553:49:2",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 255,
									"members": [
										{
											"constant": false,
											"id": 254,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1645:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 255,
											"src": "1637:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 253,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1615:11:2",
									"nodeType": "StructDefinition",
									"scope": 350,
									"src": "1608:49:2",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 258,
									"members": [
										{
											"constant": false,
											"id": 257,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1698:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 258,
											"src": "1691:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 256,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1691:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1670:10:2",
									"nodeType": "StructDefinition",
									"scope": 350,
									"src": "1663:47:2",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 261,
									"members": [
										{
											"constant": false,
											"id": 260,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1749:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 261,
											"src": "1743:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 259,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1743:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1723:9:2",
									"nodeType": "StructDefinition",
									"scope": 350,
									"src": "1716:45:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "1943:106:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2005:38:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2019:14:2",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2029:4:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 268,
														"isOffset": false,
														"isSlot": true,
														"src": "2019:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 264,
														"isOffset": false,
														"isSlot": false,
														"src": "2029:4:2",
														"valueSize": 1
													}
												],
												"id": 270,
												"nodeType": "InlineAssembly",
												"src": "1996:47:2"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "1767:87:2",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1868:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1891:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "1883:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 263,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:14:2"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1940:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "1920:21:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$246_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "AddressSlot",
														"nameLocations": [
															"1920:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "1920:11:2"
													},
													"referencedDeclaration": 246,
													"src": "1920:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$246_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1919:23:2"
									},
									"scope": 350,
									"src": "1859:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "2231:106:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2293:38:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2307:14:2",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2317:4:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 279,
														"isOffset": false,
														"isSlot": true,
														"src": "2307:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 275,
														"isOffset": false,
														"isSlot": false,
														"src": "2317:4:2",
														"valueSize": 1
													}
												],
												"id": 281,
												"nodeType": "InlineAssembly",
												"src": "2284:47:2"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "2055:87:2",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2156:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2179:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2171:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 274,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:14:2"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2228:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2208:21:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$249_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 278,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 277,
														"name": "BooleanSlot",
														"nameLocations": [
															"2208:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 249,
														"src": "2208:11:2"
													},
													"referencedDeclaration": 249,
													"src": "2208:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$249_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:23:2"
									},
									"scope": 350,
									"src": "2147:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2519:106:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2581:38:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2595:14:2",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2605:4:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 290,
														"isOffset": false,
														"isSlot": true,
														"src": "2595:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 286,
														"isOffset": false,
														"isSlot": false,
														"src": "2605:4:2",
														"valueSize": 1
													}
												],
												"id": 292,
												"nodeType": "InlineAssembly",
												"src": "2572:47:2"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "2343:87:2",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2444:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2467:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2459:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2458:14:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2516:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2496:21:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$252_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 289,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 288,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2496:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 252,
														"src": "2496:11:2"
													},
													"referencedDeclaration": 252,
													"src": "2496:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$252_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:23:2"
									},
									"scope": 350,
									"src": "2435:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "2807:106:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2869:38:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2883:14:2",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2893:4:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2883:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 301,
														"isOffset": false,
														"isSlot": true,
														"src": "2883:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 297,
														"isOffset": false,
														"isSlot": false,
														"src": "2893:4:2",
														"valueSize": 1
													}
												],
												"id": 303,
												"nodeType": "InlineAssembly",
												"src": "2860:47:2"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2631:87:2",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2732:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2755:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2747:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 296,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:14:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2804:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2784:21:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$255_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 299,
														"name": "Uint256Slot",
														"nameLocations": [
															"2784:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 255,
														"src": "2784:11:2"
													},
													"referencedDeclaration": 255,
													"src": "2784:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$255_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:23:2"
									},
									"scope": 350,
									"src": "2723:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "3092:106:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3154:38:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3168:14:2",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3178:4:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 312,
														"isOffset": false,
														"isSlot": true,
														"src": "3168:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 308,
														"isOffset": false,
														"isSlot": false,
														"src": "3178:4:2",
														"valueSize": 1
													}
												],
												"id": 314,
												"nodeType": "InlineAssembly",
												"src": "3145:47:2"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "2919:86:2",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3019:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3041:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3033:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 307,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3032:14:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3089:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3070:20:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$258_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 311,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 310,
														"name": "StringSlot",
														"nameLocations": [
															"3070:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 258,
														"src": "3070:10:2"
													},
													"referencedDeclaration": 258,
													"src": "3070:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$258_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:22:2"
									},
									"scope": 350,
									"src": "3010:188:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "3400:112:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3462:44:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3476:20:2",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3486:10:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3476:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 323,
														"isOffset": false,
														"isSlot": true,
														"src": "3476:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 319,
														"isOffset": false,
														"isSlot": true,
														"src": "3486:10:2",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 325,
												"nodeType": "InlineAssembly",
												"src": "3453:53:2"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "3204:101:2",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3319:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3348:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3333:20:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3333:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:22:2"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3397:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3378:20:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$258_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 321,
														"name": "StringSlot",
														"nameLocations": [
															"3378:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 258,
														"src": "3378:10:2"
													},
													"referencedDeclaration": 258,
													"src": "3378:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$258_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:22:2"
									},
									"scope": 350,
									"src": "3310:202:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "3688:106:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3750:38:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3764:14:2",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3774:4:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 334,
														"isOffset": false,
														"isSlot": true,
														"src": "3764:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 330,
														"isOffset": false,
														"isSlot": false,
														"src": "3774:4:2",
														"valueSize": 1
													}
												],
												"id": 336,
												"nodeType": "InlineAssembly",
												"src": "3741:47:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "3518:85:2",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3617:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3638:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "3630:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3629:14:2"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3685:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "3667:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$261_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 332,
														"name": "BytesSlot",
														"nameLocations": [
															"3667:9:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 261,
														"src": "3667:9:2"
													},
													"referencedDeclaration": 261,
													"src": "3667:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$261_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:21:2"
									},
									"scope": 350,
									"src": "3608:186:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "3991:112:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4053:44:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4067:20:2",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "4077:10:2"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 345,
														"isOffset": false,
														"isSlot": true,
														"src": "4067:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 341,
														"isOffset": false,
														"isSlot": true,
														"src": "4077:10:2",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 347,
												"nodeType": "InlineAssembly",
												"src": "4044:53:2"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "3800:99:2",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3913:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3940:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "3926:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3926:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:21:2"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3988:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "3970:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$261_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 343,
														"name": "BytesSlot",
														"nameLocations": [
															"3970:9:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 261,
														"src": "3970:9:2"
													},
													"referencedDeclaration": 261,
													"src": "3970:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$261_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:21:2"
									},
									"scope": 350,
									"src": "3904:199:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 351,
							"src": "1420:2685:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3913:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2015
						],
						"SignedMath": [
							2120
						],
						"Strings": [
							579
						]
					},
					"id": 580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 352,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 580,
							"sourceUnit": 2016,
							"src": "126:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 580,
							"sourceUnit": 2121,
							"src": "152:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 355,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:3",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 579,
							"linearizedBaseContracts": [
								579
							],
							"name": "Strings",
							"nameLocation": "228:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 358,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 579,
									"src": "242:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 356,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 357,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 361,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 579,
									"src": "302:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 359,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "518:625:3",
										"statements": [
											{
												"id": 407,
												"nodeType": "UncheckedBlock",
												"src": "528:609:3",
												"statements": [
													{
														"assignments": [
															370
														],
														"declarations": [
															{
																"constant": false,
																"id": 370,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 407,
																"src": "552:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 369,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 377,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 373,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "580:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 371,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2015,
																		"src": "569:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2015_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:3",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1852,
																	"src": "569:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:3"
													},
													{
														"assignments": [
															379
														],
														"declarations": [
															{
																"constant": false,
																"id": 379,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 407,
																"src": "604:20:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 378,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 384,
														"initialValue": {
															"arguments": [
																{
																	"id": 382,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "638:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 380,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:3"
													},
													{
														"assignments": [
															386
														],
														"declarations": [
															{
																"constant": false,
																"id": 386,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 407,
																"src": "659:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 385,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 387,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:3",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:3",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:3"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:3"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 379,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:3",
																"valueSize": 1
															},
															{
																"declaration": 370,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:3",
																"valueSize": 1
															},
															{
																"declaration": 386,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:3",
																"valueSize": 1
															}
														],
														"id": 388,
														"nodeType": "InlineAssembly",
														"src": "731:76:3"
													},
													{
														"body": {
															"id": 403,
															"nodeType": "Block",
															"src": "833:267:3",
															"statements": [
																{
																	"expression": {
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:3",
																		"subExpression": {
																			"id": 390,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "851:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 392,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:3"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:3",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:3"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:3"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:3"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 358,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 386,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 364,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:3",
																			"valueSize": 1
																		}
																	],
																	"id": 393,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:3"
																},
																{
																	"expression": {
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 394,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 364,
																			"src": "1035:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 397,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 398,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 364,
																			"src": "1068:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 402,
																	"nodeType": "IfStatement",
																	"src": "1064:21:3",
																	"trueBody": {
																		"id": 401,
																		"nodeType": "Break",
																		"src": "1080:5:3"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 404,
														"nodeType": "WhileStatement",
														"src": "820:280:3"
													},
													{
														"expression": {
															"id": 405,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "1120:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 368,
														"id": 406,
														"nodeType": "Return",
														"src": "1113:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:3"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "503:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:3"
									},
									"scope": 579,
									"src": "447:696:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "1313:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 421,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "1354:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:3",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 430,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 412,
																					"src": "1400:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 428,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2120,
																					"src": "1385:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2120_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:3",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2119,
																				"src": "1385:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 427,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			409,
																			437
																		],
																		"referencedDeclaration": 409,
																		"src": "1376:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 419,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 417,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 416,
												"id": 435,
												"nodeType": "Return",
												"src": "1323:86:3"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:3",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1261:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 411,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:3"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1298:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 414,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:3"
									},
									"scope": 579,
									"src": "1243:173:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "1595:100:3",
										"statements": [
											{
												"id": 455,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 446,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "1648:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 449,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 440,
																				"src": "1667:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 447,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2015,
																				"src": "1655:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2015_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:3",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1975,
																			"src": "1655:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 445,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	457,
																	533,
																	553
																],
																"referencedDeclaration": 533,
																"src": "1636:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 444,
														"id": 454,
														"nodeType": "Return",
														"src": "1629:49:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "1542:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "1580:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 442,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:3"
									},
									"scope": 579,
									"src": "1521:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "1908:347:3",
										"statements": [
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "1918:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 467,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 472,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "1954:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 469,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:3"
											},
											{
												"expression": {
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 478,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "1975:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 480,
														"indexExpression": {
															"hexValue": "30",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:3"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 484,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2000:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 486,
														"indexExpression": {
															"hexValue": "31",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:3"
											},
											{
												"body": {
													"id": 518,
													"nodeType": "Block",
													"src": "2070:83:3",
													"statements": [
														{
															"expression": {
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 504,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "2084:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 506,
																	"indexExpression": {
																		"id": 505,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "2091:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 507,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "2096:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 511,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 508,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2105:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 513,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:3"
														},
														{
															"expression": {
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 514,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "2131:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 498,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2058:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"initializationExpression": {
													"assignments": [
														491
													],
													"declarations": [
														{
															"constant": false,
															"id": 491,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 519,
															"src": "2030:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 490,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 497,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 493,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "2046:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:3"
												},
												"loopExpression": {
													"expression": {
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:3",
														"subExpression": {
															"id": 501,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "2067:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 503,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 521,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 529,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 527,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 466,
												"id": 531,
												"nodeType": "Return",
												"src": "2227:21:3"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1839:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:3"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1893:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:3"
									},
									"scope": 579,
									"src": "1818:437:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "2480:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 546,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "2525:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 544,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 542,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 549,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "2533:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 541,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															457,
															533,
															553
														],
														"referencedDeclaration": 533,
														"src": "2497:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 540,
												"id": 551,
												"nodeType": "Return",
												"src": "2490:59:3"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:3",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2428:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:3"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 538,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"scope": 579,
									"src": "2407:149:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "2711:66:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 566,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 556,
																		"src": "2744:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 564,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 563,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 572,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "2767:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 570,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 569,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 562,
												"id": 576,
												"nodeType": "Return",
												"src": "2721:49:3"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:3",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2648:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2665:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2705:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:3"
									},
									"scope": 579,
									"src": "2633:144:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 580,
							"src": "220:2559:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2679:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							945
						],
						"Math": [
							2015
						],
						"SignedMath": [
							2120
						],
						"Strings": [
							579
						]
					},
					"id": 946,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 581,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 582,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 946,
							"sourceUnit": 580,
							"src": "137:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 583,
								"nodeType": "StructuredDocumentation",
								"src": "163:205:4",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 945,
							"linearizedBaseContracts": [
								945
							],
							"name": "ECDSA",
							"nameLocation": "377:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 589,
									"members": [
										{
											"id": 584,
											"name": "NoError",
											"nameLocation": "417:7:4",
											"nodeType": "EnumValue",
											"src": "417:7:4"
										},
										{
											"id": 585,
											"name": "InvalidSignature",
											"nameLocation": "434:16:4",
											"nodeType": "EnumValue",
											"src": "434:16:4"
										},
										{
											"id": 586,
											"name": "InvalidSignatureLength",
											"nameLocation": "460:22:4",
											"nodeType": "EnumValue",
											"src": "460:22:4"
										},
										{
											"id": 587,
											"name": "InvalidSignatureS",
											"nameLocation": "492:17:4",
											"nodeType": "EnumValue",
											"src": "492:17:4"
										},
										{
											"id": 588,
											"name": "InvalidSignatureV",
											"nameLocation": "519:17:4",
											"nodeType": "EnumValue",
											"src": "519:17:4"
										}
									],
									"name": "RecoverError",
									"nameLocation": "394:12:4",
									"nodeType": "EnumDefinition",
									"src": "389:175:4"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "624:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$589",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 595,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "638:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$589",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 596,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "647:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$589_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "660:7:4",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 584,
														"src": "647:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$589",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "638:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$589",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 601,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "734:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 602,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "743:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$589_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "756:16:4",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 585,
															"src": "743:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "734:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 610,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "843:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$589",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 611,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "852:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$589_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "865:22:4",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 586,
																"src": "852:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$589",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "843:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$589",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 619,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "965:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$589",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 620,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "974:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$589_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "987:17:4",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 587,
																	"src": "974:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$589",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "965:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 628,
															"nodeType": "IfStatement",
															"src": "961:114:4",
															"trueBody": {
																"id": 627,
																"nodeType": "Block",
																"src": "1006:69:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 624,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1027:36:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 623,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "1020:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1020:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 626,
																		"nodeType": "ExpressionStatement",
																		"src": "1020:44:4"
																	}
																]
															}
														},
														"id": 629,
														"nodeType": "IfStatement",
														"src": "839:236:4",
														"trueBody": {
															"id": 618,
															"nodeType": "Block",
															"src": "889:66:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 615,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "910:33:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 614,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "903:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "903:41:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 617,
																	"nodeType": "ExpressionStatement",
																	"src": "903:41:4"
																}
															]
														}
													},
													"id": 630,
													"nodeType": "IfStatement",
													"src": "730:345:4",
													"trueBody": {
														"id": 609,
														"nodeType": "Block",
														"src": "774:59:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "795:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 605,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "788:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "788:34:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 608,
																"nodeType": "ExpressionStatement",
																"src": "788:34:4"
															}
														]
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "634:441:4",
												"trueBody": {
													"id": 600,
													"nodeType": "Block",
													"src": "669:55:4",
													"statements": [
														{
															"functionReturnParameters": 594,
															"id": 599,
															"nodeType": "Return",
															"src": "683:7:4"
														}
													]
												}
											}
										]
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "579:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "604:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "591:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$589",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 591,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 590,
														"name": "RecoverError",
														"nameLocations": [
															"591:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 589,
														"src": "591:12:4"
													},
													"referencedDeclaration": 589,
													"src": "591:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$589",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:20:4"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:4"
									},
									"scope": 945,
									"src": "570:511:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "2249:626:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 646,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "2263:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2273:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2283:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2263:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 676,
													"nodeType": "Block",
													"src": "2788:81:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2818:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2810:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 668,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2810:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2810:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 672,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "2822:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$589_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2835:22:4",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 586,
																		"src": "2822:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$589",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 674,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2809:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$589_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 645,
															"id": 675,
															"nodeType": "Return",
															"src": "2802:56:4"
														}
													]
												},
												"id": 677,
												"nodeType": "IfStatement",
												"src": "2259:610:4",
												"trueBody": {
													"id": 667,
													"nodeType": "Block",
													"src": "2287:495:4",
													"statements": [
														{
															"assignments": [
																651
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 651,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2309:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 667,
																	"src": "2301:9:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 650,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2301:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 652,
															"nodeType": "VariableDeclarationStatement",
															"src": "2301:9:4"
														},
														{
															"assignments": [
																654
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 654,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2332:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 667,
																	"src": "2324:9:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 653,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2324:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 655,
															"nodeType": "VariableDeclarationStatement",
															"src": "2324:9:4"
														},
														{
															"assignments": [
																657
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 657,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2353:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 667,
																	"src": "2347:7:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 656,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2347:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 658,
															"nodeType": "VariableDeclarationStatement",
															"src": "2347:7:4"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2555:171:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2573:32:4",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2588:9:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2599:4:4",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2584:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2584:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2578:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2578:27:4"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "2573:1:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2622:32:4",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2637:9:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2648:4:4",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2633:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2627:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2627:27:4"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "2622:1:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2671:41:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2681:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "2694:9:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2705:4:4",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2690:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2690:20:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2684:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2684:27:4"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "2676:4:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2676:36:4"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "2671:1:4"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 651,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2573:1:4",
																	"valueSize": 1
																},
																{
																	"declaration": 654,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2622:1:4",
																	"valueSize": 1
																},
																{
																	"declaration": 638,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2588:9:4",
																	"valueSize": 1
																},
																{
																	"declaration": 638,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2637:9:4",
																	"valueSize": 1
																},
																{
																	"declaration": 638,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2694:9:4",
																	"valueSize": 1
																},
																{
																	"declaration": 657,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2671:1:4",
																	"valueSize": 1
																}
															],
															"id": 659,
															"nodeType": "InlineAssembly",
															"src": "2546:180:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 661,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "2757:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 662,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "2763:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 663,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "2766:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 664,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 654,
																		"src": "2769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 660,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		679,
																		753,
																		847
																	],
																	"referencedDeclaration": 847,
																	"src": "2746:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$589_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																	}
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$589_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 645,
															"id": 666,
															"nodeType": "Return",
															"src": "2739:32:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "1087:1053:4",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2154:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2173:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2165:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 635,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2192:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2179:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2179:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:38:4"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2226:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2235:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$589",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 643,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 642,
														"name": "RecoverError",
														"nameLocations": [
															"2235:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 589,
														"src": "2235:12:4"
													},
													"referencedDeclaration": 589,
													"src": "2235:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$589",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2225:23:4"
									},
									"scope": 945,
									"src": "2145:730:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "3748:140:4",
										"statements": [
											{
												"assignments": [
													690,
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3767:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 705,
														"src": "3759:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 689,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3759:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3791:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 705,
														"src": "3778:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$589",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 692,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 691,
																"name": "RecoverError",
																"nameLocations": [
																	"3778:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 589,
																"src": "3778:12:4"
															},
															"referencedDeclaration": 589,
															"src": "3778:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"arguments": [
														{
															"id": 695,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3811:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 696,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3817:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 694,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															679,
															753,
															847
														],
														"referencedDeclaration": 679,
														"src": "3800:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$589_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$589_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3758:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 700,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "3849:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 699,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "3837:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$589_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3837:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "3837:18:4"
											},
											{
												"expression": {
													"id": 703,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 690,
													"src": "3872:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 688,
												"id": 704,
												"nodeType": "Return",
												"src": "3865:16:4"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "2881:775:4",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3670:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3686:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "3678:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3678:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3705:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "3692:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:38:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "3739:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:9:4"
									},
									"scope": 945,
									"src": "3661:227:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "4245:203:4",
										"statements": [
											{
												"assignments": [
													722
												],
												"declarations": [
													{
														"constant": false,
														"id": 722,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "4263:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "4255:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 721,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4255:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 729,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "vs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "4267:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4280:66:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																},
																"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4272:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 724,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4272:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4272:75:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4267:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4255:92:4"
											},
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "4363:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "4357:7:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 730,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4357:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 736,
																					"name": "vs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "4382:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4374:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 734,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4374:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4374:11:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "323535",
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4389:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "255"
																		},
																		"src": "4374:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 740,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4373:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3237",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4396:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "4373:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4367:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 732,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4367:5:4",
															"typeDescriptions": {}
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4367:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4357:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 746,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "4427:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 747,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "4433:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 748,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "4436:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 749,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "4439:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 745,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															679,
															753,
															847
														],
														"referencedDeclaration": 847,
														"src": "4416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$589_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4416:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$589_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 720,
												"id": 751,
												"nodeType": "Return",
												"src": "4409:32:4"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "3894:243:4",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4151:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4170:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "4162:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 708,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4162:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4184:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "4176:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 710,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4195:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "4187:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 712,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4161:37:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "4222:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "4231:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$589",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 718,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 717,
														"name": "RecoverError",
														"nameLocations": [
															"4231:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 589,
														"src": "4231:12:4"
													},
													"referencedDeclaration": 589,
													"src": "4231:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$589",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4221:23:4"
									},
									"scope": 945,
									"src": "4142:306:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "4699:136:4",
										"statements": [
											{
												"assignments": [
													766,
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4718:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "4710:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 765,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4710:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4742:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "4729:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$589",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 768,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 767,
																"name": "RecoverError",
																"nameLocations": [
																	"4729:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 589,
																"src": "4729:12:4"
															},
															"referencedDeclaration": 589,
															"src": "4729:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"initialValue": {
													"arguments": [
														{
															"id": 771,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "4762:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 772,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "4768:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 773,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "4771:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 770,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															679,
															753,
															847
														],
														"referencedDeclaration": 753,
														"src": "4751:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$589_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$589_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4709:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 777,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "4796:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 776,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "4784:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$589_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4784:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "4784:18:4"
											},
											{
												"expression": {
													"id": 780,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "4819:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 764,
												"id": 781,
												"nodeType": "Return",
												"src": "4812:16:4"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "4454:154:4",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4622:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4638:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "4630:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 755,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4630:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4652:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "4644:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 757,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4663:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "4655:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 759,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4655:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4629:37:4"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "4690:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4690:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4689:9:4"
									},
									"scope": 945,
									"src": "4613:222:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "5120:1345:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 802,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "6016:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6008:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 800,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6008:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6008:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6021:66:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6008:79:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 815,
												"nodeType": "IfStatement",
												"src": "6004:161:4",
												"trueBody": {
													"id": 814,
													"nodeType": "Block",
													"src": "6089:76:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6119:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6111:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 806,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6111:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6111:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 810,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "6123:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$589_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6136:17:4",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 587,
																		"src": "6123:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$589",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 812,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6110:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$589_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 799,
															"id": 813,
															"nodeType": "Return",
															"src": "6103:51:4"
														}
													]
												}
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6267:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 846,
														"src": "6259:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 816,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6259:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"arguments": [
														{
															"id": 819,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "6286:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 820,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "6292:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 821,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "6295:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 822,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "6298:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 818,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6276:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6276:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6259:41:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 825,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "6314:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6332:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6324:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 826,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6324:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6324:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6314:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 840,
												"nodeType": "IfStatement",
												"src": "6310:101:4",
												"trueBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "6336:75:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6366:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6358:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6358:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6358:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 835,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "6370:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$589_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6383:16:4",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 585,
																		"src": "6370:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$589",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 837,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6357:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$589_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 799,
															"id": 838,
															"nodeType": "Return",
															"src": "6350:50:4"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 841,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "6429:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 842,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "6437:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$589_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6450:7:4",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 584,
															"src": "6437:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"id": 844,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6428:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$589_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 799,
												"id": 845,
												"nodeType": "Return",
												"src": "6421:37:4"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "4841:163:4",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5018:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5037:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5029:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 785,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5049:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5043:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 787,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5043:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5060:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5052:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 789,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5052:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5071:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5063:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 791,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5028:45:4"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5097:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5097:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5106:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$589",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 796,
														"name": "RecoverError",
														"nameLocations": [
															"5106:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 589,
														"src": "5106:12:4"
													},
													"referencedDeclaration": 589,
													"src": "5106:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$589",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5096:23:4"
									},
									"scope": 945,
									"src": "5009:1456:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "6692:138:4",
										"statements": [
											{
												"assignments": [
													862,
													865
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6711:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "6703:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 861,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 865,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6735:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "6722:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$589",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 864,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 863,
																"name": "RecoverError",
																"nameLocations": [
																	"6722:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 589,
																"src": "6722:12:4"
															},
															"referencedDeclaration": 589,
															"src": "6722:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"arguments": [
														{
															"id": 867,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "6755:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 868,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "6761:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 869,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "6764:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 870,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "6767:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 866,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															679,
															753,
															847
														],
														"referencedDeclaration": 847,
														"src": "6744:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$589_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6744:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$589_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6702:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 874,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "6791:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$589",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 873,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "6779:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$589_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6779:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "6779:18:4"
											},
											{
												"expression": {
													"id": 877,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 862,
													"src": "6814:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 860,
												"id": 878,
												"nodeType": "Return",
												"src": "6807:16:4"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "6471:122:4",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6607:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6623:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "6615:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 849,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6615:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6635:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "6629:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 851,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6629:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6646:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "6638:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 853,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6657:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "6649:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 855,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6649:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6614:45:4"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "6683:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6683:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6682:9:4"
									},
									"scope": 945,
									"src": "6598:232:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "7206:310:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7362:148:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7383:4:4",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7389:34:4",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7376:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7376:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7376:48:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7444:4:4",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "hash",
																		"nodeType": "YulIdentifier",
																		"src": "7450:4:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7437:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7437:18:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7437:18:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7468:32:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7489:4:4",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7495:4:4",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "7479:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7479:21:4"
															},
															"variableNames": [
																{
																	"name": "message",
																	"nodeType": "YulIdentifier",
																	"src": "7468:7:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 883,
														"isOffset": false,
														"isSlot": false,
														"src": "7450:4:4",
														"valueSize": 1
													},
													{
														"declaration": 886,
														"isOffset": false,
														"isSlot": false,
														"src": "7468:7:4",
														"valueSize": 1
													}
												],
												"id": 888,
												"nodeType": "InlineAssembly",
												"src": "7353:157:4"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "6836:279:4",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7129:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "7160:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "7152:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 882,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7152:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7151:14:4"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "7197:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "7189:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 885,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7188:17:4"
									},
									"scope": 945,
									"src": "7120:396:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "7881:116:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7925:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 904,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 893,
																				"src": "7976:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7978:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "7976:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 902,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 579,
																			"src": "7959:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$579_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7967:8:4",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 409,
																		"src": "7959:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7959:26:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 907,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "7987:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 899,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7908:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7912:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "7908:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7908:81:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 898,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7898:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7898:92:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 897,
												"id": 910,
												"nodeType": "Return",
												"src": "7891:99:4"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "7522:274:4",
										"text": " @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7810:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "7846:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "7833:14:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 892,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7833:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7832:16:4"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "7872:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 895,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7872:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7871:9:4"
									},
									"scope": 945,
									"src": "7801:196:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "8443:290:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8505:222:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8519:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8536:4:4",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8530:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8530:11:4"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "8523:3:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8561:3:4"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8566:10:4",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8554:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8554:23:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8554:23:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "8601:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8606:4:4",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8597:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8597:14:4"
																	},
																	{
																		"name": "domainSeparator",
																		"nodeType": "YulIdentifier",
																		"src": "8613:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8590:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8590:39:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8590:39:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8658:4:4",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8649:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8649:14:4"
																	},
																	{
																		"name": "structHash",
																		"nodeType": "YulIdentifier",
																		"src": "8665:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8642:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8642:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8642:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8689:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8707:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8712:4:4",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "8697:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8697:20:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8689:4:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 920,
														"isOffset": false,
														"isSlot": false,
														"src": "8689:4:4",
														"valueSize": 1
													},
													{
														"declaration": 915,
														"isOffset": false,
														"isSlot": false,
														"src": "8613:15:4",
														"valueSize": 1
													},
													{
														"declaration": 917,
														"isOffset": false,
														"isSlot": false,
														"src": "8665:10:4",
														"valueSize": 1
													}
												],
												"id": 922,
												"nodeType": "InlineAssembly",
												"src": "8496:231:4"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "8003:328:4",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "8345:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "8369:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "8361:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 914,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8361:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "8394:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "8386:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 916,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8360:45:4"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8437:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "8429:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 919,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8429:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8428:14:4"
									},
									"scope": 945,
									"src": "8336:397:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "9048:80:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9092:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 938,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "9104:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 939,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "9115:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 935,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9075:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9079:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9075:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9075:45:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 934,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9065:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9065:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 933,
												"id": 942,
												"nodeType": "Return",
												"src": "9058:63:4"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "8739:193:4",
										"text": " @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "8946:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "8986:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "8978:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8978:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9010:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "8997:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8997:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8977:38:4"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "9039:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 931,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9038:9:4"
									},
									"scope": 945,
									"src": "8937:191:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 946,
							"src": "369:8761:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:9019:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"ECDSA": [
							945
						],
						"EIP712": [
							1149
						],
						"IERC5267": [
							24
						],
						"Math": [
							2015
						],
						"ShortString": [
							29
						],
						"ShortStrings": [
							240
						],
						"SignedMath": [
							2120
						],
						"StorageSlot": [
							350
						],
						"Strings": [
							579
						]
					},
					"id": 1150,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 947,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1150,
							"sourceUnit": 946,
							"src": "138:21:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 949,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1150,
							"sourceUnit": 241,
							"src": "160:29:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 950,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1150,
							"sourceUnit": 25,
							"src": "190:39:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 952,
										"name": "IERC5267",
										"nameLocations": [
											"1837:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 24,
										"src": "1837:8:5"
									},
									"id": 953,
									"nodeType": "InheritanceSpecifier",
									"src": "1837:8:5"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 951,
								"nodeType": "StructuredDocumentation",
								"src": "231:1577:5",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
							},
							"fullyImplemented": true,
							"id": 1149,
							"linearizedBaseContracts": [
								1149,
								24
							],
							"name": "EIP712",
							"nameLocation": "1827:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 955,
									"libraryName": {
										"id": 954,
										"name": "ShortStrings",
										"nameLocations": [
											"1858:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 240,
										"src": "1858:12:5"
									},
									"nodeType": "UsingForDirective",
									"src": "1852:25:5"
								},
								{
									"constant": true,
									"id": 960,
									"mutability": "constant",
									"name": "_TYPE_HASH",
									"nameLocation": "1908:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1149,
									"src": "1883:141:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 956,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1883:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 958,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1939:84:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 957,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1929:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 959,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1929:95:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 962,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2249:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 1149,
									"src": "2223:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 961,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2223:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 964,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2303:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1149,
									"src": "2277:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 963,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2277:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 966,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2349:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1149,
									"src": "2323:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 965,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2323:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 968,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2393:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1149,
									"src": "2367:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 967,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2367:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 970,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2436:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1149,
									"src": "2410:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 969,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2410:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 973,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2487:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1149,
									"src": "2457:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 972,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 971,
											"name": "ShortString",
											"nameLocations": [
												"2457:11:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 29,
											"src": "2457:11:5"
										},
										"referencedDeclaration": 29,
										"src": "2457:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 976,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2528:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1149,
									"src": "2498:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 975,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 974,
											"name": "ShortString",
											"nameLocations": [
												"2498:11:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 29,
											"src": "2498:11:5"
										},
										"referencedDeclaration": 29,
										"src": "2498:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 978,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2557:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1149,
									"src": "2542:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 977,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2542:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 980,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2591:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 1149,
									"src": "2576:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 979,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2576:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "3233:376:5",
										"statements": [
											{
												"expression": {
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 988,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "3243:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 991,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "3282:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 989,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "3251:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3256:25:5",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "3251:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$29_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3251:45:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
															"typeString": "ShortString"
														}
													},
													"src": "3243:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
														"typeString": "ShortString"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "3243:53:5"
											},
											{
												"expression": {
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 995,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "3306:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 998,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "3351:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 996,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "3317:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3325:25:5",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "3317:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$29_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3317:51:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
															"typeString": "ShortString"
														}
													},
													"src": "3306:62:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
														"typeString": "ShortString"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "3306:62:5"
											},
											{
												"expression": {
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1002,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "3378:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1006,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "3408:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3402:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1004,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3402:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3402:11:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1003,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3392:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3392:22:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3378:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "3378:36:5"
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1011,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "3424:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1015,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "3457:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3451:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1013,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3451:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3451:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1012,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3441:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3441:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3424:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "3424:42:5"
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1020,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "3477:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1021,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3494:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3500:7:5",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3494:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3477:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "3477:30:5"
											},
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1025,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "3517:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1026,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "3542:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3517:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "3517:48:5"
											},
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1030,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "3575:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1033,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3597:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$1149",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$1149",
																	"typeString": "contract EIP712"
																}
															],
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3589:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1031,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3589:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3589:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3575:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "3575:27:5"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "2614:559:5",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 1038,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3204:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "3190:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 982,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3190:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3224:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "3210:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 984,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3210:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3189:43:5"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3233:0:5"
									},
									"scope": 1149,
									"src": "3178:431:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "3757:200:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1046,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3779:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$1149",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$1149",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3771:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1044,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3771:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3771:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1048,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "3788:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3771:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1050,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3803:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3809:7:5",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3803:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1052,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "3820:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3803:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3771:63:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1061,
													"nodeType": "Block",
													"src": "3896:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1058,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "3917:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3917:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1043,
															"id": 1060,
															"nodeType": "Return",
															"src": "3910:30:5"
														}
													]
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "3767:184:5",
												"trueBody": {
													"id": 1057,
													"nodeType": "Block",
													"src": "3836:54:5",
													"statements": [
														{
															"expression": {
																"id": 1055,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "3857:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1043,
															"id": 1056,
															"nodeType": "Return",
															"src": "3850:29:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "3615:75:5",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3704:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:2:5"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "3748:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1041,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3748:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3747:9:5"
									},
									"scope": 1149,
									"src": "3695:262:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "4027:116:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1072,
																	"name": "_TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "4065:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1073,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "4077:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1074,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "4090:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1075,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4106:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4112:7:5",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4106:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1079,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4129:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$1149",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$1149",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4121:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1077,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4121:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4121:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1070,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4054:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4058:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4054:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4054:81:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1069,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4044:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4044:92:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1068,
												"id": 1083,
												"nodeType": "Return",
												"src": "4037:99:5"
											}
										]
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "3972:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3993:2:5"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "4018:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1066,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4017:9:5"
									},
									"scope": 1149,
									"src": "3963:180:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "4854:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1095,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "4893:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4893:20:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1097,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "4915:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1093,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "4871:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$945_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4877:15:5",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 924,
														"src": "4871:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4871:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1099,
												"nodeType": "Return",
												"src": "4864:62:5"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "4149:614:5",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4777:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4802:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "4794:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1087,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4793:20:5"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "4845:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4845:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4844:9:5"
									},
									"scope": 1149,
									"src": "4768:165:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										23
									],
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "5366:288:5",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5397:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [
																{
																	"id": 1124,
																	"name": "_nameFallback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "5454:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"expression": {
																	"id": 1122,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "5427:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																		"typeString": "ShortString"
																	}
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5433:20:5",
																"memberName": "toStringWithFallback",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 208,
																"src": "5427:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$29_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$29_$",
																	"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5427:41:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1128,
																	"name": "_versionFallback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "5512:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"expression": {
																	"id": 1126,
																	"name": "_version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "5482:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_userDefinedValueType$_ShortString_$29",
																		"typeString": "ShortString"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5491:20:5",
																"memberName": "toStringWithFallback",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 208,
																"src": "5482:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$29_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$29_$",
																	"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5482:47:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1130,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5543:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5549:7:5",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5543:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1134,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5578:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$1149",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$1149",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5570:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1132,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5570:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5570:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5605:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5597:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1136,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5597:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5597:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5635:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5621:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 1140,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5625:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1141,
																	"nodeType": "ArrayTypeName",
																	"src": "5625:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5621:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 1145,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5383:264:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 1120,
												"id": 1146,
												"nodeType": "Return",
												"src": "5376:271:5"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "4939:77:5",
										"text": " @dev See {EIP-5267}.\n _Available since v4.9._"
									},
									"functionSelector": "84b0196e",
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5030:12:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5097:8:5"
									},
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5042:2:5"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5143:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "5136:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1105,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5136:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5177:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "5163:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5163:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5209:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "5195:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1109,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5195:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5238:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "5230:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5230:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5267:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "5259:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5259:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5306:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "5298:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1115,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5298:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5341:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "5324:27:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1117,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5324:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1118,
													"nodeType": "ArrayTypeName",
													"src": "5324:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5122:239:5"
									},
									"scope": 1149,
									"src": "5021:633:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1150,
							"src": "1809:3847:5",
							"usedErrors": [
								37,
								39
							],
							"usedEvents": [
								4
							]
						}
					],
					"src": "113:5544:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2015
						]
					},
					"id": 2016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1151,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1152,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2015,
							"linearizedBaseContracts": [
								2015
							],
							"name": "Math",
							"nameLocation": "210:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1156,
									"members": [
										{
											"id": 1153,
											"name": "Down",
											"nameLocation": "245:4:6",
											"nodeType": "EnumValue",
											"src": "245:4:6"
										},
										{
											"id": 1154,
											"name": "Up",
											"nameLocation": "287:2:6",
											"nodeType": "EnumValue",
											"src": "287:2:6"
										},
										{
											"id": 1155,
											"name": "Zero",
											"nameLocation": "318:4:6",
											"nodeType": "EnumValue",
											"src": "318:4:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:6",
									"nodeType": "EnumDefinition",
									"src": "221:122:6"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "480:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1166,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "497:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1167,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "501:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1170,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "509:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:6",
													"trueExpression": {
														"id": 1169,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "505:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1165,
												"id": 1172,
												"nodeType": "Return",
												"src": "490:20:6"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "426:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "437:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:6"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "471:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:6"
									},
									"scope": 2015,
									"src": "413:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "655:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1184,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "672:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1185,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "676:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1188,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "684:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:6",
													"trueExpression": {
														"id": 1187,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "680:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1190,
												"nodeType": "Return",
												"src": "665:20:6"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:6"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "646:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:6"
									},
									"scope": 2015,
									"src": "588:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "876:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1202,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1203,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "935:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1205,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1206,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "941:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1207,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "945:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1209,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1201,
												"id": 1213,
												"nodeType": "Return",
												"src": "923:28:6"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "822:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "833:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:6"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "867:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:6"
									},
									"scope": 2015,
									"src": "805:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "1228:123:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "1316:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1229,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1218,
																			"src": "1330:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1232,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1233,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "1339:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1224,
												"id": 1238,
												"nodeType": "Return",
												"src": "1309:35:6"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1174:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1185:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:6"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1219:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:6"
									},
									"scope": 2015,
									"src": "1157:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "1765:4115:6",
										"statements": [
											{
												"id": 1361,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:6",
												"statements": [
													{
														"assignments": [
															1253
														],
														"declarations": [
															{
																"constant": false,
																"id": 1253,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1361,
																"src": "2096:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1252,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1254,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:6"
													},
													{
														"assignments": [
															1256
														],
														"declarations": [
															{
																"constant": false,
																"id": 1256,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1361,
																"src": "2168:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1255,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1257,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1253,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1253,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1253,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1256,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1243,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1243,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1245,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1245,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:6",
																"valueSize": 1
															}
														],
														"id": 1258,
														"nodeType": "InlineAssembly",
														"src": "2239:166:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1259,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "2486:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1267,
														"nodeType": "IfStatement",
														"src": "2482:368:6",
														"trueBody": {
															"id": 1266,
															"nodeType": "Block",
															"src": "2498:352:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1262,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "2816:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1263,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1247,
																			"src": "2824:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1251,
																	"id": 1265,
																	"nodeType": "Return",
																	"src": "2809:26:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1269,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "2960:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1270,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "2974:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1268,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1274,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:6"
													},
													{
														"assignments": [
															1276
														],
														"declarations": [
															{
																"constant": false,
																"id": 1276,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 1361,
																"src": "3261:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1275,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1277,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:6"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:6"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1247,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1253,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1253,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1253,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1256,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1256,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1276,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1276,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1276,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1243,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1245,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:6",
																"valueSize": 1
															}
														],
														"id": 1278,
														"nodeType": "InlineAssembly",
														"src": "3292:300:6"
													},
													{
														"assignments": [
															1280
														],
														"declarations": [
															{
																"constant": false,
																"id": 1280,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 1361,
																"src": "3899:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1288,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1281,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "3914:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:6",
																			"subExpression": {
																				"id": 1282,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1247,
																				"src": "3930:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1286,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:6"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1247,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1247,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1253,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1253,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1280,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1280,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1280,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1280,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1280,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:6",
																"valueSize": 1
															}
														],
														"id": 1289,
														"nodeType": "InlineAssembly",
														"src": "3960:371:6"
													},
													{
														"expression": {
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1290,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "4397:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1291,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "4406:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1292,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "4414:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1295,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:6"
													},
													{
														"assignments": [
															1297
														],
														"declarations": [
															{
																"constant": false,
																"id": 1297,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 1361,
																"src": "4736:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1296,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1304,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1299,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1247,
																			"src": "4759:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1301,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:6"
													},
													{
														"expression": {
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1305,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "4992:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1307,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "5007:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1308,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "5021:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1312,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:6"
													},
													{
														"expression": {
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1313,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "5061:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1315,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "5076:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1316,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "5090:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1320,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:6"
													},
													{
														"expression": {
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1321,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "5131:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1323,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "5146:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1324,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "5160:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1328,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:6"
													},
													{
														"expression": {
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1329,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "5201:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1331,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "5216:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1332,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "5230:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1336,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:6"
													},
													{
														"expression": {
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1337,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "5271:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1339,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "5286:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1340,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "5300:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1344,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:6"
													},
													{
														"expression": {
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1345,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "5342:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1347,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "5357:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1348,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "5371:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1352,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:6"
													},
													{
														"expression": {
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1353,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "5812:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1354,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "5821:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1355,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "5829:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1358,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:6"
													},
													{
														"expression": {
															"id": 1359,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "5857:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1251,
														"id": 1360,
														"nodeType": "Return",
														"src": "5850:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "1683:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "1694:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "1705:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:6"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "1749:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:6"
									},
									"scope": 2015,
									"src": "1667:4213:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "6122:189:6",
										"statements": [
											{
												"assignments": [
													1379
												],
												"declarations": [
													{
														"constant": false,
														"id": 1379,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "6132:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1385,
												"initialValue": {
													"arguments": [
														{
															"id": 1381,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "6156:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1382,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "6159:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1383,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "6162:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1380,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1363,
															1407
														],
														"referencedDeclaration": 1363,
														"src": "6149:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1156",
															"typeString": "enum Math.Rounding"
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1386,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "6188:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1156",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1387,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "6200:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1156_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:6",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1154,
															"src": "6200:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1156",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1391,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "6222:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1392,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "6225:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1393,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "6228:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1390,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1403,
												"nodeType": "IfStatement",
												"src": "6184:98:6",
												"trueBody": {
													"id": 1402,
													"nodeType": "Block",
													"src": "6246:36:6",
													"statements": [
														{
															"expression": {
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1398,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "6260:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1401,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1404,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1379,
													"src": "6298:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1377,
												"id": 1405,
												"nodeType": "Return",
												"src": "6291:13:6"
											}
										]
									},
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "6028:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "6039:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "6050:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "6071:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1156",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1371,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "6071:8:6"
													},
													"referencedDeclaration": 1156,
													"src": "6071:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1156",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:6"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "6113:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:6"
									},
									"scope": 2015,
									"src": "6012:299:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "6587:1585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1415,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "6601:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1421,
												"nodeType": "IfStatement",
												"src": "6597:45:6",
												"trueBody": {
													"id": 1420,
													"nodeType": "Block",
													"src": "6609:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1414,
															"id": 1419,
															"nodeType": "Return",
															"src": "6623:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1423
												],
												"declarations": [
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "7321:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1426,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "7349:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1425,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1687,
																			1723
																		],
																		"referencedDeclaration": 1687,
																		"src": "7344:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1430,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:6"
											},
											{
												"id": 1517,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:6",
												"statements": [
													{
														"expression": {
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1433,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "7782:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1434,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1423,
																				"src": "7792:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1435,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1410,
																					"src": "7801:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1436,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1423,
																					"src": "7805:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1439,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1443,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:6"
													},
													{
														"expression": {
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1444,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "7831:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1445,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1423,
																				"src": "7841:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1446,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1410,
																					"src": "7850:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1447,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1423,
																					"src": "7854:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1450,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1454,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:6"
													},
													{
														"expression": {
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1455,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "7880:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1456,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1423,
																				"src": "7890:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1457,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1410,
																					"src": "7899:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1458,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1423,
																					"src": "7903:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1461,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1465,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:6"
													},
													{
														"expression": {
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1466,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "7929:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1467,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1423,
																				"src": "7939:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1468,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1410,
																					"src": "7948:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1469,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1423,
																					"src": "7952:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1472,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1476,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:6"
													},
													{
														"expression": {
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1477,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "7978:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1478,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1423,
																				"src": "7988:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1479,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1410,
																					"src": "7997:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1480,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1423,
																					"src": "8001:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1483,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1487,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:6"
													},
													{
														"expression": {
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "8027:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1489,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1423,
																				"src": "8037:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1490,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1410,
																					"src": "8046:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1491,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1423,
																					"src": "8050:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1494,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1498,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:6"
													},
													{
														"expression": {
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1499,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "8076:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1500,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1423,
																				"src": "8086:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1501,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1410,
																					"src": "8095:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1502,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1423,
																					"src": "8099:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1505,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1509,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1511,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "8136:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1512,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1410,
																		"src": "8144:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1513,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "8148:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1510,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "8132:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1414,
														"id": 1516,
														"nodeType": "Return",
														"src": "8125:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "6544:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:6"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "6578:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:6"
									},
									"scope": 2015,
									"src": "6530:1642:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "8348:161:6",
										"statements": [
											{
												"id": 1553,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:6",
												"statements": [
													{
														"assignments": [
															1531
														],
														"declarations": [
															{
																"constant": false,
																"id": 1531,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1553,
																"src": "8382:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1535,
														"initialValue": {
															"arguments": [
																{
																	"id": 1533,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "8404:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1532,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1519,
																	1555
																],
																"referencedDeclaration": 1519,
																"src": "8399:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1536,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "8427:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1156",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1537,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1525,
																					"src": "8437:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1156",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1538,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1156,
																						"src": "8449:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1156_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1539,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1154,
																					"src": "8449:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1156",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1541,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1531,
																						"src": "8464:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1542,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1531,
																						"src": "8473:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1544,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1522,
																					"src": "8482:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1529,
														"id": 1552,
														"nodeType": "Return",
														"src": "8420:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "8286:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "8297:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1156",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1524,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1523,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "8297:8:6"
													},
													"referencedDeclaration": 1156,
													"src": "8297:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1156",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:6"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "8339:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:6"
									},
									"scope": 2015,
									"src": "8272:237:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "8694:922:6",
										"statements": [
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1686,
														"src": "8704:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"initialValue": {
													"hexValue": "30",
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:6"
											},
											{
												"id": 1683,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1567,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "8760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1581,
														"nodeType": "IfStatement",
														"src": "8756:99:6",
														"trueBody": {
															"id": 1580,
															"nodeType": "Block",
															"src": "8778:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1572,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "8796:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1575,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:6"
																},
																{
																	"expression": {
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1576,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "8827:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1579,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1582,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "8872:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1596,
														"nodeType": "IfStatement",
														"src": "8868:96:6",
														"trueBody": {
															"id": 1595,
															"nodeType": "Block",
															"src": "8889:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1587,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "8907:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1590,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:6"
																},
																{
																	"expression": {
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1591,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "8937:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1594,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1597,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "8981:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1611,
														"nodeType": "IfStatement",
														"src": "8977:96:6",
														"trueBody": {
															"id": 1610,
															"nodeType": "Block",
															"src": "8998:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1602,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "9016:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1605,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:6"
																},
																{
																	"expression": {
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "9046:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1609,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1612,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "9090:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1626,
														"nodeType": "IfStatement",
														"src": "9086:96:6",
														"trueBody": {
															"id": 1625,
															"nodeType": "Block",
															"src": "9107:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "9125:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1620,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:6"
																},
																{
																	"expression": {
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1621,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "9155:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1624,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "9199:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1641,
														"nodeType": "IfStatement",
														"src": "9195:93:6",
														"trueBody": {
															"id": 1640,
															"nodeType": "Block",
															"src": "9215:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1632,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "9233:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1635,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:6"
																},
																{
																	"expression": {
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1636,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "9262:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1639,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1642,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "9305:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1656,
														"nodeType": "IfStatement",
														"src": "9301:93:6",
														"trueBody": {
															"id": 1655,
															"nodeType": "Block",
															"src": "9321:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1647,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "9339:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1650,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:6"
																},
																{
																	"expression": {
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1651,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "9368:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1654,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1657,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "9411:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1671,
														"nodeType": "IfStatement",
														"src": "9407:93:6",
														"trueBody": {
															"id": 1670,
															"nodeType": "Block",
															"src": "9427:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1662,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "9445:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1665,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:6"
																},
																{
																	"expression": {
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1666,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "9474:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1669,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1672,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "9517:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1682,
														"nodeType": "IfStatement",
														"src": "9513:64:6",
														"trueBody": {
															"id": 1681,
															"nodeType": "Block",
															"src": "9533:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1677,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "9551:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1680,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1684,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1564,
													"src": "9603:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1562,
												"id": 1685,
												"nodeType": "Return",
												"src": "9596:13:6"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:6",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "8647:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:6"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "8685:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:6"
									},
									"scope": 2015,
									"src": "8633:983:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "9849:165:6",
										"statements": [
											{
												"id": 1721,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:6",
												"statements": [
													{
														"assignments": [
															1699
														],
														"declarations": [
															{
																"constant": false,
																"id": 1699,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1721,
																"src": "9883:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1698,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1703,
														"initialValue": {
															"arguments": [
																{
																	"id": 1701,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "9905:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1700,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1687,
																	1723
																],
																"referencedDeclaration": 1687,
																"src": "9900:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1704,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "9932:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1156",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1705,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1693,
																					"src": "9942:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1156",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1706,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1156,
																						"src": "9954:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1156_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1707,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1154,
																					"src": "9954:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1156",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1711,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1709,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1710,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1699,
																						"src": "9974:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1712,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1690,
																					"src": "9983:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1718,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1697,
														"id": 1720,
														"nodeType": "Return",
														"src": "9925:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "9783:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "9798:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1156",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1692,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1691,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "9798:8:6"
													},
													"referencedDeclaration": 1156,
													"src": "9798:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1156",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:6"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "9840:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:6"
									},
									"scope": 2015,
									"src": "9769:245:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "10201:854:6",
										"statements": [
											{
												"assignments": [
													1732
												],
												"declarations": [
													{
														"constant": false,
														"id": 1732,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1851,
														"src": "10211:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"hexValue": "30",
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:6"
											},
											{
												"id": 1848,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1735,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "10267:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1751,
														"nodeType": "IfStatement",
														"src": "10263:103:6",
														"trueBody": {
															"id": 1750,
															"nodeType": "Block",
															"src": "10286:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1740,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "10304:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1745,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:6"
																},
																{
																	"expression": {
																		"id": 1748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1746,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1732,
																			"src": "10339:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1749,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1752,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "10383:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1768,
														"nodeType": "IfStatement",
														"src": "10379:103:6",
														"trueBody": {
															"id": 1767,
															"nodeType": "Block",
															"src": "10402:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1757,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "10420:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1762,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:6"
																},
																{
																	"expression": {
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1763,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1732,
																			"src": "10455:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1766,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1769,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "10499:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1785,
														"nodeType": "IfStatement",
														"src": "10495:103:6",
														"trueBody": {
															"id": 1784,
															"nodeType": "Block",
															"src": "10518:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1774,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "10536:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1779,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:6"
																},
																{
																	"expression": {
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1780,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1732,
																			"src": "10571:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1783,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1786,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "10615:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1802,
														"nodeType": "IfStatement",
														"src": "10611:100:6",
														"trueBody": {
															"id": 1801,
															"nodeType": "Block",
															"src": "10633:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1791,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "10651:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1792,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1796,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:6"
																},
																{
																	"expression": {
																		"id": 1799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1797,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1732,
																			"src": "10685:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1800,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1803,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "10728:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1819,
														"nodeType": "IfStatement",
														"src": "10724:100:6",
														"trueBody": {
															"id": 1818,
															"nodeType": "Block",
															"src": "10746:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1808,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "10764:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1813,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:6"
																},
																{
																	"expression": {
																		"id": 1816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1814,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1732,
																			"src": "10798:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1817,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1820,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "10841:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1836,
														"nodeType": "IfStatement",
														"src": "10837:100:6",
														"trueBody": {
															"id": 1835,
															"nodeType": "Block",
															"src": "10859:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1825,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "10877:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1827,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1830,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:6"
																},
																{
																	"expression": {
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1831,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1732,
																			"src": "10911:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1834,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1837,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "10954:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1847,
														"nodeType": "IfStatement",
														"src": "10950:66:6",
														"trueBody": {
															"id": 1846,
															"nodeType": "Block",
															"src": "10972:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1842,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1732,
																			"src": "10990:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1845,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1849,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1732,
													"src": "11042:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1730,
												"id": 1850,
												"nodeType": "Return",
												"src": "11035:13:6"
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:6",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "10154:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:6"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "10192:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:6"
									},
									"scope": 2015,
									"src": "10139:916:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "11290:167:6",
										"statements": [
											{
												"id": 1886,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:6",
												"statements": [
													{
														"assignments": [
															1864
														],
														"declarations": [
															{
																"constant": false,
																"id": 1864,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1886,
																"src": "11324:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1863,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1868,
														"initialValue": {
															"arguments": [
																{
																	"id": 1866,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1855,
																	"src": "11347:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1865,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1852,
																	1888
																],
																"referencedDeclaration": 1852,
																"src": "11341:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1869,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "11374:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1156",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1870,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1858,
																					"src": "11384:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1156",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1871,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1156,
																						"src": "11396:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1156_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1872,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1154,
																					"src": "11396:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1156",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1878,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1876,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1874,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1875,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1864,
																						"src": "11417:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1877,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1855,
																					"src": "11426:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1862,
														"id": 1885,
														"nodeType": "Return",
														"src": "11367:73:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "11224:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "11239:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1156",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1857,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1856,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "11239:8:6"
													},
													"referencedDeclaration": 1156,
													"src": "11239:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1156",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:6"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "11281:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:6"
									},
									"scope": 2015,
									"src": "11209:248:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "11771:600:6",
										"statements": [
											{
												"assignments": [
													1897
												],
												"declarations": [
													{
														"constant": false,
														"id": 1897,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1974,
														"src": "11781:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1896,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1899,
												"initialValue": {
													"hexValue": "30",
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:6"
											},
											{
												"id": 1971,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1900,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "11837:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1914,
														"nodeType": "IfStatement",
														"src": "11833:98:6",
														"trueBody": {
															"id": 1913,
															"nodeType": "Block",
															"src": "11855:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1905,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1891,
																			"src": "11873:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1908,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:6"
																},
																{
																	"expression": {
																		"id": 1911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1909,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1897,
																			"src": "11904:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1912,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1915,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "11948:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1929,
														"nodeType": "IfStatement",
														"src": "11944:95:6",
														"trueBody": {
															"id": 1928,
															"nodeType": "Block",
															"src": "11965:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1920,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1891,
																			"src": "11983:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1923,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:6"
																},
																{
																	"expression": {
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1924,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1897,
																			"src": "12013:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1927,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1930,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "12056:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1944,
														"nodeType": "IfStatement",
														"src": "12052:95:6",
														"trueBody": {
															"id": 1943,
															"nodeType": "Block",
															"src": "12073:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1935,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1891,
																			"src": "12091:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1938,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:6"
																},
																{
																	"expression": {
																		"id": 1941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1939,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1897,
																			"src": "12121:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1942,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1945,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "12164:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1959,
														"nodeType": "IfStatement",
														"src": "12160:95:6",
														"trueBody": {
															"id": 1958,
															"nodeType": "Block",
															"src": "12181:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1950,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1891,
																			"src": "12199:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1953,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:6"
																},
																{
																	"expression": {
																		"id": 1956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1954,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1897,
																			"src": "12229:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1957,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1960,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "12272:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1970,
														"nodeType": "IfStatement",
														"src": "12268:64:6",
														"trueBody": {
															"id": 1969,
															"nodeType": "Block",
															"src": "12288:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1965,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1897,
																			"src": "12306:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1968,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1972,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1897,
													"src": "12358:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1895,
												"id": 1973,
												"nodeType": "Return",
												"src": "12351:13:6"
											}
										]
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:6",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "11724:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:6"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "11762:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:6"
									},
									"scope": 2015,
									"src": "11708:663:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "12608:174:6",
										"statements": [
											{
												"id": 2012,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:6",
												"statements": [
													{
														"assignments": [
															1987
														],
														"declarations": [
															{
																"constant": false,
																"id": 1987,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 2012,
																"src": "12642:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1986,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1991,
														"initialValue": {
															"arguments": [
																{
																	"id": 1989,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1978,
																	"src": "12666:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1988,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1975,
																	2014
																],
																"referencedDeclaration": 1975,
																"src": "12659:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1992,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1987,
																"src": "12693:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1156",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1993,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1981,
																					"src": "12703:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1156",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1994,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1156,
																						"src": "12715:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1156_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1995,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1154,
																					"src": "12715:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1156",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2004,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2002,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1997,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2000,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1998,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1987,
																									"src": "12736:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1999,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2001,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2003,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1978,
																					"src": "12751:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2009,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1985,
														"id": 2011,
														"nodeType": "Return",
														"src": "12686:79:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1976,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:6",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "12542:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "12557:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1156",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1980,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1979,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1156,
														"src": "12557:8:6"
													},
													"referencedDeclaration": 1156,
													"src": "12557:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1156",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:6"
									},
									"returnParameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "12599:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:6"
									},
									"scope": 2015,
									"src": "12526:256:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2016,
							"src": "202:12582:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2120
						]
					},
					"id": 2121,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2018,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:7",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2120,
							"linearizedBaseContracts": [
								2120
							],
							"name": "SignedMath",
							"nameLocation": "223:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "375:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2028,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "392:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2029,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "396:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2032,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2023,
														"src": "404:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:7",
													"trueExpression": {
														"id": 2031,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "400:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2027,
												"id": 2034,
												"nodeType": "Return",
												"src": "385:20:7"
											}
										]
									},
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:7",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "324:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2020,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "334:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2022,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:7"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "367:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2025,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:7"
									},
									"scope": 2120,
									"src": "311:101:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2053,
										"nodeType": "Block",
										"src": "554:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2046,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2039,
															"src": "571:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2047,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "575:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2050,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "583:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:7",
													"trueExpression": {
														"id": 2049,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2039,
														"src": "579:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2045,
												"id": 2052,
												"nodeType": "Return",
												"src": "564:20:7"
											}
										]
									},
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:7",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "503:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2038,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "513:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2040,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:7"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "546:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2043,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:7"
									},
									"scope": 2120,
									"src": "490:101:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "796:162:7",
										"statements": [
											{
												"assignments": [
													2065
												],
												"declarations": [
													{
														"constant": false,
														"id": 2065,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 2097,
														"src": "858:8:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2064,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2078,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2066,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2057,
																	"src": "870:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2067,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2059,
																	"src": "874:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2069,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2070,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2057,
																				"src": "881:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2071,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2059,
																				"src": "885:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2073,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2076,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2079,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "910:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2084,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2065,
																						"src": "930:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2083,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2082,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2080,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2089,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2057,
																				"src": "944:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2090,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2059,
																				"src": "948:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2092,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2094,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2063,
												"id": 2096,
												"nodeType": "Return",
												"src": "903:48:7"
											}
										]
									},
									"documentation": {
										"id": 2055,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:7",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "745:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2056,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "755:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2058,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:7"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "788:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2061,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:7"
									},
									"scope": 2120,
									"src": "728:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2118,
										"nodeType": "Block",
										"src": "1102:158:7",
										"statements": [
											{
												"id": 2117,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2108,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2101,
																			"src": "1227:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:7",
																		"subExpression": {
																			"id": 2112,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2101,
																			"src": "1241:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:7",
																	"trueExpression": {
																		"id": 2111,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2101,
																		"src": "1236:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2106,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2105,
														"id": 2116,
														"nodeType": "Return",
														"src": "1212:31:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:7",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "1060:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2100,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:7"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "1093:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:7"
									},
									"scope": 2120,
									"src": "1047:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2121,
							"src": "215:1047:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:7"
				},
				"id": 7
			},
			"saleIDO\\ZNS.sol": {
				"ast": {
					"absolutePath": "saleIDO\\ZNS.sol",
					"exportedSymbols": {
						"Context": [
							2142
						],
						"ECDSA": [
							945
						],
						"EIP712": [
							1149
						],
						"ERC20": [
							2825
						],
						"ERC20Permit": [
							3071
						],
						"IERC20": [
							2219
						],
						"IERC20Metadata": [
							2242
						],
						"IERC20Permit": [
							2859
						],
						"IERC5267": [
							24
						],
						"Math": [
							2015
						],
						"Nonces": [
							2930
						],
						"ShortString": [
							29
						],
						"ShortStrings": [
							240
						],
						"SignedMath": [
							2120
						],
						"StorageSlot": [
							350
						],
						"Strings": [
							579
						],
						"ZNS": [
							3098
						]
					},
					"id": 3099,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2123,
								"nodeType": "StructuredDocumentation",
								"src": "143:505:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2142,
							"linearizedBaseContracts": [
								2142
							],
							"name": "Context",
							"nameLocation": "668:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2131,
										"nodeType": "Block",
										"src": "745:36:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2128,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "763:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "767:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "763:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2127,
												"id": 2130,
												"nodeType": "Return",
												"src": "756:17:8"
											}
										]
									},
									"id": 2132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "692:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "702:2:8"
									},
									"returnParameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "736:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:9:8"
									},
									"scope": 2142,
									"src": "683:98:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "856:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2137,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "874:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "878:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "874:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2136,
												"id": 2139,
												"nodeType": "Return",
												"src": "867:15:8"
											}
										]
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "798:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "806:2:8"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "840:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "840:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:16:8"
									},
									"scope": 2142,
									"src": "789:101:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3099,
							"src": "650:243:8",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1034:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2144,
								"nodeType": "StructuredDocumentation",
								"src": "1061:72:8",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2219,
							"linearizedBaseContracts": [
								2219
							],
							"name": "IERC20",
							"nameLocation": "1145:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2145,
										"nodeType": "StructuredDocumentation",
										"src": "1159:163:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2153,
									"name": "Transfer",
									"nameLocation": "1334:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1359:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "1343:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1381:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "1365:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1393:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "1385:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1342:57:8"
									},
									"src": "1328:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2154,
										"nodeType": "StructuredDocumentation",
										"src": "1408:151:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2162,
									"name": "Approval",
									"nameLocation": "1571:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1596:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "1580:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1619:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "1603:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1636:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "1628:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:63:8"
									},
									"src": "1565:78:8"
								},
								{
									"documentation": {
										"id": 2163,
										"nodeType": "StructuredDocumentation",
										"src": "1651:68:8",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1734:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1745:2:8"
									},
									"returnParameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "1771:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1770:9:8"
									},
									"scope": 2219,
									"src": "1725:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2169,
										"nodeType": "StructuredDocumentation",
										"src": "1788:74:8",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1877:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1895:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "1887:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:17:8"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "1927:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1926:9:8"
									},
									"scope": 2219,
									"src": "1868:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2177,
										"nodeType": "StructuredDocumentation",
										"src": "1944:208:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2167:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2184:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "2176:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2176:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2196:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "2188:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:28:8"
									},
									"returnParameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "2222:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2222:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:6:8"
									},
									"scope": 2219,
									"src": "2158:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2187,
										"nodeType": "StructuredDocumentation",
										"src": "2236:270:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2521:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2539:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "2531:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2531:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2554:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "2546:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:32:8"
									},
									"returnParameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "2586:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2586:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:9:8"
									},
									"scope": 2219,
									"src": "2512:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "2603:655:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3273:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3289:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "3281:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3281:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3306:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "3298:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3280:33:8"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "3332:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3332:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3331:6:8"
									},
									"scope": 2219,
									"src": "3264:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "3346:295:8",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3656:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3687:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3679:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3679:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3710:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3702:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3702:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3731:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3723:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3668:76:8"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3763:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3762:6:8"
									},
									"scope": 2219,
									"src": "3647:122:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3099,
							"src": "1135:2637:8",
							"usedErrors": [],
							"usedEvents": [
								2153,
								2162
							]
						},
						{
							"id": 2220,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3936:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2222,
										"name": "IERC20",
										"nameLocations": [
											"4115:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2219,
										"src": "4115:6:8"
									},
									"id": 2223,
									"nodeType": "InheritanceSpecifier",
									"src": "4115:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2221,
								"nodeType": "StructuredDocumentation",
								"src": "3965:120:8",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 2242,
							"linearizedBaseContracts": [
								2242,
								2219
							],
							"name": "IERC20Metadata",
							"nameLocation": "4097:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2224,
										"nodeType": "StructuredDocumentation",
										"src": "4129:56:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4200:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:2:8"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "4230:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4230:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:15:8"
									},
									"scope": 2242,
									"src": "4191:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2230,
										"nodeType": "StructuredDocumentation",
										"src": "4253:58:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4326:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4332:2:8"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "4358:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4358:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4357:15:8"
									},
									"scope": 2242,
									"src": "4317:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "4381:67:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4463:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4471:2:8"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "4497:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4497:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4496:7:8"
									},
									"scope": 2242,
									"src": "4454:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3099,
							"src": "4087:420:8",
							"usedErrors": [],
							"usedEvents": [
								2153,
								2162
							]
						},
						{
							"id": 2243,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4646:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2245,
										"name": "Context",
										"nameLocations": [
											"5902:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2142,
										"src": "5902:7:8"
									},
									"id": 2246,
									"nodeType": "InheritanceSpecifier",
									"src": "5902:7:8"
								},
								{
									"baseName": {
										"id": 2247,
										"name": "IERC20",
										"nameLocations": [
											"5911:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2219,
										"src": "5911:6:8"
									},
									"id": 2248,
									"nodeType": "InheritanceSpecifier",
									"src": "5911:6:8"
								},
								{
									"baseName": {
										"id": 2249,
										"name": "IERC20Metadata",
										"nameLocations": [
											"5919:14:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2242,
										"src": "5919:14:8"
									},
									"id": 2250,
									"nodeType": "InheritanceSpecifier",
									"src": "5919:14:8"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2244,
								"nodeType": "StructuredDocumentation",
								"src": "4679:1194:8",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 2825,
							"linearizedBaseContracts": [
								2825,
								2242,
								2219,
								2142
							],
							"name": "ERC20",
							"nameLocation": "5893:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2254,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "5977:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2825,
									"src": "5941:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2253,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2251,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5949:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5941:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2252,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5960:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2260,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "6051:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2825,
									"src": "5995:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 2259,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2255,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "6003:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5995:47:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2258,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2256,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6022:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "6014:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2257,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6033:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2262,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "6087:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2825,
									"src": "6071:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6071:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2264,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "6123:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2825,
									"src": "6108:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2263,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6108:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2266,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "6150:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 2825,
									"src": "6135:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2265,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6135:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2282,
										"nodeType": "Block",
										"src": "6534:60:8",
										"statements": [
											{
												"expression": {
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2274,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2264,
														"src": "6545:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2275,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "6553:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6545:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2277,
												"nodeType": "ExpressionStatement",
												"src": "6545:13:8"
											},
											{
												"expression": {
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2278,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "6569:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2279,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2271,
														"src": "6579:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6569:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2281,
												"nodeType": "ExpressionStatement",
												"src": "6569:17:8"
											}
										]
									},
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "6166:306:8",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 2283,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6504:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "6490:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6490:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6525:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "6511:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6511:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6489:44:8"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6534:0:8"
									},
									"scope": 2825,
									"src": "6478:116:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2229
									],
									"body": {
										"id": 2292,
										"nodeType": "Block",
										"src": "6733:31:8",
										"statements": [
											{
												"expression": {
													"id": 2290,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2264,
													"src": "6751:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2289,
												"id": 2291,
												"nodeType": "Return",
												"src": "6744:12:8"
											}
										]
									},
									"documentation": {
										"id": 2284,
										"nodeType": "StructuredDocumentation",
										"src": "6602:56:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6673:4:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2286,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6700:8:8"
									},
									"parameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6677:2:8"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "6718:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6718:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6717:15:8"
									},
									"scope": 2825,
									"src": "6664:100:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2235
									],
									"body": {
										"id": 2302,
										"nodeType": "Block",
										"src": "6954:33:8",
										"statements": [
											{
												"expression": {
													"id": 2300,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2266,
													"src": "6972:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2299,
												"id": 2301,
												"nodeType": "Return",
												"src": "6965:14:8"
											}
										]
									},
									"documentation": {
										"id": 2294,
										"nodeType": "StructuredDocumentation",
										"src": "6772:105:8",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 2303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6892:6:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2296,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6921:8:8"
									},
									"parameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6898:2:8"
									},
									"returnParameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "6939:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2297,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6939:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6938:15:8"
									},
									"scope": 2825,
									"src": "6883:104:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2241
									],
									"body": {
										"id": 2312,
										"nodeType": "Block",
										"src": "7691:28:8",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7709:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 2309,
												"id": 2311,
												"nodeType": "Return",
												"src": "7702:9:8"
											}
										]
									},
									"documentation": {
										"id": 2304,
										"nodeType": "StructuredDocumentation",
										"src": "6995:625:8",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 2313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7635:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2306,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7666:8:8"
									},
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7643:2:8"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "7684:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2307,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7684:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7683:7:8"
									},
									"scope": 2825,
									"src": "7626:93:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2168
									],
									"body": {
										"id": 2322,
										"nodeType": "Block",
										"src": "7854:38:8",
										"statements": [
											{
												"expression": {
													"id": 2320,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2262,
													"src": "7872:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2319,
												"id": 2321,
												"nodeType": "Return",
												"src": "7865:19:8"
											}
										]
									},
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "7727:51:8",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 2323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7793:11:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2316,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7827:8:8"
									},
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7804:2:8"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "7845:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7845:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7844:9:8"
									},
									"scope": 2825,
									"src": "7784:108:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2176
									],
									"body": {
										"id": 2336,
										"nodeType": "Block",
										"src": "8038:44:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2332,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2254,
														"src": "8056:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2334,
													"indexExpression": {
														"id": 2333,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2326,
														"src": "8066:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8056:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2331,
												"id": 2335,
												"nodeType": "Return",
												"src": "8049:25:8"
											}
										]
									},
									"documentation": {
										"id": 2324,
										"nodeType": "StructuredDocumentation",
										"src": "7900:49:8",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 2337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7964:9:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2328,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8011:8:8"
									},
									"parameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7982:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "7974:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7974:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7973:17:8"
									},
									"returnParameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "8029:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8029:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8028:9:8"
									},
									"scope": 2825,
									"src": "7955:127:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2186
									],
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "8373:108:8",
										"statements": [
											{
												"assignments": [
													2349
												],
												"declarations": [
													{
														"constant": false,
														"id": 2349,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8392:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2361,
														"src": "8384:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2348,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8384:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2352,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2350,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "8400:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8400:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8384:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2354,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "8433:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2355,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2340,
															"src": "8440:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2356,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "8444:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2353,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2585,
														"src": "8423:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8423:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2358,
												"nodeType": "ExpressionStatement",
												"src": "8423:28:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8469:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2347,
												"id": 2360,
												"nodeType": "Return",
												"src": "8462:11:8"
											}
										]
									},
									"documentation": {
										"id": 2338,
										"nodeType": "StructuredDocumentation",
										"src": "8090:192:8",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8297:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2344,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8349:8:8"
									},
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8314:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "8306:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8306:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8326:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "8318:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8318:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8305:28:8"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "8367:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8367:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8366:6:8"
									},
									"scope": 2825,
									"src": "8288:193:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2196
									],
									"body": {
										"id": 2379,
										"nodeType": "Block",
										"src": "8642:53:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2373,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2260,
															"src": "8660:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2375,
														"indexExpression": {
															"id": 2374,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "8672:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8660:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2377,
													"indexExpression": {
														"id": 2376,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "8679:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8660:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2372,
												"id": 2378,
												"nodeType": "Return",
												"src": "8653:34:8"
											}
										]
									},
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "8489:49:8",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 2380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8553:9:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2369,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8615:8:8"
									},
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8571:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "8563:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8563:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8586:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "8578:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8578:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8562:32:8"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "8633:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8633:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:9:8"
									},
									"scope": 2825,
									"src": "8544:151:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2206
									],
									"body": {
										"id": 2404,
										"nodeType": "Block",
										"src": "9104:112:8",
										"statements": [
											{
												"assignments": [
													2392
												],
												"declarations": [
													{
														"constant": false,
														"id": 2392,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9123:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2404,
														"src": "9115:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2391,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9115:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2393,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "9131:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9131:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9115:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2397,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "9163:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2398,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2383,
															"src": "9170:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2399,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "9179:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2396,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2759,
														"src": "9154:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9154:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2401,
												"nodeType": "ExpressionStatement",
												"src": "9154:32:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9204:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2390,
												"id": 2403,
												"nodeType": "Return",
												"src": "9197:11:8"
											}
										]
									},
									"documentation": {
										"id": 2381,
										"nodeType": "StructuredDocumentation",
										"src": "8703:306:8",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 2405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9024:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2387,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9080:8:8"
									},
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9040:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "9032:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9032:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9057:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "9049:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9049:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9031:33:8"
									},
									"returnParameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "9098:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9098:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9097:6:8"
									},
									"scope": 2825,
									"src": "9015:201:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2218
									],
									"body": {
										"id": 2437,
										"nodeType": "Block",
										"src": "9933:158:8",
										"statements": [
											{
												"assignments": [
													2419
												],
												"declarations": [
													{
														"constant": false,
														"id": 2419,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "9952:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2437,
														"src": "9944:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2418,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9944:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2422,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2420,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "9962:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9962:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9944:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2424,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2408,
															"src": "10001:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2425,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "10007:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "10016:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2423,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2802,
														"src": "9985:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9985:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2428,
												"nodeType": "ExpressionStatement",
												"src": "9985:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2430,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2408,
															"src": "10044:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2431,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2410,
															"src": "10050:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2432,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "10054:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2429,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2585,
														"src": "10034:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10034:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2434,
												"nodeType": "ExpressionStatement",
												"src": "10034:27:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10079:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2417,
												"id": 2436,
												"nodeType": "Return",
												"src": "10072:11:8"
											}
										]
									},
									"documentation": {
										"id": 2406,
										"nodeType": "StructuredDocumentation",
										"src": "9224:566:8",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 2438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9805:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2414,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9909:8:8"
									},
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9836:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "9828:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9828:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9859:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "9851:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9851:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9880:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "9872:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9872:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9817:76:8"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "9927:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9927:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9926:6:8"
									},
									"scope": 2825,
									"src": "9796:295:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2466,
										"nodeType": "Block",
										"src": "10594:144:8",
										"statements": [
											{
												"assignments": [
													2449
												],
												"declarations": [
													{
														"constant": false,
														"id": 2449,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10613:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2466,
														"src": "10605:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2448,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10605:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2452,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2450,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "10621:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10621:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10605:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2454,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2449,
															"src": "10653:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2455,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2441,
															"src": "10660:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2457,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2449,
																		"src": "10679:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2458,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "10686:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2456,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2380,
																	"src": "10669:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10669:25:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2460,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "10697:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10669:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2453,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2759,
														"src": "10644:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10644:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2463,
												"nodeType": "ExpressionStatement",
												"src": "10644:64:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10726:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2447,
												"id": 2465,
												"nodeType": "Return",
												"src": "10719:11:8"
											}
										]
									},
									"documentation": {
										"id": 2439,
										"nodeType": "StructuredDocumentation",
										"src": "10099:395:8",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 2467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "10509:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10535:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "10527:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10527:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "10552:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "10544:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10544:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10526:37:8"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "10588:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10588:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10587:6:8"
									},
									"scope": 2825,
									"src": "10500:238:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2507,
										"nodeType": "Block",
										"src": "11340:337:8",
										"statements": [
											{
												"assignments": [
													2478
												],
												"declarations": [
													{
														"constant": false,
														"id": 2478,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11359:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2507,
														"src": "11351:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2477,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11351:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2481,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2479,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "11367:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11367:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11351:28:8"
											},
											{
												"assignments": [
													2483
												],
												"declarations": [
													{
														"constant": false,
														"id": 2483,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11398:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 2507,
														"src": "11390:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2482,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11390:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2488,
												"initialValue": {
													"arguments": [
														{
															"id": 2485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2478,
															"src": "11427:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2486,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "11434:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2484,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "11417:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11390:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2490,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2483,
																"src": "11461:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2491,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "11481:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11461:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11498:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 2489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11453:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11453:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2495,
												"nodeType": "ExpressionStatement",
												"src": "11453:85:8"
											},
											{
												"id": 2504,
												"nodeType": "UncheckedBlock",
												"src": "11549:97:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2497,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2478,
																	"src": "11583:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2498,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "11590:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2499,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2483,
																		"src": "11599:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2500,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2472,
																		"src": "11618:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11599:34:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2496,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2759,
																"src": "11574:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11574:60:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2503,
														"nodeType": "ExpressionStatement",
														"src": "11574:60:8"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11665:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2476,
												"id": 2506,
												"nodeType": "Return",
												"src": "11658:11:8"
											}
										]
									},
									"documentation": {
										"id": 2468,
										"nodeType": "StructuredDocumentation",
										"src": "10746:489:8",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 2508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "11250:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11276:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "11268:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11268:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "11293:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "11285:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11285:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11267:42:8"
									},
									"returnParameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "11334:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11334:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11333:6:8"
									},
									"scope": 2825,
									"src": "11241:436:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2584,
										"nodeType": "Block",
										"src": "12259:728:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2519,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2511,
																"src": "12278:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12294:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12286:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2520,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12286:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12286:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12278:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12298:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 2518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12270:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12270:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2527,
												"nodeType": "ExpressionStatement",
												"src": "12270:68:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2529,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2513,
																"src": "12357:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12371:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12363:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2530,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12363:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12363:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12357:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12375:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 2528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12349:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12349:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2537,
												"nodeType": "ExpressionStatement",
												"src": "12349:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2511,
															"src": "12447:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2513,
															"src": "12453:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2541,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "12457:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2538,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2813,
														"src": "12426:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12426:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2543,
												"nodeType": "ExpressionStatement",
												"src": "12426:38:8"
											},
											{
												"assignments": [
													2545
												],
												"declarations": [
													{
														"constant": false,
														"id": 2545,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "12485:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 2584,
														"src": "12477:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12477:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2549,
												"initialValue": {
													"baseExpression": {
														"id": 2546,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2254,
														"src": "12499:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2548,
													"indexExpression": {
														"id": 2547,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2511,
														"src": "12509:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12499:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12477:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2551,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2545,
																"src": "12533:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2552,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "12548:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12533:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12556:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 2550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12525:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12525:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2556,
												"nodeType": "ExpressionStatement",
												"src": "12525:72:8"
											},
											{
												"id": 2571,
												"nodeType": "UncheckedBlock",
												"src": "12608:278:8",
												"statements": [
													{
														"expression": {
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2557,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2254,
																	"src": "12633:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2559,
																"indexExpression": {
																	"id": 2558,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2511,
																	"src": "12643:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12633:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2560,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2545,
																	"src": "12651:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2561,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2515,
																	"src": "12665:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12651:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12633:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2564,
														"nodeType": "ExpressionStatement",
														"src": "12633:38:8"
													},
													{
														"expression": {
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2565,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2254,
																	"src": "12851:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2567,
																"indexExpression": {
																	"id": 2566,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2513,
																	"src": "12861:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12851:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2568,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "12868:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12851:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2570,
														"nodeType": "ExpressionStatement",
														"src": "12851:23:8"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2573,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2511,
															"src": "12912:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2574,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2513,
															"src": "12918:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "12922:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2572,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "12903:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12903:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2577,
												"nodeType": "EmitStatement",
												"src": "12898:31:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2579,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2511,
															"src": "12962:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2580,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2513,
															"src": "12968:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2581,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "12972:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2578,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2824,
														"src": "12942:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12942:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2583,
												"nodeType": "ExpressionStatement",
												"src": "12942:37:8"
											}
										]
									},
									"documentation": {
										"id": 2509,
										"nodeType": "StructuredDocumentation",
										"src": "11685:456:8",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 2585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12156:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12184:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "12176:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12176:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12207:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "12199:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12199:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12228:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "12220:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12220:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12165:76:8"
									},
									"returnParameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12259:0:8"
									},
									"scope": 2825,
									"src": "12147:840:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2641,
										"nodeType": "Block",
										"src": "13339:483:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2594,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2588,
																"src": "13358:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13377:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13369:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2595,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13369:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13369:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13358:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13381:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 2593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13350:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13350:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2602,
												"nodeType": "ExpressionStatement",
												"src": "13350:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13457:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13449:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2604,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13449:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13449:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2608,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "13461:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2609,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2590,
															"src": "13470:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2603,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2813,
														"src": "13428:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13428:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2611,
												"nodeType": "ExpressionStatement",
												"src": "13428:49:8"
											},
											{
												"expression": {
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2612,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "13490:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2613,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2590,
														"src": "13506:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13490:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2615,
												"nodeType": "ExpressionStatement",
												"src": "13490:22:8"
											},
											{
												"id": 2622,
												"nodeType": "UncheckedBlock",
												"src": "13523:178:8",
												"statements": [
													{
														"expression": {
															"id": 2620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2616,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2254,
																	"src": "13661:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2618,
																"indexExpression": {
																	"id": 2617,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2588,
																	"src": "13671:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13661:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2619,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2590,
																"src": "13683:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13661:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2621,
														"nodeType": "ExpressionStatement",
														"src": "13661:28:8"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13733:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13725:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2624,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13725:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13725:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2628,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "13737:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2590,
															"src": "13746:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2623,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "13716:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13716:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2631,
												"nodeType": "EmitStatement",
												"src": "13711:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13794:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13786:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2633,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13786:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13786:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2637,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "13798:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2638,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2590,
															"src": "13807:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2632,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2824,
														"src": "13766:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13766:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2640,
												"nodeType": "ExpressionStatement",
												"src": "13766:48:8"
											}
										]
									},
									"documentation": {
										"id": 2586,
										"nodeType": "StructuredDocumentation",
										"src": "12995:273:8",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 2642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "13283:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13297:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "13289:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13289:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13314:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "13306:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13306:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13288:33:8"
									},
									"returnParameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13339:0:8"
									},
									"scope": 2825,
									"src": "13274:548:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2713,
										"nodeType": "Block",
										"src": "14220:610:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2651,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2645,
																"src": "14239:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14258:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14250:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2652,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14250:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14250:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14239:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 2657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14262:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 2650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14231:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14231:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2659,
												"nodeType": "ExpressionStatement",
												"src": "14231:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2661,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2645,
															"src": "14332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14349:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14341:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2662,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14341:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14341:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2666,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2647,
															"src": "14353:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2660,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2813,
														"src": "14311:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14311:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2668,
												"nodeType": "ExpressionStatement",
												"src": "14311:49:8"
											},
											{
												"assignments": [
													2670
												],
												"declarations": [
													{
														"constant": false,
														"id": 2670,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "14381:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 2713,
														"src": "14373:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2669,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14373:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2674,
												"initialValue": {
													"baseExpression": {
														"id": 2671,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2254,
														"src": "14398:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2673,
													"indexExpression": {
														"id": 2672,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2645,
														"src": "14408:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14398:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14373:43:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2676,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2670,
																"src": "14435:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2677,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2647,
																"src": "14453:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14435:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14461:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 2675,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14427:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14427:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2681,
												"nodeType": "ExpressionStatement",
												"src": "14427:71:8"
											},
											{
												"id": 2694,
												"nodeType": "UncheckedBlock",
												"src": "14509:198:8",
												"statements": [
													{
														"expression": {
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2682,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2254,
																	"src": "14534:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2684,
																"indexExpression": {
																	"id": 2683,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2645,
																	"src": "14544:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14534:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2685,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2670,
																	"src": "14555:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2686,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2647,
																	"src": "14572:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14555:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14534:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2689,
														"nodeType": "ExpressionStatement",
														"src": "14534:44:8"
													},
													{
														"expression": {
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2690,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "14673:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 2691,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2647,
																"src": "14689:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14673:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2693,
														"nodeType": "ExpressionStatement",
														"src": "14673:22:8"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2696,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2645,
															"src": "14733:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14750:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14742:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2697,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14742:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14742:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2701,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2647,
															"src": "14754:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2695,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "14724:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14724:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2703,
												"nodeType": "EmitStatement",
												"src": "14719:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2705,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2645,
															"src": "14794:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14811:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14803:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2706,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14803:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14803:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2710,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2647,
															"src": "14815:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2704,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2824,
														"src": "14774:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14774:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2712,
												"nodeType": "ExpressionStatement",
												"src": "14774:48:8"
											}
										]
									},
									"documentation": {
										"id": 2643,
										"nodeType": "StructuredDocumentation",
										"src": "13830:319:8",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 2714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "14164:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14178:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "14170:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14170:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14195:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "14187:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14187:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14169:33:8"
									},
									"returnParameters": {
										"id": 2649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14220:0:8"
									},
									"scope": 2825,
									"src": "14155:675:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2758,
										"nodeType": "Block",
										"src": "15385:263:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2725,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2717,
																"src": "15404:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15421:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15413:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2726,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15413:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15413:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15404:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15425:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 2724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15396:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15396:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2733,
												"nodeType": "ExpressionStatement",
												"src": "15396:68:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2735,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2719,
																"src": "15483:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15502:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15494:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2736,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15494:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15494:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15483:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15506:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 2734,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15475:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15475:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2743,
												"nodeType": "ExpressionStatement",
												"src": "15475:68:8"
											},
											{
												"expression": {
													"id": 2750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2744,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "15556:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2747,
															"indexExpression": {
																"id": 2745,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2717,
																"src": "15568:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15556:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2748,
														"indexExpression": {
															"id": 2746,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2719,
															"src": "15575:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15556:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2749,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2721,
														"src": "15586:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15556:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2751,
												"nodeType": "ExpressionStatement",
												"src": "15556:36:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2753,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2717,
															"src": "15617:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2754,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2719,
															"src": "15624:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2755,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "15633:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2752,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2162,
														"src": "15608:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15608:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2757,
												"nodeType": "EmitStatement",
												"src": "15603:37:8"
											}
										]
									},
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "14838:424:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 2759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15277:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15304:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "15296:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15296:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15328:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "15320:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15320:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15354:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "15346:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15285:82:8"
									},
									"returnParameters": {
										"id": 2723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15385:0:8"
									},
									"scope": 2825,
									"src": "15268:380:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2801,
										"nodeType": "Block",
										"src": "16063:329:8",
										"statements": [
											{
												"assignments": [
													2770
												],
												"declarations": [
													{
														"constant": false,
														"id": 2770,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "16082:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 2801,
														"src": "16074:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16074:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2775,
												"initialValue": {
													"arguments": [
														{
															"id": 2772,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2762,
															"src": "16111:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2773,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2764,
															"src": "16118:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2771,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "16101:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 2774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16101:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16074:52:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2776,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2770,
														"src": "16141:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16166:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2778,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16166:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 2777,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16161:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16161:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 2781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16175:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16161:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16141:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2800,
												"nodeType": "IfStatement",
												"src": "16137:248:8",
												"trueBody": {
													"id": 2799,
													"nodeType": "Block",
													"src": "16180:205:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2784,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2770,
																			"src": "16203:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2785,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2766,
																			"src": "16223:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16203:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 2787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16231:31:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 2783,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "16195:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16195:68:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2789,
															"nodeType": "ExpressionStatement",
															"src": "16195:68:8"
														},
														{
															"id": 2798,
															"nodeType": "UncheckedBlock",
															"src": "16278:96:8",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 2791,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2762,
																				"src": "16316:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2792,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2764,
																				"src": "16323:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2793,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2770,
																					"src": "16332:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2794,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2766,
																					"src": "16351:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16332:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2790,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2759,
																			"src": "16307:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 2796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16307:51:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2797,
																	"nodeType": "ExpressionStatement",
																	"src": "16307:51:8"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2760,
										"nodeType": "StructuredDocumentation",
										"src": "15656:277:8",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 2802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "15948:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15982:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "15974:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15974:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16006:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "15998:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15998:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16032:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "16024:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16024:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15963:82:8"
									},
									"returnParameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16063:0:8"
									},
									"scope": 2825,
									"src": "15939:453:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2812,
										"nodeType": "Block",
										"src": "17115:2:8",
										"statements": []
									},
									"documentation": {
										"id": 2803,
										"nodeType": "StructuredDocumentation",
										"src": "16400:586:8",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "17001:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17040:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "17032:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17032:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17063:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "17055:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17055:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17084:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "17076:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17076:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17021:76:8"
									},
									"returnParameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17115:0:8"
									},
									"scope": 2825,
									"src": "16992:125:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2823,
										"nodeType": "Block",
										"src": "17843:2:8",
										"statements": []
									},
									"documentation": {
										"id": 2814,
										"nodeType": "StructuredDocumentation",
										"src": "17125:590:8",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "17730:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17768:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "17760:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17760:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17791:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "17783:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17783:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17812:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "17804:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17804:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17749:76:8"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17843:0:8"
									},
									"scope": 2825,
									"src": "17721:124:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3099,
							"src": "5875:11973:8",
							"usedErrors": [],
							"usedEvents": [
								2153,
								2162
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2826,
								"nodeType": "StructuredDocumentation",
								"src": "17872:487:8",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 2859,
							"linearizedBaseContracts": [
								2859
							],
							"name": "IERC20Permit",
							"nameLocation": "18371:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2827,
										"nodeType": "StructuredDocumentation",
										"src": "18391:812:8",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 2844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "19218:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19243:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "19235:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19235:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19267:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "19259:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19259:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19293:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "19285:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19285:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "19317:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "19309:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19309:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "19342:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "19336:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2836,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19336:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "19362:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "19354:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2838,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19354:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "19382:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "19374:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2840,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19374:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19224:166:8"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19399:0:8"
									},
									"scope": 2859,
									"src": "19209:191:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2845,
										"nodeType": "StructuredDocumentation",
										"src": "19408:300:8",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 2852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "19723:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19738:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "19730:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19730:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19729:15:8"
									},
									"returnParameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "19768:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19767:9:8"
									},
									"scope": 2859,
									"src": "19714:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2853,
										"nodeType": "StructuredDocumentation",
										"src": "19785:130:8",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 2858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "19984:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20000:2:8"
									},
									"returnParameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2858,
												"src": "20026:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2855,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20025:9:8"
									},
									"scope": 2859,
									"src": "19975:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3099,
							"src": "18361:1677:8",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"id": 2860,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3099,
							"sourceUnit": 1150,
							"src": "20040:63:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 2861,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "20140:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2930,
							"linearizedBaseContracts": [
								2930
							],
							"name": "Nonces",
							"nameLocation": "20183:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2862,
										"nodeType": "StructuredDocumentation",
										"src": "20197:92:8",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 2868,
									"name": "InvalidAccountNonce",
									"nameLocation": "20301:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20329:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2868,
												"src": "20321:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20321:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "20346:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2868,
												"src": "20338:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20338:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20320:39:8"
									},
									"src": "20295:65:8"
								},
								{
									"constant": false,
									"id": 2872,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "20412:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 2930,
									"src": "20368:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2871,
										"keyName": "account",
										"keyNameLocation": "20384:7:8",
										"keyType": {
											"id": 2869,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "20376:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "20368:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2870,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "20395:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2884,
										"nodeType": "Block",
										"src": "20577:40:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2880,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2872,
														"src": "20595:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2882,
													"indexExpression": {
														"id": 2881,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2875,
														"src": "20603:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20595:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2879,
												"id": 2883,
												"nodeType": "Return",
												"src": "20588:21:8"
											}
										]
									},
									"documentation": {
										"id": 2873,
										"nodeType": "StructuredDocumentation",
										"src": "20428:74:8",
										"text": " @dev Returns an the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 2885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "20517:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20532:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "20524:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20524:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20523:15:8"
									},
									"returnParameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "20568:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20568:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20567:9:8"
									},
									"scope": 2930,
									"src": "20508:109:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2899,
										"nodeType": "Block",
										"src": "20807:333:8",
										"statements": [
											{
												"id": 2898,
												"nodeType": "UncheckedBlock",
												"src": "21013:120:8",
												"statements": [
													{
														"expression": {
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "21105:16:8",
															"subExpression": {
																"baseExpression": {
																	"id": 2893,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2872,
																	"src": "21105:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2895,
																"indexExpression": {
																	"id": 2894,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2888,
																	"src": "21113:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21105:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2892,
														"id": 2897,
														"nodeType": "Return",
														"src": "21098:23:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2886,
										"nodeType": "StructuredDocumentation",
										"src": "20625:107:8",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 2900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "20747:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20765:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "20757:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20757:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20756:15:8"
									},
									"returnParameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "20798:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20798:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20797:9:8"
									},
									"scope": 2930,
									"src": "20738:402:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2928,
										"nodeType": "Block",
										"src": "21347:179:8",
										"statements": [
											{
												"assignments": [
													2911
												],
												"declarations": [
													{
														"constant": false,
														"id": 2911,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "21366:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2928,
														"src": "21358:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2910,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21358:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2915,
												"initialValue": {
													"arguments": [
														{
															"id": 2913,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2903,
															"src": "21386:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2912,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2900,
														"src": "21376:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21376:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21358:34:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2916,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2905,
														"src": "21407:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2917,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2911,
														"src": "21416:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21407:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2925,
												"nodeType": "IfStatement",
												"src": "21403:91:8",
												"trueBody": {
													"id": 2924,
													"nodeType": "Block",
													"src": "21425:69:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2920,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2903,
																		"src": "21467:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2921,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2911,
																		"src": "21474:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2919,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2868,
																	"src": "21447:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 2922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21447:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2923,
															"nodeType": "RevertStatement",
															"src": "21440:42:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2926,
													"name": "current",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2911,
													"src": "21511:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2909,
												"id": 2927,
												"nodeType": "Return",
												"src": "21504:14:8"
											}
										]
									},
									"documentation": {
										"id": 2901,
										"nodeType": "StructuredDocumentation",
										"src": "21148:102:8",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 2929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "21265:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21290:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "21282:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21282:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "21305:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "21297:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21297:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21281:30:8"
									},
									"returnParameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "21338:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21338:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21337:9:8"
									},
									"scope": 2930,
									"src": "21256:270:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3099,
							"src": "20165:1364:8",
							"usedErrors": [
								2868
							],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2931,
										"name": "ERC20",
										"nameLocations": [
											"21566:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2825,
										"src": "21566:5:8"
									},
									"id": 2932,
									"nodeType": "InheritanceSpecifier",
									"src": "21566:5:8"
								},
								{
									"baseName": {
										"id": 2933,
										"name": "IERC20Permit",
										"nameLocations": [
											"21573:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2859,
										"src": "21573:12:8"
									},
									"id": 2934,
									"nodeType": "InheritanceSpecifier",
									"src": "21573:12:8"
								},
								{
									"baseName": {
										"id": 2935,
										"name": "EIP712",
										"nameLocations": [
											"21587:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1149,
										"src": "21587:6:8"
									},
									"id": 2936,
									"nodeType": "InheritanceSpecifier",
									"src": "21587:6:8"
								},
								{
									"baseName": {
										"id": 2937,
										"name": "Nonces",
										"nameLocations": [
											"21595:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2930,
										"src": "21595:6:8"
									},
									"id": 2938,
									"nodeType": "InheritanceSpecifier",
									"src": "21595:6:8"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3071,
							"linearizedBaseContracts": [
								3071,
								2930,
								1149,
								24,
								2859,
								2825,
								2242,
								2219,
								2142
							],
							"name": "ERC20Permit",
							"nameLocation": "21551:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2943,
									"mutability": "constant",
									"name": "_PERMIT_TYPEHASH",
									"nameLocation": "21687:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 3071,
									"src": "21662:148:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2939,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "21662:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 2941,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "21725:84:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 2940,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "21715:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2942,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "21715:95:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2944,
										"nodeType": "StructuredDocumentation",
										"src": "21819:54:8",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 2948,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "21885:23:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "21917:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "21909:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21909:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21908:18:8"
									},
									"src": "21879:48:8"
								},
								{
									"documentation": {
										"id": 2949,
										"nodeType": "StructuredDocumentation",
										"src": "21935:47:8",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 2955,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "21994:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "22023:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "22015:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22015:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22039:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "22031:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22031:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22014:31:8"
									},
									"src": "21988:58:8"
								},
								{
									"body": {
										"id": 2965,
										"nodeType": "Block",
										"src": "22334:2:8",
										"statements": []
									},
									"documentation": {
										"id": 2956,
										"nodeType": "StructuredDocumentation",
										"src": "22054:224:8",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 2966,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2961,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2958,
													"src": "22323:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 2962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22329:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 2963,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2960,
												"name": "EIP712",
												"nameLocations": [
													"22316:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1149,
												"src": "22316:6:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "22316:17:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "22310:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "22296:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2957,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22296:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22295:20:8"
									},
									"returnParameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22334:0:8"
									},
									"scope": 3071,
									"src": "22284:52:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2844
									],
									"body": {
										"id": 3042,
										"nodeType": "Block",
										"src": "22599:499:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2984,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "22614:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22620:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "22614:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2986,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2975,
														"src": "22632:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22614:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2993,
												"nodeType": "IfStatement",
												"src": "22610:99:8",
												"trueBody": {
													"id": 2992,
													"nodeType": "Block",
													"src": "22642:67:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2989,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2975,
																		"src": "22688:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2988,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2948,
																	"src": "22664:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22664:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2991,
															"nodeType": "RevertStatement",
															"src": "22657:40:8"
														}
													]
												}
											},
											{
												"assignments": [
													2995
												],
												"declarations": [
													{
														"constant": false,
														"id": 2995,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "22729:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 3042,
														"src": "22721:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2994,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22721:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3009,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2999,
																	"name": "_PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2943,
																	"src": "22763:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3000,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2969,
																	"src": "22781:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3001,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2971,
																	"src": "22788:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3002,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2973,
																	"src": "22797:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3004,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "22814:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3003,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2900,
																		"src": "22804:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 3005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22804:16:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3006,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2975,
																	"src": "22822:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2997,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "22752:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "22756:6:8",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "22752:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22752:79:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2996,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "22742:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22742:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22721:111:8"
											},
											{
												"assignments": [
													3011
												],
												"declarations": [
													{
														"constant": false,
														"id": 3011,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "22853:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 3042,
														"src": "22845:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3010,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22845:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3015,
												"initialValue": {
													"arguments": [
														{
															"id": 3013,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "22877:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3012,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "22860:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22860:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22845:43:8"
											},
											{
												"assignments": [
													3017
												],
												"declarations": [
													{
														"constant": false,
														"id": 3017,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "22909:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 3042,
														"src": "22901:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3016,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "22901:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3025,
												"initialValue": {
													"arguments": [
														{
															"id": 3020,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3011,
															"src": "22932:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3021,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2977,
															"src": "22938:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3022,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2979,
															"src": "22941:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3023,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2981,
															"src": "22944:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3018,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "22918:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$945_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 3019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22924:7:8",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 880,
														"src": "22918:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 3024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22918:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22901:45:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3026,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3017,
														"src": "22961:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3027,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2969,
														"src": "22971:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22961:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3035,
												"nodeType": "IfStatement",
												"src": "22957:90:8",
												"trueBody": {
													"id": 3034,
													"nodeType": "Block",
													"src": "22978:69:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3030,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3017,
																		"src": "23021:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3031,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2969,
																		"src": "23029:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3029,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2955,
																	"src": "23000:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 3032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23000:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3033,
															"nodeType": "RevertStatement",
															"src": "22993:42:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3037,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2969,
															"src": "23068:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3038,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2971,
															"src": "23075:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3039,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2973,
															"src": "23084:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3036,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2759,
														"src": "23059:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23059:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3041,
												"nodeType": "ExpressionStatement",
												"src": "23059:31:8"
											}
										]
									},
									"documentation": {
										"id": 2967,
										"nodeType": "StructuredDocumentation",
										"src": "22344:52:8",
										"text": " @dev See {IERC20Permit-permit}."
									},
									"functionSelector": "d505accf",
									"id": 3043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "22411:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22436:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "22428:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22428:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "22460:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "22452:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22452:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22486:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "22478:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22478:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "22510:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "22502:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22502:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "22535:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "22529:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2976,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "22529:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2979,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "22555:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "22547:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2978,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22547:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "22575:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "22567:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2980,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22567:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22417:166:8"
									},
									"returnParameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22599:0:8"
									},
									"scope": 3071,
									"src": "22402:696:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2852,
										2885
									],
									"body": {
										"id": 3059,
										"nodeType": "Block",
										"src": "23264:45:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3056,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3046,
															"src": "23295:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3054,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "23282:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$3071_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 3055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23288:6:8",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2885,
														"src": "23282:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23282:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3053,
												"id": 3058,
												"nodeType": "Return",
												"src": "23275:26:8"
											}
										]
									},
									"documentation": {
										"id": 3044,
										"nodeType": "StructuredDocumentation",
										"src": "23106:52:8",
										"text": " @dev See {IERC20Permit-nonces}."
									},
									"functionSelector": "7ecebe00",
									"id": 3060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "23173:6:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3050,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3048,
												"name": "IERC20Permit",
												"nameLocations": [
													"23224:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2859,
												"src": "23224:12:8"
											},
											{
												"id": 3049,
												"name": "Nonces",
												"nameLocations": [
													"23238:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2930,
												"src": "23238:6:8"
											}
										],
										"src": "23215:30:8"
									},
									"parameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23188:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "23180:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23180:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23179:15:8"
									},
									"returnParameters": {
										"id": 3053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "23255:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23255:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23254:9:8"
									},
									"scope": 3071,
									"src": "23164:145:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2858
									],
									"body": {
										"id": 3069,
										"nodeType": "Block",
										"src": "23507:46:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3066,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "23525:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 3067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23525:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3065,
												"id": 3068,
												"nodeType": "Return",
												"src": "23518:27:8"
											}
										]
									},
									"documentation": {
										"id": 3061,
										"nodeType": "StructuredDocumentation",
										"src": "23317:62:8",
										"text": " @dev See {IERC20Permit-DOMAIN_SEPARATOR}."
									},
									"functionSelector": "3644e515",
									"id": 3070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "23448:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23464:2:8"
									},
									"returnParameters": {
										"id": 3065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "23498:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3063,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23498:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23497:9:8"
									},
									"scope": 3071,
									"src": "23439:114:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 3099,
							"src": "21533:2023:8",
							"usedErrors": [
								37,
								39,
								2868,
								2948,
								2955
							],
							"usedEvents": [
								4,
								2153,
								2162
							]
						},
						{
							"id": 3072,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23564:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3073,
										"name": "ERC20Permit",
										"nameLocations": [
											"23609:11:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3071,
										"src": "23609:11:8"
									},
									"id": 3074,
									"nodeType": "InheritanceSpecifier",
									"src": "23609:11:8"
								}
							],
							"canonicalName": "ZNS",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3098,
							"linearizedBaseContracts": [
								3098,
								3071,
								2930,
								1149,
								24,
								2859,
								2825,
								2242,
								2219,
								2142
							],
							"name": "ZNS",
							"nameLocation": "23602:3:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3096,
										"nodeType": "Block",
										"src": "23736:51:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3091,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "23753:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23757:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23753:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3093,
															"name": "_totalSuperNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3076,
															"src": "23764:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3090,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2642,
														"src": "23747:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23747:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3095,
												"nodeType": "ExpressionStatement",
												"src": "23747:32:8"
											}
										]
									},
									"id": 3097,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3083,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3078,
													"src": "23712:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3084,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3082,
												"name": "ERC20Permit",
												"nameLocations": [
													"23700:11:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3071,
												"src": "23700:11:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "23700:17:8"
										},
										{
											"arguments": [
												{
													"id": 3086,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3078,
													"src": "23724:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 3087,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3080,
													"src": "23729:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3088,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3085,
												"name": "ERC20",
												"nameLocations": [
													"23718:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2825,
												"src": "23718:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "23718:18:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "_totalSuperNum",
												"nameLocation": "23644:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 3097,
												"src": "23639:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3075,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "23639:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "23673:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 3097,
												"src": "23659:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3077,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23659:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "23692:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 3097,
												"src": "23678:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3079,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23678:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23638:61:8"
									},
									"returnParameters": {
										"id": 3089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23736:0:8"
									},
									"scope": 3098,
									"src": "23627:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3099,
							"src": "23593:199:8",
							"usedErrors": [
								37,
								39,
								2868,
								2948,
								2955
							],
							"usedEvents": [
								4,
								2153,
								2162
							]
						}
					],
					"src": "112:23680:8"
				},
				"id": 8
			}
		}
	}
}